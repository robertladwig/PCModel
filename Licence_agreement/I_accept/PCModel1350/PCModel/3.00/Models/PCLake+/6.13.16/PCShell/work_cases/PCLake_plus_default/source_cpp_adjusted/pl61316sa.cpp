sTime = time + DayStart;
DaysInYear = DaysPerYear* 1;
aInclStrat =IF ( InclStrat EQ FALSE ) THEN 0.0 ELSE 1.0 ENDIF;
uDepthMixMeas =IF ( calcMixDepth EQ TRUE ) THEN cAMix * POW ( cFetch , (cBMix) ) ELSEIF (ReadMixDepth EQ TRUE) THEN mMixDepth ELSE cMixDepth ENDIF;
uDepthW= IF sDepthW GT (cMinDepthHypEpi + cMinDepthHypEpi) THEN sDepthW ELSE (cMinDepthHypEpi + cMinDepthHypEpi) ENDIF;
uDepthWHyp =IF ( ( aInclStrat EQ TRUE ) AND ((uDepthW - sMixDepthW ) GE cMinDepthHypEpi ) ) THEN uDepthW - sMixDepthW  ELSE cMinDepthHypEpi ENDIF;
uDepthWEpi =IF( ( aInclStrat EQ TRUE ) AND ( sMixDepthW GE cMinDepthHypEpi ) AND ( uDepthW GE sMixDepthW ) ) THEN sMixDepthW ELSEIF ( ( aInclStrat EQ TRUE ) AND ( (sMixDepthW LE cMinDepthHypEpi ) OR (uDepthW LE cMinDepthHypEpi ) ) ) THEN cMinDepthHypEpi ELSEIF ( aInclStrat EQ FALSE) THEN uDepthW ELSE uDepthW - uDepthWHyp ENDIF;
MassHyp = IF CalcMass EQ TRUE THEN uDepthWHyp ELSE 1.0 ENDIF;
MassEpi = IF CalcMass EQ TRUE THEN uDepthWEpi ELSE 1.0 ENDIF;
MassWM = IF CalcMass EQ TRUE THEN sDepthWM ELSE 1.0 ENDIF;
oNH4WHyp= IF sNH4WHyp GT NearZero THEN sNH4WHyp / MassHyp ELSE NearZero ENDIF;
oNO3WHyp= IF sNO3WHyp GT NearZero THEN sNO3WHyp / MassHyp ELSE NearZero ENDIF;
oPO4WHyp= IF sPO4WHyp GT NearZero THEN sPO4WHyp / MassHyp ELSE NearZero ENDIF;
oPAIMWHyp= IF sPAIMWHyp GT NearZero THEN sPAIMWHyp / MassHyp ELSE NearZero ENDIF;
oSiO2WHyp= IF sSiO2WHyp GT NearZero THEN sSiO2WHyp / MassHyp ELSE NearZero ENDIF;
oO2WHyp= IF sO2WHyp GT NearZero THEN sO2WHyp / MassHyp ELSE NearZero ENDIF;
oDDetWHyp= IF sDDetWHyp GT NearZero THEN sDDetWHyp / MassHyp ELSE NearZero ENDIF;
oNDetWHyp= IF sNDetWHyp GT NearZero THEN sNDetWHyp / MassHyp ELSE NearZero ENDIF;
oPDetWHyp= IF sPDetWHyp GT NearZero THEN sPDetWHyp / MassHyp ELSE NearZero ENDIF;
oSiDetWHyp= IF sSiDetWHyp GT NearZero THEN sSiDetWHyp / MassHyp ELSE NearZero ENDIF;
oDIMWHyp= IF sDIMWHyp GT NearZero THEN sDIMWHyp / MassHyp ELSE NearZero ENDIF;
oDDiatWHyp= IF sDDiatWHyp GT NearZero THEN sDDiatWHyp / MassHyp ELSE NearZero ENDIF;
oNDiatWHyp= IF sNDiatWHyp GT NearZero THEN sNDiatWHyp / MassHyp ELSE NearZero ENDIF;
oPDiatWHyp= IF sPDiatWHyp GT NearZero THEN sPDiatWHyp / MassHyp ELSE NearZero ENDIF;
oDGrenWHyp= IF sDGrenWHyp GT NearZero THEN sDGrenWHyp / MassHyp ELSE NearZero ENDIF;
oNGrenWHyp= IF sNGrenWHyp GT NearZero THEN sNGrenWHyp / MassHyp ELSE NearZero ENDIF;
oPGrenWHyp= IF sPGrenWHyp GT NearZero THEN sPGrenWHyp / MassHyp ELSE NearZero ENDIF;
oDBlueWHyp= IF sDBlueWHyp GT NearZero THEN sDBlueWHyp / MassHyp ELSE NearZero ENDIF;
oNBlueWHyp= IF sNBlueWHyp GT NearZero THEN sNBlueWHyp / MassHyp ELSE NearZero ENDIF;
oPBlueWHyp= IF sPBlueWHyp GT NearZero THEN sPBlueWHyp / MassHyp ELSE NearZero ENDIF;
oDZooHyp= IF sDZooHyp GT NearZero THEN sDZooHyp / MassHyp ELSE NearZero ENDIF;
oNZooHyp= IF sNZooHyp GT NearZero THEN sNZooHyp / MassHyp ELSE NearZero ENDIF;
oPZooHyp= IF sPZooHyp GT NearZero THEN sPZooHyp / MassHyp ELSE NearZero ENDIF;
aDFiAd= IF sDFiAd GT NearZero THEN sDFiAd ELSE NearZero ENDIF;
aDFiJv= IF sDFiJv GT NearZero THEN sDFiJv ELSE NearZero ENDIF;
aNFiAd= IF sNFiAd GT NearZero THEN sNFiAd ELSE NearZero ENDIF;
aNFiJv= IF sNFiJv GT NearZero THEN sNFiJv ELSE NearZero ENDIF;
aPFiAd= IF sPFiAd GT NearZero THEN sPFiAd ELSE NearZero ENDIF;
aPFiJv= IF sPFiJv GT NearZero THEN sPFiJv ELSE NearZero ENDIF;
aDPisc= IF sDPisc GT NearZero THEN sDPisc ELSE NearZero ENDIF;
aNH4S= IF sNH4S GT NearZero THEN sNH4S ELSE NearZero ENDIF;
aNO3S= IF sNO3S GT NearZero THEN sNO3S ELSE NearZero ENDIF;
aPO4S= IF sPO4S GT NearZero THEN sPO4S ELSE NearZero ENDIF;
aPAIMS= IF sPAIMS GT NearZero THEN sPAIMS ELSE NearZero ENDIF;
aDDetS= IF sDDetS GT NearZero THEN sDDetS ELSE NearZero ENDIF;
aNDetS= IF sNDetS GT NearZero THEN sNDetS ELSE NearZero ENDIF;
aPDetS= IF sPDetS GT NearZero THEN sPDetS ELSE NearZero ENDIF;
aSiDetS= IF sSiDetS GT NearZero THEN sSiDetS ELSE NearZero ENDIF;
aDHumS= IF sDHumS GT NearZero THEN sDHumS ELSE NearZero ENDIF;
aNHumS= IF sNHumS GT NearZero THEN sNHumS ELSE NearZero ENDIF;
aPHumS= IF sPHumS GT NearZero THEN sPHumS ELSE NearZero ENDIF;
aDIMS= IF sDIMS GT NearZero THEN sDIMS ELSE NearZero ENDIF;
aDDiatS= IF sDDiatS GT NearZero THEN sDDiatS ELSE NearZero ENDIF;
aNDiatS= IF sNDiatS GT NearZero THEN sNDiatS ELSE NearZero ENDIF;
aPDiatS= IF sPDiatS GT NearZero THEN sPDiatS ELSE NearZero ENDIF;
aDGrenS= IF sDGrenS GT NearZero THEN sDGrenS ELSE NearZero ENDIF;
aNGrenS= IF sNGrenS GT NearZero THEN sNGrenS ELSE NearZero ENDIF;
aPGrenS= IF sPGrenS GT NearZero THEN sPGrenS ELSE NearZero ENDIF;
aDBlueS= IF sDBlueS GT NearZero THEN sDBlueS ELSE NearZero ENDIF;
aNBlueS= IF sNBlueS GT NearZero THEN sNBlueS ELSE NearZero ENDIF;
aPBlueS= IF sPBlueS GT NearZero THEN sPBlueS ELSE NearZero ENDIF;
aDVeg= IF sDVeg GT NearZero THEN sDVeg ELSE NearZero ENDIF;
aNVeg= IF sNVeg GT NearZero THEN sNVeg ELSE NearZero ENDIF;
aPVeg= IF sPVeg GT NearZero THEN sPVeg ELSE NearZero ENDIF;
aVegHeight= IF sVegHeight GT NearZero THEN sVegHeight ELSE NearZero ENDIF;
aDBent= IF sDBent GT NearZero THEN sDBent ELSE NearZero ENDIF;
aNBent= IF sNBent GT NearZero THEN sNBent ELSE NearZero ENDIF;
aPBent= IF sPBent GT NearZero THEN sPBent ELSE NearZero ENDIF;
uDepthWM= IF sDepthWM GT NearZero THEN sDepthWM ELSE NearZero ENDIF;
oNH4WM= IF sNH4WM GT NearZero THEN sNH4WM / MassWM ELSE NearZero ENDIF;
oNO3WM= IF sNO3WM GT NearZero THEN sNO3WM / MassWM ELSE NearZero ENDIF;
oPO4WM= IF sPO4WM GT NearZero THEN sPO4WM / MassWM ELSE NearZero ENDIF;
oPAIMWM= IF sPAIMWM GT NearZero THEN sPAIMWM / MassWM ELSE NearZero ENDIF;
oSiO2WM= IF sSiO2WM GT NearZero THEN sSiO2WM / MassWM ELSE NearZero ENDIF;
oO2WM= IF sO2WM GT NearZero THEN sO2WM / MassWM ELSE NearZero ENDIF;
oDDetWM= IF sDDetWM GT NearZero THEN sDDetWM / MassWM ELSE NearZero ENDIF;
oNDetWM= IF sNDetWM GT NearZero THEN sNDetWM / MassWM ELSE NearZero ENDIF;
oPDetWM= IF sPDetWM GT NearZero THEN sPDetWM / MassWM ELSE NearZero ENDIF;
oSiDetWM= IF sSiDetWM GT NearZero THEN sSiDetWM / MassWM ELSE NearZero ENDIF;
oDIMWM= IF sDIMWM GT NearZero THEN sDIMWM / MassWM ELSE NearZero ENDIF;
oDDiatWM= IF sDDiatWM GT NearZero THEN sDDiatWM / MassWM ELSE NearZero ENDIF;
oNDiatWM= IF sNDiatWM GT NearZero THEN sNDiatWM / MassWM ELSE NearZero ENDIF;
oPDiatWM= IF sPDiatWM GT NearZero THEN sPDiatWM / MassWM ELSE NearZero ENDIF;
oDGrenWM= IF sDGrenWM GT NearZero THEN sDGrenWM / MassWM ELSE NearZero ENDIF;
oNGrenWM= IF sNGrenWM GT NearZero THEN sNGrenWM / MassWM ELSE NearZero ENDIF;
oPGrenWM= IF sPGrenWM GT NearZero THEN sPGrenWM / MassWM ELSE NearZero ENDIF;
oDBlueWM= IF sDBlueWM GT NearZero THEN sDBlueWM / MassWM ELSE NearZero ENDIF;
oNBlueWM= IF sNBlueWM GT NearZero THEN sNBlueWM / MassWM ELSE NearZero ENDIF;
oPBlueWM= IF sPBlueWM GT NearZero THEN sPBlueWM / MassWM ELSE NearZero ENDIF;
oDZooM= IF sDZooM GT NearZero THEN sDZooM / MassWM ELSE NearZero ENDIF;
oNZooM= IF sNZooM GT NearZero THEN sNZooM / MassWM ELSE NearZero ENDIF;
oPZooM= IF sPZooM GT NearZero THEN sPZooM / MassWM ELSE NearZero ENDIF;
aNH4SM= IF sNH4SM GT NearZero THEN sNH4SM ELSE NearZero ENDIF;
aNO3SM= IF sNO3SM GT NearZero THEN sNO3SM ELSE NearZero ENDIF;
aPO4SM= IF sPO4SM GT NearZero THEN sPO4SM ELSE NearZero ENDIF;
aPAIMSM= IF sPAIMSM GT NearZero THEN sPAIMSM ELSE NearZero ENDIF;
aDDetSM= IF sDDetSM GT NearZero THEN sDDetSM ELSE NearZero ENDIF;
aNDetSM= IF sNDetSM GT NearZero THEN sNDetSM ELSE NearZero ENDIF;
aPDetSM= IF sPDetSM GT NearZero THEN sPDetSM ELSE NearZero ENDIF;
aSiDetSM= IF sSiDetSM GT NearZero THEN sSiDetSM ELSE NearZero ENDIF;
aDHumSM= IF sDHumSM GT NearZero THEN sDHumSM ELSE NearZero ENDIF;
aNHumSM= IF sNHumSM GT NearZero THEN sNHumSM ELSE NearZero ENDIF;
aPHumSM= IF sPHumSM GT NearZero THEN sPHumSM ELSE NearZero ENDIF;
aDIMSM= IF sDIMSM GT NearZero THEN sDIMSM ELSE NearZero ENDIF;
aDRootPhra= IF sDRootPhra GT NearZero THEN sDRootPhra ELSE NearZero ENDIF;
aDShootPhra= IF sDShootPhra GT NearZero THEN sDShootPhra ELSE NearZero ENDIF;
aNRootPhra= IF sNRootPhra GT NearZero THEN sNRootPhra ELSE NearZero ENDIF;
aNShootPhra= IF sNShootPhra GT NearZero THEN sNShootPhra ELSE NearZero ENDIF;
aPRootPhra= IF sPRootPhra GT NearZero THEN sPRootPhra ELSE NearZero ENDIF;
aPShootPhra= IF sPShootPhra GT NearZero THEN sPShootPhra ELSE NearZero ENDIF;
oNH4WEpi= IF sNH4WEpi GT NearZero THEN sNH4WEpi / MassEpi ELSE NearZero ENDIF;
oNO3WEpi= IF sNO3WEpi GT NearZero THEN sNO3WEpi / MassEpi ELSE NearZero ENDIF;
oPO4WEpi= IF sPO4WEpi GT NearZero THEN sPO4WEpi / MassEpi ELSE NearZero ENDIF;
oPAIMWEpi= IF sPAIMWEpi GT NearZero THEN sPAIMWEpi / MassEpi ELSE NearZero ENDIF;
oSiO2WEpi= IF sSiO2WEpi GT NearZero THEN sSiO2WEpi / MassEpi ELSE NearZero ENDIF;
oO2WEpi= IF sO2WEpi GT NearZero THEN sO2WEpi / MassEpi ELSE NearZero ENDIF;
oDDetWEpi= IF sDDetWEpi GT NearZero THEN sDDetWEpi / MassEpi ELSE NearZero ENDIF;
oNDetWEpi= IF sNDetWEpi GT NearZero THEN sNDetWEpi / MassEpi ELSE NearZero ENDIF;
oPDetWEpi= IF sPDetWEpi GT NearZero THEN sPDetWEpi / MassEpi ELSE NearZero ENDIF;
oSiDetWEpi= IF sSiDetWEpi GT NearZero THEN sSiDetWEpi / MassEpi ELSE NearZero ENDIF;
oDIMWEpi= IF sDIMWEpi GT NearZero THEN sDIMWEpi / MassEpi ELSE NearZero ENDIF;
oDDiatWEpi= IF sDDiatWEpi GT NearZero THEN sDDiatWEpi / MassEpi ELSE NearZero ENDIF;
oNDiatWEpi= IF sNDiatWEpi GT NearZero THEN sNDiatWEpi / MassEpi ELSE NearZero ENDIF;
oPDiatWEpi= IF sPDiatWEpi GT NearZero THEN sPDiatWEpi / MassEpi ELSE NearZero ENDIF;
oDGrenWEpi= IF sDGrenWEpi GT NearZero THEN sDGrenWEpi / MassEpi ELSE NearZero ENDIF;
oNGrenWEpi= IF sNGrenWEpi GT NearZero THEN sNGrenWEpi / MassEpi ELSE NearZero ENDIF;
oPGrenWEpi= IF sPGrenWEpi GT NearZero THEN sPGrenWEpi / MassEpi ELSE NearZero ENDIF;
oDBlueWEpi= IF sDBlueWEpi GT NearZero THEN sDBlueWEpi / MassEpi ELSE NearZero ENDIF;
oNBlueWEpi= IF sNBlueWEpi GT NearZero THEN sNBlueWEpi / MassEpi ELSE NearZero ENDIF;
oPBlueWEpi= IF sPBlueWEpi GT NearZero THEN sPBlueWEpi / MassEpi ELSE NearZero ENDIF;
oDZooEpi= IF sDZooEpi GT NearZero THEN sDZooEpi / MassEpi ELSE NearZero ENDIF;
oNZooEpi= IF sNZooEpi GT NearZero THEN sNZooEpi / MassEpi ELSE NearZero ENDIF;
oPZooEpi= IF sPZooEpi GT NearZero THEN sPZooEpi / MassEpi ELSE NearZero ENDIF;
aDBlueSurf= IF sDBlueSurf GT NearZero THEN sDBlueSurf ELSE NearZero ENDIF;
aNBlueSurf= IF sNBlueSurf GT NearZero THEN sNBlueSurf  ELSE NearZero ENDIF;
aPBlueSurf= IF sPBlueSurf GT NearZero THEN sPBlueSurf  ELSE NearZero ENDIF;
aDExtTotT= sDExtTotT;
aNExtTotT= sNExtTotT ;
aPExtTotT=  sPExtTotT ;
aSiExtTotT= sSiExtTotT;
aO2ExtTotT=sO2ExtTotT ;
aDepthExtTotT=sDepthExtTotT ;
aDDetWEpi= IF sDDetWEpi GT NearZero THEN sDDetWEpi ELSE NearZero ENDIF;
aNDetWEpi= IF sNDetWEpi GT NearZero THEN sNDetWEpi  ELSE NearZero ENDIF;
aPDetWEpi= IF sPDetWEpi GT NearZero THEN sPDetWEpi  ELSE NearZero ENDIF;
aSiDetWEpi= IF sSiDetWEpi GT NearZero THEN sSiDetWEpi ELSE NearZero ENDIF;
aDIMWEpi= IF sDIMWEpi GT NearZero THEN aDIMWEpi  ELSE NearZero ENDIF;
aDDiatWEpi= IF sDDiatWEpi GT NearZero THEN sDDiatWEpi ELSE NearZero ENDIF;
aNDiatWEpi= IF sNDiatWEpi GT NearZero THEN sNDiatWEpi  ELSE NearZero ENDIF;
aPDiatWEpi= IF sPDiatWEpi GT NearZero THEN sPDiatWEpi  ELSE NearZero ENDIF;
aDGrenWEpi= IF sDGrenWEpi GT NearZero THEN sDGrenWEpi ELSE NearZero ENDIF;
aNGrenWEpi= IF sNGrenWEpi GT NearZero THEN sNGrenWEpi ELSE NearZero ENDIF;
aPGrenWEpi= IF sPGrenWEpi GT NearZero THEN sPGrenWEpi ELSE NearZero ENDIF;
aDBlueWEpi= IF sDBlueWEpi GT NearZero THEN sDBlueWEpi ELSE NearZero ENDIF;
aNBlueWEpi= IF sNBlueWEpi GT NearZero THEN sNBlueWEpi  ELSE NearZero ENDIF;
aPBlueWEpi= IF sPBlueWEpi GT NearZero THEN sPBlueWEpi ELSE NearZero ENDIF;
aDBlueWHyp= IF sDBlueWEpi GT NearZero THEN sDBlueWEpi ELSE NearZero ENDIF;
TimeYears = sTime / DaysPerYear;
Day = sTime - FLOOR(TimeYears) * DaysPerYear;
Years = YearZero + TimeYears;
aVegEHeight =   POW ( cVegHPar1*aDVeg , cVegHPar2 ) ;
uVegHeight =  IF ( UseVegHeight EQ FALSE AND  aVegHeight LT uDepthW ) THEN aVegHeight ELSEIF ( UseVegHeight EQ FALSE ) THEN ( uDepthW ) ELSE MIN ( aVegHeight , uDepthW , aVegEHeight ) ENDIF;
uVegHeightHyp = IF ( aInclStrat EQ FALSE ) THEN 0.0 ELSEIF (uVegHeight GT uDepthWHyp ) THEN uDepthWHyp ELSE uVegHeight ENDIF;
uVegHeightEpi = IF ( aInclStrat EQ FALSE AND uVegHeight LT uDepthWEpi ) THEN uVegHeight ELSEIF ( aInclStrat EQ FALSE AND uVegHeight GE uDepthWEpi ) THEN uDepthWEpi ELSEIF (uVegHeight GT uDepthWHyp ) THEN uVegHeight -uDepthWHyp ELSE 0.0 ENDIF;
aDepth2VegHyp = IF ( aInclStrat EQ TRUE AND fDepth2Veg GE 1 ) THEN uDepthWHyp  ELSEIF ( aInclStrat EQ TRUE AND fDepth2Veg LT 1 ) THEN MAX (0.0, uVegHeight - uDepthWEpi ) ELSE 0.0 ENDIF;
aDepth1VegHyp = IF ( aInclStrat EQ TRUE AND fDepth2Veg GE 1 ) THEN uDepthWHyp - uVegHeightHyp  ELSE 0.0 ENDIF;
aDepth2VegEpi = IF (fDepth2Veg GE 1 ) THEN uDepthWEpi ELSE uDepthWEpi - uVegHeightEpi ENDIF;
aDepth1VegEpi = IF (fDepth2Veg GE 1 ) THEN uDepthWEpi - uVegHeightEpi  ELSE 0.0 ENDIF;
uVegHeightLight = cVegL *LN( 1.0 + uVegHeight );
uVegHeightLightSum = cVegL *LN( 1.0 + MAX (uVegHeight, MIN (uDepthW, cVegHeight) ) );
uVegHeightLightEpi = IF (  uVegHeightLight GT uVegHeightEpi ) THEN uVegHeightEpi ELSE uVegHeightLight ENDIF;
uVegHeightLightHyp =  uVegHeightLight - uVegHeightLightEpi  ;
uDVegHyp = uVegHeightHyp / uVegHeight * aDVeg;
uDVegEpi = uVegHeightEpi / uVegHeight * aDVeg;
uVegShade = IF ( ReadVegShade  EQ  TRUE) THEN mVegShade ELSE fVegShade ENDIF;
aExtPhytHyp = cExtSpDiat * oDDiatWHyp + cExtSpGren * oDGrenWHyp + cExtSpBlue * oDBlueWHyp;
aExtDetHyp = cExtSpDet * oDDetWHyp;
aExtIMHyp = cExtSpIM * oDIMWHyp;
aExtCoefOpenHyp = cExtWat + aExtIMHyp + aExtDetHyp + aExtPhytHyp;
aExtPhytEpi = cExtSpDiat * oDDiatWEpi + cExtSpGren * oDGrenWEpi + cExtSpBlue * oDBlueWEpi;
aExtDetEpi = cExtSpDet * oDDetWEpi;
aExtIMEpi = cExtSpIM * oDIMWEpi;
aExtCoefOpenEpi = cExtWat + aExtIMEpi + aExtDetEpi + aExtPhytEpi;
aExtSurf = cExtSpBlue * aDBlueSurf;
aTmEpi =  cTmAveEpi - cTmVarEpi * COS(2.0*Pi*(sTime + TenDays - cTimeLag) / DaysInYear) ;
aTmHyp =  cTmAveHyp - cTmVarHyp * COS(2.0*Pi*(sTime + TenDays - cTimeLag) / DaysInYear) ;
uTmEpi = IF (FALSE EQ InclSeason) THEN cTmAveEpi ELSEIF (ReadTemp EQ TRUE) THEN mTempEpi ELSEIF ( aTmEpi GT 0.0  ) THEN aTmEpi ELSE  0.0 ENDIF;
uTmHyp = IF (FALSE EQ InclSeason) THEN cTmAveHyp ELSEIF (ReadTemp EQ TRUE) THEN mTempHyp ELSEIF ( aTmHyp GT 0.0  ) THEN aTmHyp ELSE  0.0 ENDIF;
uTmBot = IF (aInclStrat EQ TRUE ) THEN uTmHyp ELSE uTmEpi ENDIF;
uTmSurf = uTmEpi;
uLAT= cLAT*2*Pi/360;
uSolDecAng= IF(InclLat EQ TRUE) THEN cPhiR*COS(2*Pi*(Day-cDayR)/DaysInYear) ELSE 0.0 ENDIF;
uSunRise = HoursInDay/(2*Pi)*ACOS((SIN(uLAT)* SIN(uSolDecAng))/(COS(uLAT)*COS(uSolDecAng))) ;
uSunSet=HoursInDay-uSunRise;
uSunHours=uSunSet-uSunRise;
uSunPath= IF(InclLat EQ TRUE) THEN SIN(uLAT)*SIN( uSolDecAng )*( uSunSet-uSunRise)- COS(uLAT) * COS (uSolDecAng) * HoursInDay / (2*Pi) * ( SIN (2*Pi*uSunSet/HoursInDay ) -SIN(2*Pi*uSunRise /HoursInDay )) ELSE 0.0 ENDIF;
uTrans=IF((InclLat EQ TRUE) AND (ConstTrans EQ FALSE)) THEN (0.6-0.2*(uSunPath/(uSunSet - uSunRise)))*(1-0.4*fCloudH) *(1-0.7* fCloudM) *(1-0.4*fCloudL)ELSEIF ((InclLat EQ TRUE) AND (ConstTrans EQ TRUE)) THEN cTrans ELSE 0.0 ENDIF;
ufDay = IF (FALSE EQ InclSeason) THEN cfDayAve ELSEIF (InclLat EQ TRUE) THEN (uSunSet -uSunRise )/ HoursInDay ELSE cfDayAve - cfDayVar * COS( 2.0 *Pi*(sTime+TenDays) / DaysInYear) ENDIF;
uLDay = IF (FALSE EQ InclSeason) THEN cLDayAve ELSEIF (ReadLOut EQ TRUE) THEN 0.0 ELSEIF (InclLat EQ TRUE) THEN cSolar*uTrans*uSunPath * SecsPerDay /HoursInDay ELSE cLDayAve - cLDayVar * COS(2.0*Pi*(sTime+TenDays) / DaysInYear) ENDIF;
uLOut = IF (FALSE EQ InclSeason) THEN uLDay / SecsPerDay / ufDay ELSEIF (ReadLOut EQ TRUE) THEN mLOut / ufDay ELSE uLDay / SecsPerDay / ufDay ENDIF;
uLPARSurf = fPAR * (1.0 - fRefl) * uLOut;
aLPARBotSurf = IF (InclSurf EQ TRUE) THEN uLPARSurf * EXP(- aExtSurf) ELSE uLPARSurf ENDIF;
aLPARBotEpiOpen = aLPARBotSurf * EXP(- aExtCoefOpenEpi * uDepthWEpi);
aLPARBotHypOpen = aLPARBotEpiOpen * EXP(- aExtCoefOpenHyp * uDepthWHyp);
aLPAR1VegEpi = aLPARBotSurf * EXP(- aExtCoefOpenEpi * aDepth1VegEpi) * ( 1 - uVegShade );
aLPAR1VegHyp = aLPAR1VegEpi * EXP(- aExtCoefOpenHyp * aDepth1VegHyp);
aLPARVegLight =  IF  ( aInclStrat EQ TRUE AND  uVegHeight LE uDepthWHyp ) THEN aLPAR1VegHyp *   EXP(- aExtCoefOpenHyp * uVegHeightLightEpi) ELSE aLPAR1VegEpi *  EXP(- aExtCoefOpenEpi * uVegHeightLightEpi)  *  EXP(- aExtCoefOpenHyp * uVegHeightLightEpi) ENDIF;
uTmVegAve = ( uVegHeightHyp * uTmHyp + uVegHeightEpi * uTmEpi ) / uVegHeight;
uFunTmVeg = EXP(-0.5/(cSigTmVeg*cSigTmVeg) *((uTmVegAve-cTmOptVeg)*(uTmVegAve-cTmOptVeg) - (cTmRef-cTmOptVeg)*(cTmRef-cTmOptVeg)));
uFunTmProdVeg = IF ( UseExpVeg EQ TRUE ) THEN uFunTmVeg ELSE POW ( cQ10ProdVeg , (0.1 * (uTmVegAve - cTmRef))) ENDIF;
uhLVeg = hLRefVeg * uFunTmProdVeg;
aLPIVeg = IF ( aInclStrat EQ TRUE AND  uVegHeight GT uDepthWHyp ) THEN cPMax*(aLPAR1VegEpi- aLPARVegLight + uhLVeg*LN((1.0 +aLPARVegLight/ uhLVeg)  /(1.0 +aLPAR1VegEpi  / uhLVeg) + NearZero  ) )ELSEIF  ( aInclStrat EQ TRUE AND  uVegHeight LE uDepthWHyp ) THEN cPMax*( aLPAR1VegHyp- aLPARVegLight + uhLVeg* LN((1.0 +aLPARVegLight/ uhLVeg)  / (1.0 +aLPAR1VegHyp  / uhLVeg) ) ) ELSE cPMax * (aLPAR1VegEpi- aLPARVegLight + uhLVeg*LN((1.0 +aLPARVegLight/ uhLVeg)  /(1.0 +aLPAR1VegEpi  / uhLVeg) + NearZero  ) )ENDIF;
aSpring =  IF ( cLAT LT 0 AND Day GE 265 AND Day LE 356 ) THEN 1 ELSEIF ( cLAT GT 0 AND Day GE 80 AND Day LE 173) THEN 1 ELSEIF ( cLAT EQ 0) THEN 1 ELSE 0 ENDIF;
aTimeWinVeg =  IF ( sTime LT StartTime + 1.0 ) THEN -999 ELSEIF ( UsePhotVeg EQ FALSE  AND  ( uTmBot GE cTmInitVeg )  AND aSpring EQ 1 ) THEN sTime  ELSEIF (UsePhotVeg EQ TRUE  AND  uSunHours GE cPhotInitVeg   AND aSpring EQ 1 ) THEN sTime ELSEIF (( aLPIVeg / uVegHeightLight )LE cLAlloVeg ) THEN aTimeWinVeg ELSEIF (FLOOR ( sTime+ 0.3 ) - FLOOR (aTimeWinVeg + 0.3) GT 1 AND FLOOR ( sTime+ 0.3 ) - FLOOR (aTimeWinVeg + 0.3) LT cVegWinLen ) THEN aTimeWinVeg ELSE sTime ENDIF ;
aTimeInitVeg =  IF ( sTime LT StartTime + 1.0 ) THEN -999 ELSEIF ( FLOOR ( sTime+ 0.3 ) - FLOOR (aTimeWinVeg + 0.3) GT 1 ) THEN sTime ELSEIF ( UsePhotVeg EQ FALSE  AND  uTmBot GE cTmInitVeg ) THEN aTimeInitVeg ELSEIF ( UsePhotVeg EQ TRUE  AND    uSunHours GE cPhotInitVeg  ) THEN aTimeInitVeg ELSEIF (UsePhotVeg EQ FALSE  AND  uTmBot LT cTmInitVeg AND ( ( aLPIVeg / uVegHeightLight ) GE cLAlloVeg ) AND FLOOR ( sTime+ 0.3 ) - FLOOR (aTimeInitVeg + 0.3) GT 1) THEN aTimeInitVeg ELSEIF (UsePhotVeg EQ TRUE  AND   uSunHours LT cPhotInitVeg AND ( ( aLPIVeg / uVegHeightLight ) GE cLAlloVeg ) AND FLOOR ( sTime+ 0.3 ) - FLOOR (aTimeInitVeg + 0.3) GT 1) THEN aTimeInitVeg ELSEIF (FLOOR ( sTime+ 0.3 ) - FLOOR (aTimeInitVeg + 0.3) GT 1 AND FLOOR ( sTime+ 0.3 ) - FLOOR (aTimeInitVeg + 0.3) LT cVegInitLen ) THEN aTimeInitVeg ELSE sTime ENDIF ;
aTimeWinVegCor = IF ( UseLWinVeg LE NearZero ) THEN FLOOR (TimeYears - 1) + cDayWinVeg  ELSE aTimeWinVeg ENDIF;
aDayInitVeg = IF (Day LT 1.0 OR sTime LT StartTime + 1.0) THEN 367 ELSEIF (uTmBot GE cTmInitVeg AND aDayInitVeg GT 366) THEN Day ELSE aDayInitVeg ENDIF;
aTimeInitVegCor = IF (UsePhotVeg LE NearZero AND UseLWinVeg LE NearZero ) THEN  (TimeYears - 1)  + aDayInitVeg  ELSE aTimeInitVeg ENDIF;
aVegSum =  IF ( FLOOR ( aTimeInitVegCor + 0.3) LT FLOOR (  sTime + 0.3 ) AND FLOOR ( aTimeWinVegCor + 0.3 ) EQ FLOOR (  sTime  + 0.3 ) ) THEN 1 ELSE 0 ENDIF;
aVegWin =  1 - aVegSum;
aDaysVegSum = ( FLOOR ( sTime+ 0.3) - FLOOR (aTimeInitVegCor + 0.3) ) * aVegSum;
aDaysVegWin = ( FLOOR ( sTime + 0.3) - FLOOR ( aTimeWinVegCor  + 0.3 )  ) * aVegWin;
bfRootVeg = IF (FALSE EQ InclSeason) THEN fRootVegSum ELSEIF (aVegWin EQ TRUE AND aDaysVegWin GT cLengAllo) THEN fRootVegWin ELSEIF (aVegSum EQ TRUE AND aDaysVegSum LE cLengAllo) THEN 0.5*(fRootVegWin + fRootVegSum) + 0.5*(fRootVegWin - fRootVegSum) * COS ( Pi /cLengAllo * ( sTime - aTimeInitVegCor )) ELSEIF ( aVegWin EQ TRUE AND aDaysVegWin EQ 0) THEN fRootVegWin ELSEIF ( aVegWin EQ TRUE) THEN 0.5*( fRootVegWin + fRootVegSum) - 0.5*( fRootVegWin - fRootVegSum) * COS ( Pi / cLengAllo * ( sTime - aTimeWinVegCor )) ELSE fRootVegSum ENDIF;
bfShootVeg = 1.0 - bfRootVeg;
aDShootVeg = bfShootVeg * aDVeg;
aDEmergVeg = fEmergVeg * aDShootVeg;
aDFloatVeg = IF  ( aDepth1VegEpi LT 0.005 ) THEN fFloatVeg * aDShootVeg ELSE 0 ENDIF;
bfSubVeg = 1.0 - fFloatVeg - fEmergVeg;
aDSubVeg = bfSubVeg * aDShootVeg;
aExtVegHyp = cExtSpVeg * aDSubVeg / uDepthWHyp * (uVegHeightHyp /uDepthW );
aExtCoefHyp = aExtCoefOpenHyp + aExtVegHyp;
aExtVegEpi = cExtSpVeg * aDSubVeg / uDepthWEpi * (uVegHeightEpi /uDepthW ) ;
aExtCoefEpi = aExtCoefOpenEpi + aExtVegEpi;
aLPARBotEpi = aLPARBotSurf * EXP(- aExtCoefEpi * uDepthWEpi);
uLPARSurfHyp = IF ( aInclStrat EQ TRUE ) THEN aLPARBotEpi ELSE 0.0 ENDIF;
aLPAR2VegEpi = aLPAR1VegEpi * EXP(- aExtCoefEpi * (aDepth2VegEpi - aDepth1VegEpi));
aLPAR2VegHyp = aLPAR1VegHyp * EXP(- aExtCoefHyp * (aDepth2VegHyp - aDepth1VegHyp));
uVWind = IF (ReadVWind EQ TRUE)THEN mVWind ELSE cVWind ENDIF;
aStrat = IF (ReadStrat EQ TRUE) THEN mStrat ELSEIF ((uTmEpi -uTmHyp) GT  cStratTm OR (uTmHyp -uTmEpi) GT  cStratTm) THEN 1.0  ELSE 0.0 ENDIF;
uQInSeason = IF (FALSE EQ UseSeasonLoad) THEN 0.0 ELSEIF (Day LT cDayApril1 - 0.5*cLengChange) THEN cQInWin ELSEIF (Day LT cDayApril1 + 0.5*cLengChange) THEN 0.5*(cQInWin + cQInSum) + 0.5*(cQInWin - cQInSum) * COS(Pi/cLengChange * (Day - cDayApril1)) ELSEIF (Day LT cDayOct1 - 0.5*cLengChange) THEN cQInSum ELSEIF (Day LT cDayOct1 + 0.5*cLengChange) THEN 0.5*(cQInWin + cQInSum) - 0.5*(cQInWin - cQInSum) * COS(Pi/cLengChange * (Day - cDayOct1)) ELSE cQInWin ENDIF;
uQEvSinus = cQEvAve - cQEvVar * COS(2.0*Pi * (sTime + TenDays - cTimeLag) / DaysInYear);
aQEv = IF (10 *uTmEpi /cHeat) LE NearZero THEN 16 * 2*ufDay * 1 / 30 * POW ( NearZero , (cAlpha) ) ELSE 16 * 2*ufDay * 1 / 30 * POW ( 10 *uTmEpi /cHeat , (cAlpha) ) ENDIF;
uQEv = IF (FALSE EQ InclSeason) THEN cQEvAve ELSEIF (ReadQEv EQ TRUE) THEN mQEv ELSEIF (calcQEv EQ TRUE ) THEN aQEv ELSE uQEvSinus ENDIF;
uDepthDifMeas = IF ( ReadDepthW EQ TRUE ) THEN mDepthW - uDepthW ELSE 0.0 ENDIF;
uQInCor = IF (uDepthDifMeas GE 0) THEN uDepthDifMeas * cMaxWOut * mmPerm ELSE 0.0 ENDIF;
uQOutCor = IF (uDepthDifMeas LT 0) THEN -1 * uDepthDifMeas * cMaxWOut * mmPerm ELSE 0.0 ENDIF;
uQInEpi = IF ((ReadQIn EQ TRUE) OR (ReadTranFrac EQ TRUE)) THEN mQInEpi + uQInCor ELSEIF (UseSeasonLoad EQ TRUE) THEN uQInSeason + uQInCor ELSE cQInEpi + uQInCor ENDIF;
uQInHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF ((ReadQIn EQ TRUE) OR (ReadTranFrac EQ TRUE)) THEN mQInHyp ELSE 0.0 ENDIF;
aQInTot = uQInEpi + uQInHyp;
uQPrec = IF (ReadQPrec EQ TRUE) THEN mQPrec ELSE 0 ENDIF;
uQInSeep = IF (ReadQGround EQ TRUE) THEN mQInSeep ELSE cQInSeep ENDIF;
uQOutInf = IF (ReadQGround EQ TRUE) THEN mQOutInf ELSE cQOutInf ENDIF;
uQOutPot = uQPrec + uQInEpi - uQInCor + uQInHyp + uQInSeep - uQEv - uQOutCor - uQOutInf;
aMaxQOutEpi = IF ( uDepthWEpi LE cMinDepthHypEpi ) THEN 0.0 ELSE uDepthWEpi * mmPerm * cMaxWOut ENDIF;
aMaxQOutHyp = IF (aInclStrat EQ TRUE) AND ( uDepthWHyp GT cMinDepthHypEpi ) THEN (uDepthWHyp - cMinDepthHypEpi) * mmPerm * cMaxWOut ELSE 0.0 ENDIF;
uQOutEpi = IF (ReadQOut EQ TRUE) THEN MIN(mQOutEpi, aMaxQOutEpi) ELSE MIN(aMaxQOutEpi, MAX(0.0, uQOutPot)) ENDIF;
uQOutHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadQOut EQ TRUE) THEN MIN(mQOutHyp, aMaxQOutHyp) ELSE MIN(aMaxQOutHyp, MAX(0.0, (uQOutPot - uQOutEpi))) ENDIF;
ukOutEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uQOutEpi / mmPerm / uDepthWEpi ENDIF;
ukOutHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uQOutHyp / mmPerm / uDepthWHyp ENDIF;
uTauWatEpi = IF (aInclStrat EQ FALSE) THEN 1.0 / ((uQInEpi + uQPrec + uQInSeep) / mmPerm / uDepthWEpi +NearZero) ELSE 1.0 / (( uQInEpi + uQPrec ) / mmPerm / uDepthWEpi +NearZero) ENDIF;
uTauWatHyp = IF (aInclStrat EQ FALSE )THEN -9999 ELSE 1.0 / ((uQInHyp + uQInSeep ) / mmPerm / uDepthWHyp +NearZero) ENDIF;
uTauWat = 1.0 / ((uQPrec + uQInEpi + uQInHyp + uQInSeep ) / mmPerm / uDepthW +NearZero);
uTauSubstHyp = 1.0 / (ukOutHyp+NearZero);
uFiJvMortHyp = IF (aInclStrat EQ TRUE ) THEN fFiJvMortHyp ELSE 0.0 ENDIF;
uFiJvEgesHyp = IF (aInclStrat EQ TRUE ) THEN fFiJvEgesHyp ELSE 0.0 ENDIF;
uFiJvExcrHyp = IF (aInclStrat EQ TRUE ) THEN fFiJvExcrHyp ELSE 0.0 ENDIF;
uFiAdMortHyp = IF (aInclStrat EQ TRUE ) THEN fFiAdMortHyp ELSE 0.0 ENDIF;
uFiAdEgesHyp = IF (aInclStrat EQ TRUE ) THEN fFiAdEgesHyp ELSE 0.0 ENDIF;
uFiAdExcrHyp = IF (aInclStrat EQ TRUE ) THEN fFiAdExcrHyp ELSE 0.0 ENDIF;
uPiscMortHyp = IF (aInclStrat EQ TRUE ) THEN fPiscMortHyp ELSE 0.0 ENDIF;
uPiscEgesHyp = IF (aInclStrat EQ TRUE ) THEN fPiscEgesHyp ELSE 0.0 ENDIF;
uPiscExcrHyp = IF (aInclStrat EQ TRUE ) THEN fPiscExcrHyp ELSE 0.0 ENDIF;
vTranDepthW = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN (uQInEpi + uQInHyp + uQPrec + uQInSeep - uQEv - uQOutInf - uQOutHyp - uQOutEpi - uQOutCor) / mmPerm ELSE ((uQInEpi + uQInHyp + uQPrec + uQInSeep - uQEv - uQOutInf - uQOutHyp - uQOutEpi - uQOutCor) / mmPerm) / (1.0 + fMarsh) ENDIF;
vTranHypEpiW = IF (InclStrat EQ FALSE) THEN 0.0 ELSEIF ( uDepthW -uDepthMixMeas LT cMinDepthHypEpi ) THEN ( uDepthW - cMinDepthHypEpi -uDepthWEpi ) * kExchW ELSEIF ( uDepthMixMeas LT cMinDepthHypEpi ) THEN ( cMinDepthHypEpi -uDepthWEpi ) * kExchW ELSE ( uDepthMixMeas -uDepthWEpi ) * kExchW ENDIF;
vDeltaWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (InclMarsh EQ FALSE OR fMarsh LE NearZero ) THEN (uQInHyp + uQInSeep - uQOutInf - uQOutHyp) / mmPerm ELSE (uQInHyp + uQInSeep - uQOutInf - uQOutHyp) / mmPerm / (1.0 + fMarsh ) ENDIF;
vDeltaWEpi = IF (aInclStrat EQ FALSE) AND (InclMarsh EQ FALSE OR fMarsh LE NearZero ) THEN (uQInEpi + uQPrec + uQInSeep - uQEv - uQOutEpi - uQOutInf - uQOutCor) / mmPerm ELSEIF (aInclStrat EQ TRUE) AND (InclMarsh EQ FALSE OR fMarsh LE NearZero ) THEN (uQInEpi + uQPrec - uQEv - uQOutEpi - uQOutCor) / mmPerm ELSEIF (aInclStrat EQ FALSE) AND (InclMarsh EQ TRUE AND fMarsh GT NearZero ) THEN (uQInEpi + uQPrec + uQInSeep - uQEv - uQOutEpi - uQOutInf - uQOutCor) / mmPerm / (1.0 + fMarsh ) ELSE (uQInEpi + uQPrec - uQEv - uQOutEpi - uQOutCor) / mmPerm / (1.0 + fMarsh ) ENDIF;
afVolHypEpi= IF (aInclStrat EQ TRUE AND uDepthWHyp GT NearZero) THEN  uDepthWHyp / uDepthWEpi ELSE 0.0 ENDIF;
wDAdvIMW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDIMWHyp ELSE vTranHypEpiW * oDIMWEpi ENDIF;
wPAdvPO4W = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPO4WHyp ELSE vTranHypEpiW * oPO4WEpi ENDIF;
wPAdvAIMW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPAIMWHyp ELSE vTranHypEpiW * oPAIMWEpi ENDIF;
wNAdvNH4W = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNH4WHyp ELSE vTranHypEpiW * oNH4WEpi ENDIF;
wNAdvNO3W = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNO3WHyp ELSE vTranHypEpiW * oNO3WEpi ENDIF;
wSiAdvSiO2W = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oSiO2WHyp ELSE vTranHypEpiW * oSiO2WEpi ENDIF;
wO2AdvW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oO2WHyp ELSE vTranHypEpiW * oO2WEpi ENDIF;
wDAdvDetW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDDetWHyp ELSE vTranHypEpiW * oDDetWEpi ENDIF;
wPAdvDetW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPDetWHyp ELSE vTranHypEpiW * oPDetWEpi ENDIF;
wNAdvDetW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNDetWHyp ELSE vTranHypEpiW * oNDetWEpi ENDIF;
wSiAdvDetW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oSiDetWHyp ELSE vTranHypEpiW * oSiDetWEpi ENDIF;
wDAdvDiatW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDDiatWHyp ELSE vTranHypEpiW * oDDiatWEpi ENDIF;
wPAdvDiatW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPDiatWHyp ELSE vTranHypEpiW * oPDiatWEpi ENDIF;
wNAdvDiatW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNDiatWHyp ELSE vTranHypEpiW * oNDiatWEpi ENDIF;
wSiAdvDiatW = vTranHypEpiW * cSiDDiat;
wDAdvGrenW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDGrenWHyp ELSE vTranHypEpiW * oDGrenWEpi ENDIF;
wPAdvGrenW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPGrenWHyp ELSE vTranHypEpiW * oPGrenWEpi ENDIF;
wNAdvGrenW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNGrenWHyp ELSE vTranHypEpiW * oNGrenWEpi ENDIF;
wDAdvBlueW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDBlueWHyp ELSE vTranHypEpiW * oDBlueWEpi ENDIF;
wPAdvBlueW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPBlueWHyp ELSE vTranHypEpiW * oPBlueWEpi ENDIF;
wNAdvBlueW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNBlueWHyp ELSE vTranHypEpiW * oNBlueWEpi ENDIF;
wDAdvZooW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oDZooHyp ELSE vTranHypEpiW * oDZooEpi ENDIF;
wPAdvZooW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oPZooHyp ELSE vTranHypEpiW * oPZooEpi ENDIF;
wNAdvZooW = IF ( vTranHypEpiW GT 0.0) THEN vTranHypEpiW * oNZooHyp ELSE vTranHypEpiW * oNZooEpi ENDIF;
wDAdvIMWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDIMWEpi ELSE vTranDepthW *  oDIMWM ENDIF;
wPAdvPO4WM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPO4WEpi ELSE vTranDepthW *  oPO4WM ENDIF;
wPAdvAIMWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPAIMWEpi ELSE vTranDepthW *  oPAIMWM ENDIF;
wNAdvNH4WM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNH4WEpi ELSE vTranDepthW *  oNH4WM ENDIF;
wNAdvNO3WM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNO3WEpi ELSE vTranDepthW *  oNO3WM ENDIF;
wSiAdvSiO2WM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oSiO2WEpi ELSE vTranDepthW *  oSiO2WM ENDIF;
wO2AdvWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oO2WEpi ELSE vTranDepthW *  oO2WM ENDIF;
wDAdvDetWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDDetWEpi ELSE vTranDepthW *  oDDetWM ENDIF;
wPAdvDetWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPDetWEpi ELSE vTranDepthW *  oPDetWM ENDIF;
wNAdvDetWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNDetWEpi ELSE vTranDepthW *  oNDetWM ENDIF;
wSiAdvDetWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oSiDetWEpi ELSE vTranDepthW *  oSiDetWM ENDIF;
wDAdvDiatWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDDiatWEpi ELSE vTranDepthW *  oDDiatWM ENDIF;
wPAdvDiatWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPDiatWEpi ELSE vTranDepthW *  oPDiatWM ENDIF;
wNAdvDiatWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNDiatWEpi ELSE vTranDepthW *  oNDiatWM ENDIF;
wDAdvGrenWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDGrenWEpi ELSE vTranDepthW *  oDGrenWM ENDIF;
wPAdvGrenWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPGrenWEpi ELSE vTranDepthW *  oPGrenWM ENDIF;
wNAdvGrenWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNGrenWEpi ELSE vTranDepthW *  oNGrenWM ENDIF;
wDAdvBlueWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDBlueWEpi ELSE vTranDepthW *  oDBlueWM ENDIF;
wPAdvBlueWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPBlueWEpi ELSE vTranDepthW *  oPBlueWM ENDIF;
wNAdvBlueWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNBlueWEpi ELSE vTranDepthW *  oNBlueWM ENDIF;
wDAdvZooWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oDZooEpi ELSE vTranDepthW *  oDZooM ENDIF;
wPAdvZooWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oPZooEpi ELSE vTranDepthW *  oPZooM ENDIF;
wNAdvZooWM= IF (InclMarsh EQ FALSE OR fMarsh LT NearZero) THEN 0.0 ELSEIF ( vTranDepthW GT 0.0) THEN vTranDepthW * oNZooEpi ELSE vTranDepthW *  oNZooM ENDIF;
uExchMaxW =   IF ( aInclStrat EQ TRUE) THEN kExchMaxW /( aStrat* fMeta * uDepthW + cDepthMetaMin ) ELSE 0.0 ENDIF;
akExchWHyp= IF (aInclStrat EQ TRUE AND uDepthWHyp GT NearZero) THEN  ( uExchMaxW ) / uDepthWHyp ELSE 0.0 ENDIF;
akExchWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWHyp * afVolHypEpi ELSE 0.0 ENDIF;
wDExchIMWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDIMWHyp - oDIMWEpi) ELSE 0.0 ENDIF;
wPExchPO4WHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPO4WHyp - oPO4WEpi) ELSE 0.0 ENDIF;
wPExchAIMWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPAIMWHyp - oPAIMWEpi) ELSE 0.0 ENDIF;
wNExchNH4WHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNH4WHyp - oNH4WEpi) ELSE 0.0 ENDIF;
wNExchNO3WHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNO3WHyp - oNO3WEpi) ELSE 0.0 ENDIF;
wSiExchSiO2WHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oSiO2WHyp - oSiO2WEpi) ELSE 0.0 ENDIF;
wO2ExchWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oO2WHyp - oO2WEpi) ELSE 0.0 ENDIF;
wDExchDetWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDDetWHyp - oDDetWEpi) ELSE 0.0 ENDIF;
wPExchDetWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPDetWHyp - oPDetWEpi) ELSE 0.0 ENDIF;
wNExchDetWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNDetWHyp - oNDetWEpi) ELSE 0.0 ENDIF;
wSiExchDetWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oSiDetWHyp - oSiDetWEpi) ELSE 0.0 ENDIF;
wDExchDiatWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDDiatWHyp - oDDiatWEpi) ELSE 0.0 ENDIF;
wPExchDiatWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPDiatWHyp - oPDiatWEpi) ELSE 0.0 ENDIF;
wNExchDiatWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNDiatWHyp - oNDiatWEpi) ELSE 0.0 ENDIF;
wSiExchDiatWHyp= IF (aInclStrat EQ TRUE ) THEN cSiDDiat * wDExchDiatWHyp ELSE 0.0 ENDIF;
wDExchGrenWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDGrenWHyp - oDGrenWEpi) ELSE 0.0 ENDIF;
wPExchGrenWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPGrenWHyp - oPGrenWEpi) ELSE 0.0 ENDIF;
wNExchGrenWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNGrenWHyp - oNGrenWEpi) ELSE 0.0 ENDIF;
wDExchBlueWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDBlueWHyp - oDBlueWEpi) ELSE 0.0 ENDIF;
wPExchBlueWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPBlueWHyp - oPBlueWEpi) ELSE 0.0 ENDIF;
wNExchBlueWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNBlueWHyp - oNBlueWEpi) ELSE 0.0 ENDIF;
wDExchZooWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oDZooHyp - oDZooEpi) ELSE 0.0 ENDIF;
wPExchZooWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oPZooHyp - oPZooEpi) ELSE 0.0 ENDIF;
wNExchZooWHyp= IF (aInclStrat EQ TRUE ) THEN akExchWHyp *(oNZooHyp - oNZooEpi) ELSE 0.0 ENDIF;
wDExchIMWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDIMWHyp - oDIMWEpi) ELSE 0.0 ENDIF;
wPExchPO4WEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPO4WHyp - oPO4WEpi) ELSE 0.0 ENDIF;
wPExchAIMWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPAIMWHyp - oPAIMWEpi) ELSE 0.0 ENDIF;
wNExchNH4WEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNH4WHyp - oNH4WEpi) ELSE 0.0 ENDIF;
wNExchNO3WEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNO3WHyp - oNO3WEpi) ELSE 0.0 ENDIF;
wSiExchSiO2WEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oSiO2WHyp - oSiO2WEpi) ELSE 0.0 ENDIF;
wO2ExchWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oO2WHyp - oO2WEpi) ELSE 0.0 ENDIF;
wDExchDetWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDDetWHyp - oDDetWEpi) ELSE 0.0 ENDIF;
wPExchDetWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPDetWHyp - oPDetWEpi) ELSE 0.0 ENDIF;
wNExchDetWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNDetWHyp - oNDetWEpi) ELSE 0.0 ENDIF;
wSiExchDetWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oSiDetWHyp - oSiDetWEpi) ELSE 0.0 ENDIF;
wDExchDiatWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDDiatWHyp - oDDiatWEpi) ELSE 0.0 ENDIF;
wPExchDiatWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPDiatWHyp - oPDiatWEpi) ELSE 0.0 ENDIF;
wNExchDiatWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNDiatWHyp - oNDiatWEpi) ELSE 0.0 ENDIF;
wSiExchDiatWEpi= IF (aInclStrat EQ TRUE ) THEN cSiDDiat * wDExchDiatWEpi ELSE 0.0 ENDIF;
wDExchGrenWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDGrenWHyp - oDGrenWEpi) ELSE 0.0 ENDIF;
wPExchGrenWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPGrenWHyp - oPGrenWEpi) ELSE 0.0 ENDIF;
wNExchGrenWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNGrenWHyp - oNGrenWEpi) ELSE 0.0 ENDIF;
wDExchBlueWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDBlueWHyp - oDBlueWEpi) ELSE 0.0 ENDIF;
wPExchBlueWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPBlueWHyp - oPBlueWEpi) ELSE 0.0 ENDIF;
wNExchBlueWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNBlueWHyp - oNBlueWEpi) ELSE 0.0 ENDIF;
wDExchZooWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oDZooHyp - oDZooEpi) ELSE 0.0 ENDIF;
wPExchZooWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oPZooHyp - oPZooEpi) ELSE 0.0 ENDIF;
wNExchZooWEpi= IF (aInclStrat EQ TRUE ) THEN akExchWEpi *(oNZooHyp - oNZooEpi) ELSE 0.0 ENDIF;
akExchMHyp = 0.0;
akExchLHyp = 0.0;
oDPhytWHyp = oDDiatWHyp + oDGrenWHyp + oDBlueWHyp;
oPPhytWHyp = oPDiatWHyp + oPGrenWHyp + oPBlueWHyp;
oNPhytWHyp = oNDiatWHyp + oNGrenWHyp + oNBlueWHyp;
aDPhytS = aDDiatS + aDGrenS + aDBlueS ;
aPPhytS = aPDiatS + aPGrenS + aPBlueS ;
aNPhytS = aNDiatS + aNGrenS + aNBlueS;
oDPhytWEpi = oDDiatWEpi + oDGrenWEpi + oDBlueWEpi;
oDOMWEpi = oDDetWEpi + oDPhytWEpi;
oDOMWHyp = oDDetWHyp + oDPhytWHyp;
oTDOMW = oDOMWEpi + oDOMWHyp;
oDSestWHyp = oDOMWHyp + oDIMWHyp;
oPOMWHyp = oPPhytWHyp + oPDetWHyp;
oPSestWHyp = oPPhytWHyp + oPDetWHyp + oPAIMWHyp;
oPInorgWHyp = oPO4WHyp + oPAIMWHyp;
oPTotWHyp = oPSestWHyp + oPO4WHyp;
oNDissWEpi = oNO3WEpi + oNH4WEpi;
oNDissWHyp = oNO3WHyp + oNH4WHyp;
oNOMWHyp = oNPhytWHyp + oNDetWHyp;
oNSestWHyp = oNOMWHyp;
oNkjWHyp = oNSestWHyp + oNH4WHyp;
oNTotWHyp = oNkjWHyp + oNO3WHyp;
bPorS = (1.0 - fDTotS0) * (fDOrgS0 * cRhoOM + (1 - fDOrgS0) * cRhoIM) / cRhoWat / ( fDTotS0 + (1.0 - fDTotS0) * (fDOrgS0 * cRhoOM + (1 - fDOrgS0) * cRhoIM) / cRhoWat );
bPorCorS = IF POW(bPorS , (bPorS + 1.0)) LE NearZero THEN 1 ELSE POW(bPorS , (bPorS + 1.0)) ENDIF;
aDTotS = aDIMS + aDHumS + aDDetS;
aRhoTotS = aDTotS / cDepthS;
aRhoSolidS = (aDIMS * cRhoIM + (aDHumS + aDDetS) * cRhoOM) / aDTotS;
afDTotS = 1.0 / (1.0 + bPorS/(1.0-bPorS) * cRhoWat / aRhoSolidS);
afDOrgS = (aDHumS + aDDetS) / aDTotS;
afDetS = aDDetS / (aDHumS + aDDetS);
afDetTotS = aDDetS / (aDIMS + aDHumS + aDDetS);
aPInorgS = aPO4S + aPAIMS;
aPTotAvailS = aPDetS + aPInorgS + aPPhytS;
aPTotS = aPTotAvailS + aPHumS;
afPInorgS = aPInorgS / aDTotS;
afPTotS = aPTotS / aDTotS;
afPO4S = aPO4S / (aPTotAvailS + NearZero);
oPO4S = aPO4S / cDepthS / bPorS;
aNDissS = aNH4S + aNO3S;
aNkjAvailS = aNDetS + aNPhytS + aNH4S;
aNkjS = aNkjAvailS + aNHumS;
aNTotAvailS = aNkjAvailS + aNO3S;
aNTotS = aNkjS + aNO3S;
afNInorgS = aNDissS / aDTotS;
afNTotS = aNTotS / aDTotS;
oNO3S = aNO3S / cDepthS / bPorS;
oNH4S = aNH4S / cDepthS / bPorS;
oNDissS = aNDissS / cDepthS / bPorS;
rPDIMWHyp = oPAIMWHyp / oDIMWHyp;
rPDIMS = aPAIMS / aDIMS;
rPDDetWHyp = oPDetWHyp / (oDDetWHyp+NearZero);
rNDDetWHyp = oNDetWHyp / (oDDetWHyp+NearZero);
rSiDDetWHyp = oSiDetWHyp / (oDDetWHyp+NearZero);
rPDHumS = aPHumS / (aDHumS+NearZero);
rNDHumS = aNHumS / (aDHumS+NearZero);
rPDDetS = aPDetS / (aDDetS+NearZero);
rNDDetS = aNDetS / (aDDetS+NearZero);
rSiDDetS = aSiDetS / (aDDetS+NearZero);
oDPhytWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oDDiatWM + oDGrenWM + oDBlueWM ELSE 0.0 ENDIF;
oPPhytWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPDiatWM + oPGrenWM + oPBlueWM ELSE 0.0 ENDIF;
oNPhytWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNDiatWM + oNGrenWM + oNBlueWM ELSE 0.0 ENDIF;
oSiDiatWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * oDDiatWM ELSE 0.0 ENDIF;
oDOMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oDDetWM + oDPhytWM ELSE 0.0 ENDIF;
oDSestWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oDOMWM + oDIMWM ELSE 0.0 ENDIF;
oPOMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPPhytWM + oPDetWM ELSE 0.0 ENDIF;
oPSestWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPPhytWM + oPDetWM + oPAIMWM ELSE 0.0 ENDIF;
oPInorgWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPO4WM + oPAIMWM ELSE 0.0 ENDIF;
oPTotWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPSestWM + oPO4WM ELSE 0.0 ENDIF;
oNDissWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNO3WM + oNH4WM ELSE 0.0 ENDIF;
oNOMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNPhytWM + oNDetWM ELSE 0.0 ENDIF;
oNSestWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNOMWM ELSE 0.0 ENDIF;
oNkjWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNSestWM + oNH4WM ELSE 0.0 ENDIF;
oNTotWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNkjWM + oNO3WM ELSE 0.0 ENDIF;
bPorSM = (1.0 - fDTotSM0) * (fDOrgSM0 * cRhoOM +(1 - fDOrgSM0) * cRhoIM) / cRhoWat /(fDTotSM0 + (1.0 - fDTotSM0) * (fDOrgSM0 * cRhoOM +(1 - fDOrgSM0) * cRhoIM) / cRhoWat);
bPorCorSM = IF POW ( bPorSM , (bPorSM + 1.0)) LE NearZero THEN 1 ELSE POW ( bPorSM , (bPorSM + 1.0)) ENDIF;
aDTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDIMSM + aDHumSM + aDDetSM ELSE 0.0 ENDIF;
aRhoTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDTotSM / cDepthSM ELSE 0.0 ENDIF;
aRhoSolidSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (aDIMSM * cRhoIM +(aDHumSM + aDDetSM) * cRhoOM) / aDTotSM ELSE 0.0 ENDIF;
afDTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 1.0 /(1.0 + bPorSM/(1.0-bPorSM) * cRhoWat / aRhoSolidSM) ELSE 0.0 ENDIF;
afDOrgSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (aDHumSM + aDDetSM) / aDTotSM ELSE 0.0 ENDIF;
afDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDDetSM /(aDHumSM + aDDetSM) ELSE 0.0 ENDIF;
afDetTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDDetSM /(aDIMSM + aDHumSM + aDDetSM) ELSE 0.0 ENDIF;
aPInorgSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPO4SM + aPAIMSM ELSE 0.0 ENDIF;
aPTotAvailSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPDetSM + aPInorgSM ELSE 0.0 ENDIF;
aPTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPTotAvailSM + aPHumSM ELSE 0.0 ENDIF;
afPInorgSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPInorgSM / aDTotSM ELSE 0.0 ENDIF;
afPTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPTotSM / aDTotSM ELSE 0.0 ENDIF;
afPO4SM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPO4SM /(aPTotAvailSM + NearZero) ELSE 0.0 ENDIF;
oPO4SM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPO4SM / cDepthSM / bPorSM ELSE 0.0 ENDIF;
aNDissSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNH4SM + aNO3SM ELSE 0.0 ENDIF;
aNkjAvailSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNDetSM + aNH4SM ELSE 0.0 ENDIF;
aNkjSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNkjAvailSM + aNHumSM ELSE 0.0 ENDIF;
aNTotAvailSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNkjAvailSM + aNO3SM ELSE 0.0 ENDIF;
aNTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNkjSM + aNO3SM ELSE 0.0 ENDIF;
afNInorgSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNDissSM / aDTotSM ELSE 0.0 ENDIF;
afNTotSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNTotSM / aDTotSM ELSE 0.0 ENDIF;
oNO3SM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNO3SM / cDepthSM / bPorSM ELSE 0.0 ENDIF;
oNH4SM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNH4SM / cDepthSM / bPorSM ELSE 0.0 ENDIF;
oNDissSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNDissSM / cDepthSM / bPorSM ELSE 0.0 ENDIF;
rPDIMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPAIMWM / oDIMWM ELSE 0.0 ENDIF;
rPDIMSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPAIMSM / aDIMSM ELSE 0.0 ENDIF;
rPDDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oPDetWM /(oDDetWM+NearZero) ELSE 0.0 ENDIF;
rNDDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNDetWM /(oDDetWM+NearZero) ELSE 0.0 ENDIF;
rSiDDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oSiDetWM /(oDDetWM+NearZero) ELSE 0.0 ENDIF;
rPDHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPHumSM /(aDHumSM+NearZero) ELSE 0.0 ENDIF;
rNDHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNHumSM /(aDHumSM+NearZero) ELSE 0.0 ENDIF;
rPDDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPDetSM /(aDDetSM+NearZero) ELSE 0.0 ENDIF;
rNDDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNDetSM /(aDDetSM+NearZero) ELSE 0.0 ENDIF;
rSiDDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aSiDetSM /(aDDetSM+NearZero) ELSE 0.0 ENDIF;
aDTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oDIMWM + oDDetWM + oDPhytWM + oDZooM) * uDepthWM + aDIMSM + aDHumSM + aDDetSM + aDShootPhra + aDRootPhra) * fMarsh ELSE 0.0 ENDIF;
aPTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oPO4WM + oPDetWM + oPAIMWM + oPPhytWM + oPZooM) * uDepthWM + aPO4SM + aPHumSM + aPDetSM + aPAIMSM + aPShootPhra + aPRootPhra) * fMarsh ELSE 0.0 ENDIF;
aNTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oNH4WM + oNO3WM + oNDetWM + oNPhytWM + oNZooM) * uDepthWM + aNH4SM + aNO3SM + aNHumSM + aNDetSM + aNShootPhra + aNRootPhra) * fMarsh ELSE 0.0 ENDIF;
aSiTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oSiO2WM + oSiDetWM + oSiDiatWM) * uDepthWM + aSiDetSM) * fMarsh ELSE 0.0 ENDIF;
aO2TotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ((oO2WM) * uDepthWM ) * fMarsh ELSE 0.0 ENDIF;
uPLoadSeasonEpi = IF (FALSE EQ UseSeasonLoad) THEN 0.0 ELSEIF (Day LT cDayApril1 - 0.5*cLengChange) THEN cPLoadWin ELSEIF (Day LT cDayApril1 + 0.5*cLengChange) THEN 0.5*(cPLoadWin + cPLoadSum) + 0.5*(cPLoadWin - cPLoadSum) * COS(Pi/cLengChange * (Day - cDayApril1)) ELSEIF (Day LT cDayOct1 - 0.5*cLengChange) THEN cPLoadSum ELSEIF (Day LT cDayOct1 + 0.5*cLengChange) THEN 0.5*(cPLoadWin + cPLoadSum) - 0.5*(cPLoadWin - cPLoadSum) * COS(Pi/cLengChange * (Day - cDayOct1)) ELSE cPLoadWin ENDIF;
uPLoadEpi = IF (InclTran EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN (mPLoadPO4Epi + mPLoadAIMEpi + mPLoadDiatEpi + mPLoadGrenEpi + mPLoadBlueEpi + mPLoadDetEpi) ELSEIF (ReadPLoad EQ TRUE AND ReadNutFrac EQ TRUE) THEN mPLoadPO4Epi + mPLoadOrgEpi ELSEIF (ReadPLoad EQ TRUE AND FALSE EQ ReadNutFrac) THEN mPLoadEpi * mPLoadEpiMult ELSEIF (UsePulseLoad EQ TRUE) THEN 0.0 ELSEIF (UseSeasonLoad EQ TRUE) THEN uPLoadSeasonEpi ELSE cPLoad ENDIF;
uPLoadPO4Epi = IF (ReadTranFrac EQ TRUE) THEN mPLoadPO4Epi ELSEIF (ReadPLoad EQ FALSE) THEN fPO4In * uPLoadEpi ELSEIF (ReadNutFrac EQ TRUE) THEN mPLoadPO4Epi ELSE fPO4In * uPLoadEpi ENDIF;
uPLoadOrgEpi = IF (FALSE EQ ReadPLoad) THEN (1.0 - fPO4In) * uPLoadEpi ELSEIF (ReadNutFrac EQ TRUE) THEN mPLoadOrgEpi ELSE (1.0 - fPO4In) * uPLoadEpi ENDIF;
uPLoadPhytTotEpi = IF (FALSE EQ InclSeason) THEN (((fPhytInSum + fPhytInWin)/2)*uPLoadOrgEpi) ELSEIF (ReadPLoadPhyt EQ TRUE) THEN mPLoadPhytTotEpi ELSE ((fPhytInSum+fPhytInWin)/2.0 - (fPhytInSum-fPhytInWin)/2.0 * COS(2.0*Pi * (sTime + TenDays - cTimeLag) / DaysInYear)) * uPLoadOrgEpi ENDIF;
uPLoadDetEpi = IF (ReadTranFrac EQ TRUE) THEN mPLoadDetEpi ELSE uPLoadOrgEpi - uPLoadPhytTotEpi ENDIF;
uPLoadAIMEpi = IF (ReadTranFrac EQ TRUE) THEN mPLoadAIMEpi ELSE 0.0 ENDIF;
uPBackLoadHyp = IF (FALSE EQ aInclStrat) THEN 0.0 ELSE cPBackLoad ENDIF;
uPTotInEpi = uPLoadEpi / (uQInEpi / mmPerm + NearZero);
uNLoadSeasonEpi = IF (FALSE EQ UseSeasonLoad) THEN 0.0 ELSEIF (Day LT cDayApril1 - 0.5*cLengChange) THEN cNLoadWin ELSEIF (Day LT cDayApril1 + 0.5*cLengChange) THEN 0.5*(cNLoadWin + cNLoadSum) + 0.5*(cNLoadWin - cNLoadSum) * COS(Pi/cLengChange * (Day - cDayApril1)) ELSEIF (Day LT cDayOct1 - 0.5*cLengChange) THEN cNLoadSum ELSEIF (Day LT cDayOct1 + 0.5*cLengChange) THEN 0.5*(cNLoadWin + cNLoadSum) - 0.5*(cNLoadWin - cNLoadSum) * COS(Pi/cLengChange * (Day - cDayOct1)) ELSE cNLoadWin ENDIF;
uNLoadPhytTotEpi = IF (ReadNutFrac EQ FALSE) THEN (cNPPhytIn * uPLoadPhytTotEpi) ELSE  mNLoadPhytTotEpi ENDIF ;
uNLoadEpi = IF (InclTran EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN (mNLoadNH4Epi + mNLoadNO3Epi + mNLoadGrenEpi + mNLoadDiatEpi + mNLoadBlueEpi + mNLoadDetEpi) ELSEIF (ReadNLoad EQ TRUE AND ReadNutFrac EQ TRUE) THEN mNLoadNH4Epi + mNLoadNO3Epi + mNLoadOrgEpi ELSEIF (ReadNLoad EQ TRUE AND ReadNutFrac EQ FALSE) THEN mNLoadEpi ELSEIF (UsePulseLoad EQ TRUE) THEN 0.0 ELSEIF (ReadPLoad EQ TRUE) THEN cNPLoadMeas * uPLoadEpi ELSEIF (UseSeasonLoad EQ TRUE) THEN uNLoadSeasonEpi ELSE cNLoad ENDIF;
uNLoadDetEpi = IF (ReadTranFrac EQ TRUE) THEN mNLoadDetEpi ELSEIF (ReadNLoad EQ FALSE ) THEN MIN(cNPDetIn * uPLoadDetEpi, uNLoadEpi - uNLoadPhytTotEpi) ELSEIF (ReadNutFrac EQ TRUE) THEN mNLoadOrgEpi - mNLoadPhytTotEpi ELSE MIN(cNPDetIn * uPLoadDetEpi, uNLoadEpi - uNLoadPhytTotEpi) ENDIF;
uNLoadOrgEpi = IF (FALSE EQ ReadNLoad) THEN uNLoadPhytTotEpi + uNLoadDetEpi ELSEIF (ReadNutFrac EQ TRUE) THEN mNLoadOrgEpi ELSE uNLoadPhytTotEpi + uNLoadDetEpi ENDIF;
uNLoadDissEpi = IF (FALSE EQ ReadNLoad) THEN uNLoadEpi - uNLoadOrgEpi ELSEIF (ReadNutFrac EQ TRUE) THEN 0.0 ELSE uNLoadEpi - uNLoadOrgEpi ENDIF;
uNLoadNH4Epi = IF (ReadTranFrac EQ TRUE) THEN mNLoadNH4Epi ELSEIF (ReadNLoad EQ FALSE) THEN fNH4DissIn * uNLoadDissEpi ELSEIF (ReadNutFrac EQ TRUE) THEN mNLoadNH4Epi ELSE fNH4DissIn * uNLoadDissEpi ENDIF;
uNLoadNO3Epi = IF (ReadTranFrac EQ TRUE) THEN mNLoadNO3Epi ELSEIF (ReadNLoad EQ FALSE) THEN (1.0 - fNH4DissIn) * uNLoadDissEpi ELSEIF (ReadNutFrac EQ TRUE) THEN mNLoadNO3Epi ELSE (1.0 - fNH4DissIn) * uNLoadDissEpi ENDIF;
uNBackLoadHyp = IF (FALSE EQ aInclStrat) THEN 0.0 ELSE cNBackLoad ENDIF;
uNTotInEpi = uNLoadEpi / (uQInEpi / mmPerm + NearZero);
uDLoadDetEpi = IF (ReadTranFrac EQ TRUE) THEN mDLoadDetEpi ELSEIF (ReadDLoadDet EQ TRUE) THEN mDLoadDetEpi ELSE uNLoadDetEpi / cNDDetIn ENDIF;
uDLoadPhytTotEpi = uNLoadPhytTotEpi / cNDPhytIn;
uDLoadIMEpi = IF (InclTran EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mDLoadIMEpi ELSEIF (ReadDLoadIM EQ TRUE) THEN mDLoadIMEpi ELSE cDIMIn * uQInEpi / mmPerm ENDIF;
uDLoadEpi = IF (InclTran EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN (mDLoadIMEpi + mDLoadDetEpi + mDLoadDiatEpi + mDLoadGrenEpi + mDLoadBlueEpi) ELSE uDLoadIMEpi + uDLoadDetEpi + uDLoadPhytTotEpi ENDIF;
uDLoadDiatEpi = IF (ReadTranFrac EQ TRUE) THEN mDLoadDiatEpi ELSE fDiatPhytIn * uDLoadPhytTotEpi ENDIF;
uPLoadDiatEpi = IF (ReadTranFrac EQ TRUE) THEN mPLoadDiatEpi ELSE fDiatPhytIn * uPLoadPhytTotEpi ENDIF;
uNLoadDiatEpi = IF (ReadTranFrac EQ TRUE) THEN mNLoadDiatEpi ELSE fDiatPhytIn * uNLoadPhytTotEpi ENDIF;
uDLoadGrenEpi = IF (ReadTranFrac EQ TRUE) THEN mDLoadGrenEpi ELSE fGrenPhytIn * uDLoadPhytTotEpi ENDIF;
uPLoadGrenEpi = IF (ReadTranFrac EQ TRUE) THEN mPLoadGrenEpi ELSE fGrenPhytIn * uPLoadPhytTotEpi ENDIF;
uNLoadGrenEpi = IF (ReadTranFrac EQ TRUE) THEN mNLoadGrenEpi ELSE fGrenPhytIn * uNLoadPhytTotEpi ENDIF;
uDLoadBlueEpi = IF (ReadTranFrac EQ TRUE) THEN mDLoadBlueEpi ELSE fBluePhytIn * uDLoadPhytTotEpi ENDIF;
uPLoadBlueEpi = IF (ReadTranFrac EQ TRUE) THEN mPLoadBlueEpi ELSE fBluePhytIn * uPLoadPhytTotEpi ENDIF;
uNLoadBlueEpi = IF (ReadTranFrac EQ TRUE) THEN mNLoadBlueEpi ELSE fBluePhytIn * uNLoadPhytTotEpi ENDIF;
uDLoadZooEpi = IF (ReadTranFrac EQ TRUE) THEN mDLoadZooEpi ELSE cDZooIn * uQInEpi / mmPerm ENDIF;
uPLoadZooEpi = IF (ReadTranFrac EQ TRUE) THEN mPLoadZooEpi ELSE cDZooIn * cPDZooRef * uQInEpi / mmPerm ENDIF;
uNLoadZooEpi = IF (ReadTranFrac EQ TRUE) THEN mNLoadZooEpi ELSE cDZooIn * cNDZooRef * uQInEpi / mmPerm ENDIF;
uSiLoadSiO2Epi = IF (ReadTranFrac EQ TRUE) THEN mSiLoadSiO2Epi ELSE cSiO2In * uQInEpi / mmPerm ENDIF;
uSiLoadDetEpi = IF (ReadTranFrac EQ TRUE) THEN mSiLoadDetEpi ELSE cSiDDetIn * uDLoadDetEpi ENDIF;
uSiLoadDiatEpi = cSiDDiat * uDLoadDiatEpi;
uSiLoadEpi = IF (InclTran EQ FALSE) THEN 0.0 ELSE uSiLoadSiO2Epi + uSiLoadDetEpi + uSiLoadDiatEpi ENDIF;
uDLoadBlueSurf= IF (ReadTranFrac EQ TRUE) THEN mDLoadBlueSurf ELSE 0.0 ENDIF;
uPLoadBlueSurf= IF (ReadTranFrac EQ TRUE) THEN mPLoadBlueSurf ELSE 0.0 ENDIF;
uNLoadBlueSurf= IF (ReadTranFrac EQ TRUE) THEN mNLoadBlueSurf ELSE 0.0 ENDIF;
uNLoadNH4Hyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mNLoadNH4Hyp ELSE 0 ENDIF;
uNLoadNO3Hyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mNLoadNO3Hyp ELSE 0 ENDIF;
uPLoadPO4Hyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mPLoadPO4Hyp ELSE 0 ENDIF;
uPLoadAIMHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mPLoadAIMHyp ELSE 0 ENDIF;
uSiLoadSiO2Hyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mSiLoadSiO2Hyp ELSE 0 ENDIF;
uO2LoadHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mO2LoadHyp ELSE cO2In * uQInHyp / mmPerm ENDIF;
uDLoadDetHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mDLoadDetHyp ELSE 0 ENDIF;
uNLoadDetHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mNLoadDetHyp ELSE 0 ENDIF;
uPLoadDetHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mPLoadDetHyp ELSE 0 ENDIF;
uSiLoadDetHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mSiLoadDetHyp ELSE 0 ENDIF;
uDLoadIMHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mDLoadIMHyp ELSE 0 ENDIF;
uDLoadDiatHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mDLoadDiatHyp ELSE 0 ENDIF;
uNLoadDiatHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mNLoadDiatHyp ELSE 0 ENDIF;
uPLoadDiatHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mPLoadDiatHyp ELSE 0 ENDIF;
uSiLoadDiatHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN cSiDDiat * uDLoadDiatHyp ELSE 0 ENDIF;
uDLoadGrenHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mDLoadGrenHyp ELSE 0 ENDIF;
uNLoadGrenHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mNLoadGrenHyp ELSE 0 ENDIF;
uPLoadGrenHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mPLoadGrenHyp ELSE 0 ENDIF;
uDLoadBlueHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mDLoadBlueHyp ELSE 0 ENDIF;
uNLoadBlueHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mNLoadBlueHyp ELSE 0 ENDIF;
uPLoadBlueHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mPLoadBlueHyp ELSE 0 ENDIF;
uDLoadZooHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mDLoadZooHyp ELSE 0 ENDIF;
uNLoadZooHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mNLoadZooHyp ELSE 0 ENDIF;
uPLoadZooHyp= IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN mPLoadZooHyp ELSE 0 ENDIF;
uDLoadHyp = IF (InclTran EQ FALSE) THEN 0.0 ELSEIF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN (mDLoadIMHyp + mDLoadDetHyp + mDLoadDiatHyp + mDLoadGrenHyp + mDLoadBlueHyp) ELSE 0.0 ENDIF;
uNLoadHyp = IF (InclTran EQ FALSE) THEN 0.0 ELSEIF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN (mNLoadNH4Hyp + mNLoadNO3Hyp + mNLoadGrenHyp + mNLoadDiatHyp + mNLoadBlueHyp + mNLoadDetHyp) ELSE 0.0 ENDIF;
uPLoadHyp = IF (InclTran EQ FALSE) THEN 0.0 ELSEIF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (ReadTranFrac EQ TRUE) THEN (mPLoadPO4Hyp + mPLoadAIMHyp + mPLoadDiatHyp + mPLoadGrenHyp + mPLoadBlueHyp + mPLoadDetHyp) ELSE 0.0 ENDIF;
uSiLoadHyp = IF (InclTran EQ FALSE) THEN 0.0 ELSEIF (aInclStrat EQ FALSE) THEN 0.0 ELSE uSiLoadSiO2Hyp + uSiLoadDetHyp + uSiLoadDiatHyp ENDIF;
wDDilIMHyp = ukOutHyp * oDIMWHyp;
wDDilDetHyp = ukOutHyp * oDDetWHyp;
wDDilGrenHyp = ukOutHyp * oDGrenWHyp;
wDDilBlueHyp = ukOutHyp * oDBlueWHyp;
wDDilDiatHyp = ukOutHyp * oDDiatWHyp;
wDDilZooHyp = ukOutHyp * oDZooHyp;
wPDilZooHyp = ukOutHyp * oPZooHyp;
wNDilZooHyp = ukOutHyp * oNZooHyp;
wPDilPO4Hyp = ukOutHyp * oPO4WHyp;
wPDilDetHyp = ukOutHyp*oPDetWHyp;
wPDilAIMHyp = ukOutHyp * oPAIMWHyp;
wNDilNH4Hyp = ukOutHyp * oNH4WHyp;
wNDilNO3Hyp = ukOutHyp * oNO3WHyp;
wNDilDetHyp = ukOutHyp * oNDetWHyp;
wO2OutflHyp = ukOutHyp * oO2WHyp;
wPDilDiatHyp = ukOutHyp * oPDiatWHyp;
wNDilDiatHyp = ukOutHyp * oNDiatWHyp;
wPDilGrenHyp = ukOutHyp * oPGrenWHyp;
wNDilGrenHyp = ukOutHyp * oNGrenWHyp;
wPDilBlueHyp = ukOutHyp * oPBlueWHyp;
wNDilBlueHyp = ukOutHyp * oNBlueWHyp;
wSiDilSiO2Hyp = ukOutHyp * oSiO2WHyp;
wSiDilDetHyp = ukOutHyp * oSiDetWHyp;
wSiDilDiatHyp = cSiDDiat * wDDilDiatHyp;
wDDilPhytHyp = wDDilDiatHyp + wDDilGrenHyp + wDDilBlueHyp;
wPDilPhytHyp = wPDilDiatHyp + wPDilGrenHyp + wPDilBlueHyp;
wNDilPhytHyp = wNDilDiatHyp + wNDilGrenHyp + wNDilBlueHyp;
wSiDilTotHyp = wSiDilDetHyp + wSiDilSiO2Hyp + wSiDilDiatHyp;
wDOutflTotHyp = ukOutHyp * oDSestWHyp;
wPOutflTotHyp = ukOutHyp * oPTotWHyp;
wNOutflTotHyp = ukOutHyp * oNTotWHyp;
wSiOutflTotHyp = ukOutHyp * (oSiO2WHyp + oSiDetWHyp + cSiDDiat * oDDiatWHyp);
wDTranDiatHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadDiatHyp / uDepthWHyp - wDDilDiatHyp ENDIF;
wPTranDiatHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadDiatHyp / uDepthWHyp - wPDilDiatHyp ENDIF;
wNTranDiatHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadDiatHyp / uDepthWHyp - wNDilDiatHyp ENDIF;
wDTranGrenHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadGrenHyp / uDepthWHyp - wDDilGrenHyp ENDIF;
wPTranGrenHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadGrenHyp / uDepthWHyp - wPDilGrenHyp ENDIF;
wNTranGrenHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadGrenHyp / uDepthWHyp - wNDilGrenHyp ENDIF;
wDTranBlueHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadBlueHyp / uDepthWHyp - wDDilBlueHyp ENDIF;
wPTranBlueHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadBlueHyp / uDepthWHyp - wPDilBlueHyp ENDIF;
wNTranBlueHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadBlueHyp / uDepthWHyp - wNDilBlueHyp ENDIF;
wDTranPhytHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE wDTranDiatHyp + wDTranGrenHyp + wDTranBlueHyp ENDIF;
wPTranPhytHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE wPTranDiatHyp + wPTranGrenHyp + wPTranBlueHyp ENDIF;
wNTranPhytHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE wNTranDiatHyp + wNTranGrenHyp + wNTranBlueHyp ENDIF;
wSiTranSiO2Hyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadSiO2Hyp / uDepthWHyp - wSiDilSiO2Hyp ENDIF;
wSiTranDetWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadDetHyp / uDepthWHyp - wSiDilDetHyp ENDIF;
tSiTranTotTHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadHyp - wSiDilTotHyp * uDepthWHyp ENDIF;
wDTranZooHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE (uDLoadZooHyp /uDepthWHyp - wDDilZooHyp) ENDIF;
wPTranZooHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE (uPLoadZooHyp /uDepthWHyp - wPDilZooHyp) ENDIF;
wNTranZooHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE (uNLoadZooHyp /uDepthWHyp - wNDilZooHyp) ENDIF;
wDTranIMWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadIMHyp / uDepthWHyp - wDDilIMHyp ENDIF;
wDTranDetWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadDetHyp / uDepthWHyp - wDDilDetHyp ENDIF;
wO2TranWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uO2LoadHyp / uDepthWHyp - wO2OutflHyp ENDIF;
wPTranPO4WHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadPO4Hyp / uDepthWHyp - wPDilPO4Hyp ENDIF;
wPTranAIMWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadAIMHyp / uDepthWHyp - wPDilAIMHyp ENDIF;
wPTranDetWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadDetHyp / uDepthWHyp - wPDilDetHyp ENDIF;
wNTranNH4WHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadNH4Hyp / uDepthWHyp - wNDilNH4Hyp ENDIF;
wNTranNO3WHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadNO3Hyp / uDepthWHyp - wNDilNO3Hyp ENDIF;
wNTranDetWHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadDetHyp / uDepthWHyp - wNDilDetHyp ENDIF;
wDDilTotHyp = wDDilIMHyp + wDDilDetHyp + wDDilPhytHyp;
wPDilTotHyp = wPDilDetHyp + wPDilPO4Hyp + wPDilAIMHyp + wPDilPhytHyp;
wNDilTotHyp = wNDilDetHyp + wNDilNO3Hyp + wNDilNH4Hyp + wNDilPhytHyp;
tDTranTotTHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadHyp - wDDilTotHyp * uDepthWHyp ENDIF;
tPTranTotTHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadHyp - wPDilTotHyp * uDepthWHyp ENDIF;
tNTranTotTHyp = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadHyp - wNDilTotHyp * uDepthWHyp ENDIF;
uDLoadTotTW = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadEpi + uDLoadHyp ENDIF;
uPLoadTotTW = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadEpi + uPLoadHyp ENDIF;
uNLoadTotTW =  IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadEpi + uNLoadHyp ENDIF;
uSiLoadTotTW =  IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadEpi + uSiLoadHyp ENDIF;
wDExchIMMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDIMWHyp - oDIMWM) ELSE 0.0 ENDIF;
wPExchPO4MHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPO4WHyp - oPO4WM) ELSE 0.0 ENDIF;
wPExchAIMMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPAIMWHyp - oPAIMWM) ELSE 0.0 ENDIF;
wNExchNH4MHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNH4WHyp - oNH4WM) ELSE 0.0 ENDIF;
wNExchNO3MHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNO3WHyp - oNO3WM) ELSE 0.0 ENDIF;
wSiExchSiO2MHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oSiO2WHyp - oSiO2WM) ELSE 0.0 ENDIF;
wO2ExchMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oO2WHyp - oO2WM) ELSE 0.0 ENDIF;
wDExchDetMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDDetWHyp - oDDetWM) ELSE 0.0 ENDIF;
wPExchDetMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPDetWHyp - oPDetWM) ELSE 0.0 ENDIF;
wNExchDetMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNDetWHyp - oNDetWM) ELSE 0.0 ENDIF;
wSiExchDetMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oSiDetWHyp - oSiDetWM) ELSE 0.0 ENDIF;
wDExchDiatMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDDiatWHyp - oDDiatWM) ELSE 0.0 ENDIF;
wPExchDiatMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPDiatWHyp - oPDiatWM) ELSE 0.0 ENDIF;
wNExchDiatMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNDiatWHyp - oNDiatWM) ELSE 0.0 ENDIF;
wSiExchDiatMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * wDExchDiatMHyp ELSE 0.0 ENDIF;
wDExchGrenMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDGrenWHyp - oDGrenWM) ELSE 0.0 ENDIF;
wPExchGrenMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPGrenWHyp - oPGrenWM) ELSE 0.0 ENDIF;
wNExchGrenMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNGrenWHyp - oNGrenWM) ELSE 0.0 ENDIF;
wDExchBlueMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDBlueWHyp - oDBlueWM) ELSE 0.0 ENDIF;
wPExchBlueMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPBlueWHyp - oPBlueWM) ELSE 0.0 ENDIF;
wNExchBlueMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNBlueWHyp - oNBlueWM) ELSE 0.0 ENDIF;
wDExchZooMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oDZooHyp - oDZooM) ELSE 0.0 ENDIF;
wPExchZooMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oPZooHyp - oPZooM) ELSE 0.0 ENDIF;
wNExchZooMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMHyp *(oNZooHyp - oNZooM) ELSE 0.0 ENDIF;
wDExchIMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDIMWHyp - oDIMWM) ELSE 0.0 ENDIF;
wPExchPO4Hyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPO4WHyp - oPO4WM) ELSE 0.0 ENDIF;
wPExchAIMHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPAIMWHyp - oPAIMWM) ELSE 0.0 ENDIF;
wNExchNH4Hyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNH4WHyp - oNH4WM) ELSE 0.0 ENDIF;
wNExchNO3Hyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNO3WHyp - oNO3WM) ELSE 0.0 ENDIF;
wSiExchSiO2Hyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oSiO2WHyp - oSiO2WM) ELSE 0.0 ENDIF;
wO2ExchHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oO2WHyp - oO2WM) ELSE 0.0 ENDIF;
wDExchDetHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDDetWHyp - oDDetWM) ELSE 0.0 ENDIF;
wPExchDetHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPDetWHyp - oPDetWM) ELSE 0.0 ENDIF;
wNExchDetHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNDetWHyp - oNDetWM) ELSE 0.0 ENDIF;
wSiExchDetHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oSiDetWHyp - oSiDetWM) ELSE 0.0 ENDIF;
wDExchDiatHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDDiatWHyp - oDDiatWM) ELSE 0.0 ENDIF;
wPExchDiatHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPDiatWHyp - oPDiatWM) ELSE 0.0 ENDIF;
wNExchDiatHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNDiatWHyp - oNDiatWM) ELSE 0.0 ENDIF;
wSiExchDiatHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * wDExchDiatHyp ELSE 0.0 ENDIF;
wDExchGrenHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDGrenWHyp - oDGrenWM) ELSE 0.0 ENDIF;
wPExchGrenHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPGrenWHyp - oPGrenWM) ELSE 0.0 ENDIF;
wNExchGrenHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNGrenWHyp - oNGrenWM) ELSE 0.0 ENDIF;
wDExchBlueHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDBlueWHyp - oDBlueWM) ELSE 0.0 ENDIF;
wPExchBlueHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPBlueWHyp - oPBlueWM) ELSE 0.0 ENDIF;
wNExchBlueHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNBlueWHyp - oNBlueWM) ELSE 0.0 ENDIF;
wDExchZooHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oDZooHyp - oDZooM) ELSE 0.0 ENDIF;
wPExchZooHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oPZooHyp - oPZooM) ELSE 0.0 ENDIF;
wNExchZooHyp = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLHyp *(oNZooHyp - oNZooM) ELSE 0.0 ENDIF;
tInfSiO2WHyp =  IF (InclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oSiO2WHyp ELSE 0.0 ENDIF;
tInfO2WHyp =  IF (InclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oO2WHyp ELSE 0.0 ENDIF;
tPInfPO4WHyp = IF (aInclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oPO4WHyp ELSE 0.0 ENDIF;
tNInfNH4WHyp = IF (aInclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNH4WHyp ELSE 0.0 ENDIF;
tNInfNO3WHyp = IF (aInclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNO3WHyp ELSE 0.0 ENDIF;
tPInfPO4S = IF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oPO4S ELSE 0.0 ENDIF;
tNInfNH4S = IF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNH4S ELSE 0.0 ENDIF;
tNInfNO3S = IF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNO3S ELSE 0.0 ENDIF;
tSeepSiO2WHyp =  IF (InclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * 0.0 ELSE 0.0 ENDIF;
tSeepO2WHyp =  IF (InclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * 0.0 ELSE 0.0 ENDIF;
tPSeepPO4WHyp = IF (aInclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oPO4S ELSE 0.0 ENDIF;
tNSeepNH4WHyp = IF (aInclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oNH4S ELSE 0.0 ENDIF;
tNSeepNO3WHyp = IF (aInclStrat EQ FALSE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oNO3S ELSE 0.0 ENDIF;
tPSeepPO4S = IF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * cPO4Ground ELSE 0.0 ENDIF;
tNSeepNH4S = IF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * cNH4Ground ELSE 0.0 ENDIF;
tNSeepNO3S = IF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * cNO3Ground ELSE 0.0 ENDIF;
tNH4LoadS = fNH4LoadS * cNLoadS;
tNO3LoadS = cNLoadS - tNH4LoadS;
uDErosIM = (1.0 - fDOrgSoil) * cDErosTot;
uDErosIMS = fSedErosIM * uDErosIM;
uDErosIMW = uDErosIM - uDErosIMS;
uDErosOM = fDOrgSoil * cDErosTot;
uPErosOM = cPDSoilOM * uDErosOM;
uNErosOM = cNDSoilOM * uDErosOM;
uO2SatEpi = 14.652 - 0.41022 * uTmEpi + 0.007991 * uTmEpi*uTmEpi - 0.000077774 * uTmEpi*uTmEpi*uTmEpi;
uO2SatHyp = 14.652 - 0.41022 * uTmHyp + 0.007991 * uTmHyp*uTmHyp- 0.000077774 *uTmHyp*uTmHyp*uTmHyp;
kAer = IF POW ( uVWind , (0.5))  LE NearZero THEN 1 ELSE cAerRoot * POW ( uVWind , (0.5)) + cAerLin * uVWind + cAerSquare * uVWind*uVWind ENDIF;
uFunTmAerEpi = IF  POW ( cThetaAer , (uTmEpi-cTmRef)) LE NearZero THEN 1 ELSE POW ( cThetaAer , (uTmEpi-cTmRef)) ENDIF;
uFunTmAerHyp = IF POW ( cThetaAer , (uTmHyp-cTmRef)) LE NearZero THEN 1 ELSE POW ( cThetaAer , (uTmHyp-cTmRef)) ENDIF;
aFunFloatAer =  MAX( 0.0, 1.0 -  ( kFloatAer * aDFloatVeg ) );
aFunBlueSurfAer = MAX(0.0, 1.0 - (kBlueSurfAer * aDBlueSurf));
tO2BubHyp = IF (uO2SatHyp LT oO2WHyp ) THEN kBub * uFunTmAerHyp * (uO2SatHyp - oO2WHyp) ELSE 0 ENDIF;
uFunTmFish = IF (InclWeb EQ TRUE) THEN EXP( -0.5/(cSigTmFish*cSigTmFish) * (( MAX (uTmEpi, uTmHyp * aInclStrat) - cTmOptFish)*( MAX (uTmEpi, uTmHyp * aInclStrat) - cTmOptFish) - (cTmRef - cTmOptFish)*(cTmRef - cTmOptFish))) ELSE 0.0 ENDIF;
tDTurbFish = IF (InclWeb EQ TRUE) THEN (kTurbFish * uFunTmFish * aDFiAd) ELSE 0.0 ENDIF;
aFunVegResus = MAX(1.0 - kVegResus * aDVeg, NearZero);
aFunDimSusp = IF (uTmEpi GE 0.1) OR  POW(((cFetch +NearZero)/ cFetchRef) , (0.5)) LE NearZero THEN cSuspRef * ((cSuspMin + cSuspMax / (1.0 + EXP(cSuspSlope * (uDepthW - hDepthSusp)))) * POW(((cFetch +NearZero)/ cFetchRef) , (0.5))) ELSE 0.0 ENDIF;
tDResusTauDead = IF POW(aFunDimSusp +NearZero , (0.5)) LE NearZero THEN MIN(aFunDimSusp, POW( 1  , (0.5))) * POW(fLutum / fLutumRef , (0.5)) * bPorS ELSE MIN(aFunDimSusp, POW(aFunDimSusp +NearZero , (0.5))) * POW(fLutum / fLutumRef , (0.5)) * bPorS ENDIF;
tDResusBareDead = tDResusTauDead + tDTurbFish;
tDResusDead = tDResusBareDead * aFunVegResus;
tDResusIM = fLutum * aDIMS / (fLutum * aDIMS + aDDetS) * tDResusDead;
tDResusDet = aDDetS / (fLutum * aDIMS + aDDetS) * tDResusDead;
akResusPhytRef = kResusPhytMax * (1.0 - EXP(cResusPhytExp * tDResusDead));
tDResusPhytTot = akResusPhytRef * aDPhytS;
tPResusDet = rPDDetS * tDResusDet;
tPResusPO4 = aPO4S / aDDetS * tDResusDet;
tPResusAIM = aPAIMS / aDIMS * tDResusIM;
tNResusNO3 = aNO3S / aDDetS * tDResusDet;
tNResusNH4 = aNH4S / aDDetS * tDResusDet;
tNResusDet = rNDDetS * tDResusDet;
tSiResusDet = rSiDDetS * tDResusDet;
aFunTauSetOMHyp = IF POW(aFunDimSusp +NearZero , (0.5)) LT NearZero THEN 1 ELSE MIN(1.0 / POW(aFunDimSusp +NearZero , (0.5)), 1.0) ENDIF;
aFunTauSetIMHyp = aFunTauSetOMHyp;
uFunTmSetEpi = IF POW ( cThetaSet , (uTmEpi-cTmRef)) LT NearZero THEN 1 ELSE POW ( cThetaSet , (uTmEpi-cTmRef)) ENDIF;
uFunTmSetHyp = IF POW(cThetaSet , (uTmHyp-cTmRef))  LT NearZero THEN 1 ELSE POW(cThetaSet , (uTmHyp-cTmRef)) ENDIF;
uCorVSetIMHyp = IF POW((fLutumRef/fLutum) , (0.5))  LT NearZero THEN 1 ELSE aFunTauSetIMHyp * POW((fLutumRef/fLutum) , (0.5)) * uFunTmSetHyp * (cVSetIM+ uQOutInf /mmPerm - uQInSeep / mmPerm) ENDIF;
tDSetIMHyp = uCorVSetIMHyp * oDIMWHyp;
tPSetAIMHyp = oPAIMWHyp / oDIMWHyp * tDSetIMHyp;
uCorVSetDetHyp = (cVSetDet + uQOutInf /mmPerm - uQInSeep / mmPerm) * aFunTauSetOMHyp * uFunTmSetHyp;
tDSetDetHyp = uCorVSetDetHyp * oDDetWHyp;
tPSetDetHyp = uCorVSetDetHyp * oPDetWHyp;
tNSetDetHyp = uCorVSetDetHyp * oNDetWHyp;
tSiSetDetHyp = uCorVSetDetHyp * oSiDetWHyp;
kPMinDetW = kDMinDetW;
kNMinDetW = kDMinDetW;
kSiMinDetW = kDMinDetW;
uFunTmMinWEpi =  IF POW(cThetaMinW , (uTmEpi-cTmRef))  LT NearZero THEN 1 ELSE POW(cThetaMinW , (uTmEpi-cTmRef)) ENDIF;
uFunTmMinWHyp = IF POW(cThetaMinW , (uTmEpi-cTmRef))  LT NearZero THEN 1 ELSE  POW(cThetaMinW , (uTmEpi-cTmRef)) ENDIF;
wDMinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kDMinDetW * uFunTmMinWHyp * oDDetWHyp ENDIF;
wPMinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kPMinDetW * uFunTmMinWHyp * oPDetWHyp ENDIF;
wNMinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kNMinDetW * uFunTmMinWHyp * oNDetWHyp ENDIF;
wSiMinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kSiMinDetW * uFunTmMinWHyp * oSiDetWHyp ENDIF;
aCorO2BODHyp = oO2WHyp / (hO2BOD + oO2WHyp);
wO2MinDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE molO2molC * cCPerDW * aCorO2BODHyp * wDMinDetWHyp ENDIF;
wDDenitWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE oNO3WHyp*oNO3WHyp / (hNO3Denit*hNO3Denit + oNO3WHyp*oNO3WHyp) * (1.0 - aCorO2BODHyp) * wDMinDetWHyp ENDIF;
wNDenitWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE NO3PerC * molNmolC * cCPerDW * wDDenitWHyp ENDIF;
uFunTmNitrHyp = IF   POW(cThetaNitr , (uTmHyp-cTmRef))  LT NearZero THEN 1 ELSE POW(cThetaNitr , (uTmHyp-cTmRef)) ENDIF;
uFunTmNitrEpi =  IF POW(cThetaNitr , (uTmEpi-cTmRef))  LT NearZero THEN 1 ELSE POW(cThetaNitr , (uTmEpi-cTmRef)) ENDIF;
uFunTmNitrS = IF POW(cThetaNitr , (uTmEpi-cTmRef))  LT NearZero THEN 1 ELSE POW(cThetaNitr , (uTmEpi-cTmRef)) ENDIF;
aCorO2NitrWHyp = oO2WHyp*oO2WHyp / (hO2Nitr*hO2Nitr + oO2WHyp*oO2WHyp);
wNNitrWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kNitrW * uFunTmNitrHyp * aCorO2NitrWHyp * oNH4WHyp ENDIF;
wO2NitrWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE O2PerNH4 * molO2molN * wNNitrWHyp ENDIF;
kPMinDetS = kDMinDetS;
kNMinDetS = kDMinDetS;
kSiMinDetS = kDMinDetS;
uFunTmMinS = IF POW(cThetaMinS , (uTmBot-cTmRef)) LT NearZero THEN 1 ELSE  POW(cThetaMinS , (uTmBot-cTmRef)) ENDIF;
tDMinDetS = kDMinDetS * uFunTmMinS * aDDetS;
tPMinDetS = kPMinDetS * uFunTmMinS * aPDetS;
tNMinDetS = kNMinDetS * uFunTmMinS * aNDetS;
tSiMinDetS = kSiMinDetS * uFunTmMinS * aSiDetS;
uFunTmDif = IF POW(cThetaDif , (uTmEpi-cTmRef)) LT NearZero THEN 1 ELSE POW(cThetaDif , (uTmEpi-cTmRef)) ENDIF;
akO2DifCor = kO2Dif * uFunTmDif * cTurbDifO2 * bPorCorS;
tSOD = (molO2molC * cCPerDW * (1.0 - fRefrDetS) * tDMinDetS + O2PerNH4 * molO2molN * kNitrS * uFunTmNitrS * aNH4S) / cDepthS;
aDepthDif = fDepthDifS * cDepthS;
tPDifPO4Hyp = IF ( aInclStrat EQ TRUE ) THEN kPDifPO4 * uFunTmDif * cTurbDifNut * bPorCorS * (oPO4S - oPO4WHyp ) / aDepthDif ELSE 0.0 ENDIF ;
tNDifNO3Hyp = IF ( aInclStrat EQ TRUE ) THEN kNDifNO3 * uFunTmDif * cTurbDifNut * bPorCorS * (oNO3S - oNO3WHyp ) / aDepthDif ELSE 0.0 ENDIF ;
tNDifNH4Hyp = IF ( aInclStrat EQ TRUE ) THEN kNDifNH4 * uFunTmDif * cTurbDifNut * bPorCorS * (oNH4S - oNH4WHyp ) / aDepthDif ELSE 0.0 ENDIF ;
tO2DifHyp = IF ( aInclStrat EQ TRUE ) THEN kO2Dif / aDepthDif * uFunTmDif * cTurbDifO2 * bPorCorS * oO2WHyp ELSE 0.0 ENDIF ;
tPDifGroundPO4 = 0.0;
tNDifGroundNO3 = 0.0;
tNDifGroundNH4 = 0.0;
aPAdsMaxWHyp = cRelPAdsD + aCorO2BODHyp * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM;
aKPAdsWHyp = (1.0 - fRedMax * (1.0-aCorO2BODHyp)) * cKPAdsOx;
aPIsoAdsWHyp = aPAdsMaxWHyp * aKPAdsWHyp * oPO4WHyp / (1.0 + aKPAdsWHyp * oPO4WHyp);
aPEqIMWHyp = aPIsoAdsWHyp * oDIMWHyp;
wPSorpIMWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kPSorp * (aPEqIMWHyp - oPAIMWHyp) ENDIF;
tPChemPO4 = MAX( 0.0, kPChemPO4 * (oPO4S - coPO4Max) );
uQEvPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN uQEv ELSE 0.0 ENDIF;
tPEvPO4WM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN uQEvPhra / mmPerm * oPO4WM ELSE 0.0 ENDIF;
tNEvNH4WM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN uQEvPhra / mmPerm * oNH4WM ELSE 0.0 ENDIF;
tNEvNO3WM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN uQEvPhra / mmPerm * oNO3WM ELSE 0.0 ENDIF;
tInfSiO2WM = IF ((InclMarsh EQ FALSE) OR (fMarsh LE NearZero)) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oSiO2WM ELSE 0.0 ENDIF;
tInfO2WM = IF ((InclMarsh EQ FALSE) OR (fMarsh LE NearZero)) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oO2WM ELSE 0.0 ENDIF;
tPInfPO4WM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oPO4WM ELSE 0.0 ENDIF;
tNInfNH4WM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNH4WM ELSE 0.0 ENDIF;
tNInfNO3WM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNO3WM ELSE 0.0 ENDIF;
tPInfPO4SM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oPO4SM ELSE 0.0 ENDIF;
tNInfNH4SM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNH4SM ELSE 0.0 ENDIF;
tNInfNO3SM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNO3SM ELSE 0.0 ENDIF;
tSeepSiO2WM = IF ((InclMarsh EQ FALSE) OR (fMarsh LT NearZero)) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * 0.0 ELSE 0.0 ENDIF;
tSeepO2WM = IF ((InclMarsh EQ FALSE) OR (fMarsh LT NearZero)) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * 0.0 ELSE 0.0 ENDIF;
tPSeepPO4WM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oPO4SM ELSE 0.0 ENDIF;
tNSeepNH4WM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oNH4SM ELSE 0.0 ENDIF;
tNSeepNO3WM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oNO3SM ELSE 0.0 ENDIF;
tPSeepPO4SM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * cPO4Ground ELSE 0.0 ENDIF;
tNSeepNH4SM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * cNH4Ground ELSE 0.0 ENDIF;
tNSeepNO3SM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * cNO3Ground ELSE 0.0 ENDIF;
tO2AerM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kAer * uFunTmAerEpi *(uO2SatEpi - oO2WM) ELSE 0.0 ENDIF;
tDSetIMM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetIM+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi * oDIMWM ELSE 0.0 ENDIF;
tPSetAIMM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetIM+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi * oPAIMWM ELSE 0.0 ENDIF;
tDSetDetM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetDet+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi * oDDetWM ELSE 0.0 ENDIF;
tPSetDetM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetDet+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi* oPDetWM ELSE 0.0 ENDIF;
tNSetDetM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetDet+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi* oNDetWM ELSE 0.0 ENDIF;
tSiSetDetM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetDet+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi * oSiDetWM ELSE 0.0 ENDIF;
tDSetDiatM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ( cVSetDiat+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi * oDDiatWM ELSE 0.0 ENDIF;
tPSetDiatM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetDiat+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi* oPDiatWM ELSE 0.0 ENDIF;
tNSetDiatM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ( cVSetDiat+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi* oNDiatWM ELSE 0.0 ENDIF;
tSiSetDiatM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetDiat+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi * oSiDiatWM ELSE 0.0 ENDIF;
tDSetGrenM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetGren + uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi * oDGrenWM ELSE 0.0 ENDIF;
tPSetGrenM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetGren + uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi* oPGrenWM ELSE 0.0 ENDIF;
tNSetGrenM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetGren+ uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi* oNGrenWM ELSE 0.0 ENDIF;
tDSetBlueM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetBlue + uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi * oDBlueWM ELSE 0.0 ENDIF;
tPSetBlueM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetBlue + uQOutInf /mmPerm - uQInSeep / mmPerm)* uFunTmSetEpi* oPBlueWM ELSE 0.0 ENDIF;
tNSetBlueM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (cVSetBlue + uQOutInf /mmPerm - uQInSeep / mmPerm) * uFunTmSetEpi* oNBlueWM ELSE 0.0 ENDIF;
tDSetPhytM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDSetDiatM + tDSetGrenM + tDSetBlueM ELSE 0.0 ENDIF;
tPSetPhytM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tPSetDiatM + tPSetGrenM + tPSetBlueM ELSE 0.0 ENDIF;
tNSetPhytM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tNSetDiatM + tNSetGrenM + tNSetBlueM ELSE 0.0 ENDIF;
tDSetTotM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDSetIMM + tDSetDetM + tDSetPhytM ELSE 0.0 ENDIF;
wDMinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinDetW * uFunTmMinWEpi * oDDetWM ELSE 0.0 ENDIF;
wPMinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPMinDetW * uFunTmMinWEpi * oPDetWM ELSE 0.0 ENDIF;
wNMinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNMinDetW * uFunTmMinWEpi * oNDetWM ELSE 0.0 ENDIF;
wSiMinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kSiMinDetW * uFunTmMinWEpi * oSiDetWM ELSE 0.0 ENDIF;
aCorO2BODM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oO2WM /(hO2BOD + oO2WM) ELSE 0.0 ENDIF;
wO2MinDetWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN molO2molC * cCPerDW * aCorO2BODM * wDMinDetWM ELSE 0.0 ENDIF;
wDDenitWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNO3WM*oNO3WM /(hNO3Denit*hNO3Denit + oNO3WM*oNO3WM) *(1.0 - aCorO2BODM) * wDMinDetWM ELSE 0.0 ENDIF;
wNDenitWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN NO3PerC * molNmolC * cCPerDW * wDDenitWM ELSE 0.0 ENDIF;
aCorO2NitrWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oO2WM * oO2WM /(hO2Nitr * hO2Nitr + oO2WM * oO2WM) ELSE 0.0 ENDIF;
wNNitrWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNitrW * uFunTmNitrEpi * aCorO2NitrWM * oNH4WM ELSE 0.0 ENDIF;
wO2NitrWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN O2PerNH4 * molO2molN * wNNitrWM ELSE 0.0 ENDIF;
tDMinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinDetS * uFunTmMinS * aDDetSM ELSE 0.0 ENDIF;
tPMinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPMinDetS * uFunTmMinS * aPDetSM ELSE 0.0 ENDIF;
tNMinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNMinDetS * uFunTmMinS * aNDetSM ELSE 0.0 ENDIF;
tSiMinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kSiMinDetS * uFunTmMinS * aSiDetSM ELSE 0.0 ENDIF;
akO2DifCorM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kO2Dif * uFunTmDif * cTurbDifO2 * bPorCorSM ELSE 0.0 ENDIF;
tSODM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN(molO2molC * cCPerDW *(1.0 - fRefrDetS) * tDMinDetSM + O2PerNH4 * molO2molN * kNitrS * uFunTmNitrEpi * aNH4SM) / cDepthSM ELSE 0.0 ENDIF;
aDepthOxySedM = IF (InclMarsh EQ FALSE OR fMarsh LE NearZero) THEN 0.0 ELSEIF POW((2.0 * oO2WM * akO2DifCorM / tSODM) , (0.5)) LE NearZero THEN 1 ELSE POW((2.0 * oO2WM * akO2DifCorM / tSODM) , (0.5)) ENDIF ;
afOxySedM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDepthOxySedM / cDepthSM ELSE 0.0 ENDIF;
tDMinOxyDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afOxySedM *(1.0 - fRefrDetS) * tDMinDetSM ELSE 0.0 ENDIF;
tO2MinDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN molO2molC * cCPerDW * tDMinOxyDetSM ELSE 0.0 ENDIF;
tDDenitSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN oNO3SM*oNO3SM /(hNO3Denit*hNO3Denit + oNO3SM*oNO3SM) *(1.0 - afOxySedM) *(1.0 - fRefrDetS) * tDMinDetSM ELSE 0.0 ENDIF;
tNDenitSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN NO3PerC * molNmolC * cCPerDW * tDDenitSM ELSE 0.0 ENDIF;
tNNitrSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afOxySedM * kNitrS * uFunTmNitrEpi * aNH4SM ELSE 0.0 ENDIF;
tO2NitrSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN O2PerNH4 * molO2molN * tNNitrSM ELSE 0.0 ENDIF;
tDMinHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinHum * uFunTmMinS * afOxySedM * aDHumSM ELSE 0.0 ENDIF;
tPMinHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinHum * uFunTmMinS * afOxySedM * aPHumSM ELSE 0.0 ENDIF;
tNMinHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMinHum * uFunTmMinS * afOxySedM * aNHumSM ELSE 0.0 ENDIF;
aDepthDifM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN fDepthDifS * cDepthSM ELSE 0.0 ENDIF;
tPDifPO4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPDifPO4 * uFunTmDif * cTurbDifNut * bPorCorSM * (oPO4SM - oPO4WM) / aDepthDifM ELSE 0.0 ENDIF;
tNDifNO3M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNDifNO3 * uFunTmDif * cTurbDifNut * bPorCorSM * (oNO3SM - oNO3WM) / aDepthDifM ELSE 0.0 ENDIF;
tNDifNH4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kNDifNH4 * uFunTmDif * cTurbDifNut * bPorCorSM * (oNH4SM - oNH4WM) / aDepthDifM ELSE 0.0 ENDIF;
tO2DifM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kO2Dif / aDepthDifM * uFunTmDif * cTurbDifO2 * bPorCorSM * oO2WM ELSE 0.0 ENDIF;
tPDifGroundPO4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 0.0 ELSE 0.0 ENDIF;
tNDifGroundNO3M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 0.0 ELSE 0.0 ENDIF;
tNDifGroundNH4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN 0.0 ELSE 0.0 ENDIF;
aPAdsMaxWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cRelPAdsD + aCorO2BODM * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM ELSE 0.0 ENDIF;
aKPAdsWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN(1.0 - fRedMax *(1.0-aCorO2BODM)) * cKPAdsOx ELSE 0.0 ENDIF;
aPIsoAdsWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPAdsMaxWM * aKPAdsWM * oPO4WM /(1.0 + aKPAdsWM * oPO4WM) ELSE 0.0 ENDIF;
aPEqIMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPIsoAdsWM * oDIMWM ELSE 0.0 ENDIF;
wPSorpIMWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPSorp *(aPEqIMWM - oPAIMWM) ELSE 0.0 ENDIF;
aPAdsMaxSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cRelPAdsD + afOxySedM * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM ELSE 0.0 ENDIF;
aKPAdsSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN(1.0 - fRedMax *(1.0-afOxySedM)) * cKPAdsOx ELSE 0.0 ENDIF;
aPIsoAdsSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPAdsMaxSM * aKPAdsSM * oPO4SM /(1.0 + aKPAdsSM * oPO4SM) ELSE 0.0 ENDIF;
aPEqIMSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPIsoAdsSM * aDIMSM ELSE 0.0 ENDIF;
tPSorpIMSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kPSorp *(aPEqIMSM - aPAIMSM) ELSE 0.0 ENDIF;
tPChemPO4M = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MAX(0.0,kPChemPO4 *(oPO4SM - coPO4Max)) ELSE 0.0 ENDIF;
aDRootVeg = bfRootVeg * aDVeg;
bfSubVegEpi = bfSubVeg * ( uVegHeightEpi / uDepthW );
bfSubVegHyp = bfSubVeg * ( uVegHeightHyp / uDepthW );
afCovSurfVeg = MIN(1.0, MAX(aDFloatVeg / (cDLayerVeg + NearZero), aDEmergVeg / (fEmergVeg * cDCarrVeg + NearZero) ) ) ;
afCovEmergVeg = MIN(1.0, PerCent * cCovSpVeg * aDEmergVeg);
aCovVeg = MIN(100.0, cCovSpVeg * aDShootVeg);
aLPARBotHyp = uLPARSurfHyp * EXP(- aExtCoefHyp * uDepthWHyp);
rPDVeg = aPVeg / (aDVeg+NearZero);
rNDVeg = aNVeg / (aDVeg+NearZero);
tDMigrVeg = kMigrVeg * (cDVegIn - aDVeg);
tPMigrVeg = kMigrVeg * (cPDVeg0* cDVegIn - aPVeg);
tNMigrVeg = kMigrVeg * (cNDVeg0* cDVegIn - aNVeg);
uFunTmRespVeg = IF ( UseExpVeg GT NearZero ) THEN uFunTmVeg ELSE POW(cQ10RespVeg , (0.1 * (uTmVegAve - cTmRef))) ENDIF;
afPUptVegS = IF (FALSE EQ UseEmpUpt) THEN 0.0 ELSEIF (bfRootVeg LE NearZero) THEN 0.0 ELSEIF (fFloatVeg + bfSubVeg LE NearZero) THEN 1.0 ELSEIF (aInclStrat EQ TRUE AND ((oPO4S+NearZero) / (oPO4WHyp+NearZero)) GT NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(((oPO4S+NearZero) / (oPO4WHyp+NearZero)) , fSedUptVegExp)) ELSEIF (aInclStrat EQ TRUE AND ((oPO4S+NearZero) / (oPO4WHyp+NearZero)) LE NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW( NearZero , fSedUptVegExp)) ELSEIF (((oPO4S+NearZero) / (oPO4WEpi+NearZero)) LE NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW (NearZero , fSedUptVegExp)) ELSE fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(((oPO4S+NearZero) / (oPO4WEpi+NearZero)) , fSedUptVegExp)) ENDIF;
afNUptVegS = IF (FALSE EQ UseEmpUpt) THEN 0.0 ELSEIF (bfRootVeg LE NearZero) THEN 0.0 ELSEIF (fFloatVeg + bfSubVeg LE NearZero) THEN 1.0 ELSEIF ( aInclStrat EQ TRUE AND ((oNDissS+NearZero) / (oNDissWHyp+NearZero)) GT NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(((oNDissS+NearZero) / (oNDissWHyp+NearZero)) , fSedUptVegExp)) ELSEIF ( aInclStrat EQ TRUE AND ((oNDissS+NearZero) / (oNDissWHyp+NearZero)) LE NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(NearZero , fSedUptVegExp)) ELSEIF ( ((oNDissS+NearZero) / (oNDissWEpi+NearZero)) LE NearZero ) THEN fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(NearZero , fSedUptVegExp)) ELSE fSedUptVegMax / (1.0 + fSedUptVegCoef * POW(((oNDissS+NearZero) / (oNDissWEpi+NearZero)) , fSedUptVegExp)) ENDIF;
aVPUptMaxCrVeg = IF (FALSE EQ UseEmpUpt) THEN MAX( 0.0, cVPUptMaxVeg * uFunTmProdVeg * (cPDVegMax-rPDVeg) / (cPDVegMax-cPDVegMin) ) ELSE MAX( 0.0, cVPUptMaxVeg * uFunTmProdVeg * (cPDVegMax-rPDVeg) / (cPDVegMax-cPDVegMin) ) ENDIF;
aVPUptVegWHyp = IF (FALSE EQ UseEmpUpt) THEN oPO4WHyp * aVPUptMaxCrVeg / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4WHyp) ELSE 0.0 ENDIF;
aVPUptVegS = IF (FALSE EQ UseEmpUpt) THEN oPO4S * aVPUptMaxCrVeg / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4S) ELSE 0.0 ENDIF;
aVPUptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN oPO4WEpi * aVPUptMaxCrVeg / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4WEpi) ELSE 0.0 ENDIF;
tPUptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN aVPUptVegWEpi * (aDSubVeg + aDFloatVeg) ELSE (1.0 - afPUptVegS) * aVPUptMaxCrVeg * oPO4WEpi / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4WEpi) * uDVegEpi ENDIF;
tPUptVegWHyp = IF (FALSE EQ UseEmpUpt) THEN aVPUptVegWHyp * (aDSubVeg + aDFloatVeg) ELSE (1.0 - afPUptVegS) * aVPUptMaxCrVeg * oPO4WHyp / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4WHyp) * uDVegHyp ENDIF;
tPUptVegS = IF (FALSE EQ UseEmpUpt) THEN aVPUptVegS * aDRootVeg ELSE afPUptVegS * aVPUptMaxCrVeg * oPO4S / (aVPUptMaxCrVeg / cAffPUptVeg + oPO4S) * aDVeg ENDIF;
tPUptVegEpi = IF (aInclStrat EQ TRUE ) THEN tPUptVegWEpi + tPUptVegS * uDVegEpi / aDVeg ELSEIF (aInclStrat EQ FALSE AND FALSE EQ UseEmpUpt) THEN tPUptVegWEpi + tPUptVegS ELSE tPUptVegWEpi + tPUptVegS ENDIF;
tPUptVegHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (FALSE EQ UseEmpUpt) THEN tPUptVegWHyp + tPUptVegS * uDVegHyp / aDVeg ELSE tPUptVegWHyp + tPUptVegS * uDVegHyp / aDVeg ENDIF ;
aVNUptMaxCrVeg = IF (FALSE EQ UseEmpUpt) THEN MAX( 0.0, cVNUptMaxVeg * uFunTmProdVeg * (cNDVegMax - rNDVeg) / (cNDVegMax - cNDVegMin)) ELSE MAX( 0.0, cVNUptMaxVeg * uFunTmProdVeg * (cNDVegMax - rNDVeg) / (cNDVegMax - cNDVegMin)) ENDIF;
ahNUptVeg = IF (FALSE EQ UseEmpUpt) THEN aVNUptMaxCrVeg / cAffNUptVeg ELSE aVNUptMaxCrVeg / cAffNUptVeg ENDIF;
aVNUptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN oNDissWEpi * aVNUptMaxCrVeg / (ahNUptVeg + oNDissWEpi) ELSE 0.0 ENDIF;
aVNUptVegWHyp = IF (FALSE EQ UseEmpUpt) THEN oNDissWHyp * aVNUptMaxCrVeg / (ahNUptVeg + oNDissWHyp) ELSE 0.0 ENDIF;
afNH4UptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN oNH4WEpi * oNO3WEpi / ((ahNUptVeg + oNH4WEpi) * (ahNUptVeg + oNO3WEpi + NearZero)) + oNH4WEpi * ahNUptVeg / ((oNH4WEpi + oNO3WEpi + NearZero) * (ahNUptVeg + oNO3WEpi + NearZero)) ELSE oNH4WEpi * oNO3WEpi / ((ahNUptVeg + oNH4WEpi) * (ahNUptVeg + oNO3WEpi + NearZero)) + oNH4WEpi * ahNUptVeg / ((oNH4WEpi + oNO3WEpi + NearZero) * (ahNUptVeg + oNO3WEpi + NearZero)) ENDIF;
afNH4UptVegWHyp = IF (FALSE EQ UseEmpUpt) THEN oNH4WHyp * oNO3WHyp / ((ahNUptVeg + oNH4WHyp) * (ahNUptVeg + oNO3WHyp + NearZero)) + oNH4WHyp * ahNUptVeg / ((oNH4WHyp + oNO3WHyp + NearZero) * (ahNUptVeg + oNO3WHyp + NearZero)) ELSE oNH4WHyp * oNO3WHyp / ((ahNUptVeg + oNH4WHyp) * (ahNUptVeg + oNO3WHyp + NearZero)) + oNH4WHyp * ahNUptVeg / ((oNH4WHyp + oNO3WHyp + NearZero) * (ahNUptVeg + oNO3WHyp + NearZero)) ENDIF;
tNUptVegWEpi = IF (FALSE EQ UseEmpUpt) THEN aVNUptVegWEpi * (aDSubVeg + aDFloatVeg) ELSE (1.0 - afNUptVegS) * aVNUptMaxCrVeg * oNDissWEpi / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissWEpi) * uDVegEpi ENDIF;
tNUptVegWHyp = IF (FALSE EQ aInclStrat) THEN 0.0 ELSEIF (FALSE EQ UseEmpUpt) THEN aVNUptVegWHyp * (aDSubVeg + aDFloatVeg) ELSE (1.0 - afNUptVegS) * aVNUptMaxCrVeg * oNDissWHyp / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissWHyp) * uDVegHyp ENDIF;
tNUptNH4VegWEpi = IF (FALSE EQ UseEmpUpt) THEN afNH4UptVegWEpi * tNUptVegWEpi ELSE afNH4UptVegWEpi * tNUptVegWEpi ENDIF;
tNUptNO3VegWEpi = IF (FALSE EQ UseEmpUpt) THEN tNUptVegWEpi - tNUptNH4VegWEpi ELSE tNUptVegWEpi - tNUptNH4VegWEpi ENDIF;
tNUptNH4VegWHyp = IF (FALSE EQ UseEmpUpt) THEN afNH4UptVegWHyp * tNUptVegWHyp ELSE afNH4UptVegWHyp * tNUptVegWHyp ENDIF;
tNUptNO3VegWHyp = IF (FALSE EQ UseEmpUpt) THEN tNUptVegWHyp - tNUptNH4VegWHyp ELSE tNUptVegWHyp - tNUptNH4VegWHyp ENDIF;
aVNUptVegS = IF (FALSE EQ UseEmpUpt) THEN oNDissS * aVNUptMaxCrVeg / (ahNUptVeg + oNDissS) ELSE 0.0 ENDIF;
tNUptVegS = IF (FALSE EQ UseEmpUpt) THEN aVNUptVegS * aDRootVeg ELSE afNUptVegS * aVNUptMaxCrVeg * oNDissS / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissS) * aDVeg ENDIF;
afNH4UptVegS = IF (FALSE EQ UseEmpUpt) THEN oNH4S * oNO3S / ((ahNUptVeg + oNH4S +NearZero) * (ahNUptVeg + oNO3S +NearZero)) + oNH4S * ahNUptVeg / ((oNH4S + oNO3S+NearZero) * (ahNUptVeg + oNO3S+NearZero)) ELSE oNH4S * oNO3S / ((ahNUptVeg + oNH4S +NearZero) * (ahNUptVeg + oNO3S +NearZero)) + oNH4S * ahNUptVeg / ((oNH4S + oNO3S+NearZero) * (ahNUptVeg + oNO3S+NearZero)) ENDIF;
tNUptNH4VegS = IF (FALSE EQ UseEmpUpt) THEN afNH4UptVegS * tNUptVegS ELSE afNH4UptVegS * tNUptVegS ENDIF;
tNUptVegSEpi = IF (FALSE EQ UseEmpUpt) THEN aVNUptVegS * aDRootVeg ELSE afNUptVegS * aVNUptMaxCrVeg * oNDissS / (aVNUptMaxCrVeg / cAffNUptVeg + oNDissS) * aDVeg ENDIF;
tNUptNO3VegS = IF (FALSE EQ UseEmpUpt) THEN tNUptVegS - tNUptNH4VegS ELSE tNUptVegS - tNUptNH4VegS ENDIF;
tNUptVeg =tNUptVegWEpi + tNUptVegWHyp + tNUptVegS;
aLLimShootVegEpi = fEmergVeg + fFloatVeg * (1.0 - afCovEmergVeg) + bfSubVegEpi * (1.0 - afCovSurfVeg) * 1.0 / (aExtCoefEpi * uDepthWEpi) * LN( (1.0 + aLPAR1VegEpi / uhLVeg) / (1.0 + aLPAR2VegEpi / uhLVeg));
aLLimShootVegHyp = fEmergVeg + fFloatVeg * (1.0 - afCovEmergVeg) + bfSubVegHyp * (1.0 - afCovSurfVeg) * 1.0 / (aExtCoefHyp * uDepthWHyp) * LN( (1.0 + aLPAR1VegHyp / uhLVeg) / (1.0 + aLPAR2VegHyp / uhLVeg));
aMuTmLVegHyp = ufDay * bfShootVeg * aLLimShootVegHyp * uFunTmProdVeg * cMuMaxVeg;
aPLimVeg = MAX(0.0, (1.0 - cPDVegMin / rPDVeg) * cPDVegMax / (cPDVegMax - cPDVegMin) );
aNLimVeg = MAX(0.0, (1.0 - cNDVegMin / rNDVeg) * cNDVegMax / (cNDVegMax - cNDVegMin) );
aNutLimVeg = MIN( aPLimVeg, aNLimVeg);
aMuVegHyp = aMuTmLVegHyp * aNutLimVeg;
bkMortVeg = IF (FALSE EQ InclSeason) THEN kMortVegSum ELSEIF (aVegWin EQ TRUE AND aDaysVegWin LE cLengMort AND aDaysVegWin GT 0) THEN - LN(fWinVeg) / cLengMort ELSE kMortVegSum ENDIF;
akDIncrVegHyp = aMuTmLVegHyp - kDRespVeg * uFunTmRespVeg - bkMortVeg;
tDEnvVegHyp = MAX(0.0, akDIncrVegHyp / (cDCarrVeg+NearZero) * aDVeg*aDVeg);
tDEnvProdVegHyp = aMuVegHyp / cMuMaxVeg * tDEnvVegHyp;
tDProdVegHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE MAX(0.0, aMuVegHyp * uDVegHyp - tDEnvProdVegHyp) ENDIF;
tDProdSubVegHyp = bfSubVegHyp * tDProdVegHyp;
tDRespVeg = kDRespVeg * uFunTmRespVeg * aDVeg;
tDEnvMortVegHyp = tDEnvVegHyp - tDEnvProdVegHyp;
tDMortVegHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE bkMortVeg * uDVegHyp + tDEnvMortVegHyp ENDIF;
tDMortVegWHyp = fDetWMortVeg * (1.0 - bfRootVeg) * tDMortVegHyp;
tDGrazVegBird = IF ( (sTime GE cYearStartBirds * DaysPerYear) AND (Day GE cDayStartBirds) AND (Day LE cDayEndBirds) ) THEN cPrefVegBird * aDVeg / (hDVegBird + aDVeg) * cBirdsPerha / m2Perha * cDGrazPerBird ELSE 0.0 ENDIF;
bkManVeg = IF ((Day GE cDayManVeg1 AND Day LT cDayManVeg1 + cLengMan) OR (Day GE cDayManVeg2 AND Day LT cDayManVeg2 + cLengMan)) THEN -LN(1.0 - fManVeg) / cLengMan ELSE 0.0 ENDIF;
tDManVeg = bkManVeg * aDVeg;
tPManVeg = rPDVeg * tDManVeg;
tNManVeg = rNDVeg * tDManVeg;
tO2ProdVegHyp = molO2molC * cCPerDW * tDProdVegHyp;
tO2RespVegWHyp = molO2molC * cCPerDW * bfSubVegHyp * tDRespVeg * aCorO2BODHyp;
aDepthOxySed = IF(aInclStrat EQ TRUE AND (2.0 * oO2WHyp * akO2DifCor / tSOD) GT NearZero ) THEN POW((2.0 * oO2WHyp * akO2DifCor / tSOD) , (0.5)) ELSEIF ( aInclStrat EQ TRUE AND (2.0 * oO2WHyp * akO2DifCor / tSOD) LE NearZero ) THEN POW ( NearZero , (0.5)) ELSEIF ( aInclStrat EQ TRUE AND ( 2.0 * oO2WEpi * akO2DifCor / tSOD ) LE NearZero ) THEN POW ( NearZero , (0.5)) ELSE POW ( ( 2.0 * oO2WEpi * akO2DifCor / tSOD ) , (0.5)) ENDIF;
afOxySed = aDepthOxySed / cDepthS;
tO2RespVegS = molO2molC * cCPerDW * bfRootVeg * tDRespVeg * afOxySed;
tO2ProdVegSHyp = MIN (tO2RespVegS, tO2ProdVegHyp);
tO2ProdVegWHyp = MIN( tO2ProdVegHyp - tO2ProdVegSHyp, bfSubVeg * tO2ProdVegHyp);
tO2UptNO3VegWHyp = O2PerNO3 * molO2molN * bfSubVeg * tNUptNO3VegWHyp;
tO2UptNO3VegS = O2PerNO3 * molO2molN * tNUptNO3VegS;
tPExcrVeg = (rPDVeg *2.0)/ (cPDVegMax + rPDVeg) * rPDVeg * tDRespVeg;
tPExcrVegS = bfRootVeg * tPExcrVeg;
tPExcrVegW = tPExcrVeg - tPExcrVegS;
tPMortVegHyp = rPDVeg * tDMortVegHyp;
tPMortVegPO4Hyp = fDissMortVeg * tPMortVegHyp;
tPMortVegPO4SHyp = bfRootVeg * tPMortVegPO4Hyp;
tPMortVegPO4WHyp = tPMortVegPO4Hyp - tPMortVegPO4SHyp;
tPMortVegDetHyp = tPMortVegHyp - tPMortVegPO4Hyp;
tPMortVegDetWHyp = fDetWMortVeg * (1.0 - bfRootVeg) * tPMortVegDetHyp;
tPMortVegDetSHyp = tPMortVegDetHyp - tPMortVegDetWHyp;
tPGrazVegBird = rPDVeg * tDGrazVegBird;
tNExcrVeg = (2.0 * rNDVeg) / (cNDVegMax + rNDVeg) * rNDVeg * tDRespVeg;
tNExcrVegS = bfRootVeg * tNExcrVeg;
tNExcrVegW = tNExcrVeg - tNExcrVegS;
tNMortVegHyp = rNDVeg * tDMortVegHyp;
tNMortVegNH4Hyp = fDissMortVeg * tNMortVegHyp;
tNMortVegNH4SHyp = IF (aInclStrat EQ TRUE ) THEN bfRootVeg * tNMortVegNH4Hyp ELSE 0.0 ENDIF;
tNMortVegNH4WHyp = tNMortVegNH4Hyp - tNMortVegNH4SHyp;
tNMortVegDetHyp = tNMortVegHyp - tNMortVegNH4Hyp;
tNMortVegDetWHyp = fDetWMortVeg * (1.0 - bfRootVeg) * tNMortVegDetHyp;
tNMortVegDetSHyp = tNMortVegDetHyp - tNMortVegDetWHyp;
tNGrazVegBird = rNDVeg * tDGrazVegBird;
tDAssVegBird = fDAssBird * tDGrazVegBird;
tDEgesBird = tDGrazVegBird - tDAssVegBird;
tPAssVegBird = fDAssBird * tPGrazVegBird;
tPEgesBird = tPGrazVegBird - tPAssVegBird;
tPEgesBirdPO4 = fDissEgesBird * tPEgesBird;
tPEgesBirdDet = tPEgesBird - tPEgesBirdPO4;
tNAssVegBird = fDAssBird * tNGrazVegBird;
tNEgesBird = tNGrazVegBird - tNAssVegBird;
tNEgesBirdNH4 = fDissEgesBird * tNEgesBird;
tNEgesBirdDet = tNEgesBird - tNEgesBirdNH4;
wDBedDetWHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE) THEN (tDMortVegWHyp) / uDepthWHyp ELSE 0.0 ENDIF;
aMuTmLVegEpi = ufDay * bfShootVeg * aLLimShootVegEpi * uFunTmProdVeg * cMuMaxVeg;
akDIncrVegEpi = aMuTmLVegEpi - kDRespVeg * uFunTmRespVeg - bkMortVeg;
tDEnvVegEpi = MAX(0.0, akDIncrVegEpi / (cDCarrVeg+NearZero) * aDVeg*aDVeg);
aMuVegEpi = aMuTmLVegEpi * aNutLimVeg;
tDEnvProdVegEpi = aMuVegEpi / cMuMaxVeg * tDEnvVegEpi;
tDProdVegEpi = MAX(0.0, aMuVegEpi * uDVegEpi - tDEnvProdVegEpi);
tDEnvMortVegEpi = tDEnvVegEpi - tDEnvProdVegEpi;
tDMortVegEpi = bkMortVeg * uDVegEpi + tDEnvMortVegEpi;
tNMortVegEpi = rNDVeg * tDMortVegEpi;
tNMortVegNH4Epi = fDissMortVeg * tNMortVegEpi;
tNMortVegNH4SEpi = bfRootVeg * tNMortVegNH4Epi;
wPBedPO4WHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE ) THEN (- tPUptVegWHyp + tPExcrVegW * uVegHeightHyp / uVegHeight + tPMortVegPO4WHyp ) /uDepthWHyp ELSE 0.0 ENDIF;
wPBedDetWHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE) THEN (tPMortVegDetWHyp ) / uDepthWHyp ELSE 0.0 ENDIF;
wNBedNH4WHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE ) THEN (- tNUptNH4VegWHyp + tNExcrVegW * (uVegHeightHyp /uVegHeight ) + tNMortVegNH4WHyp ) / uDepthWHyp ELSE 0.0 ENDIF;
wNBedNO3WHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE) THEN - tNUptNO3VegWHyp / uDepthWHyp ELSE 0.0 ENDIF;
wNBedDetWHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE) THEN (tNMortVegDetWHyp ) / uDepthWHyp ELSE 0.0 ENDIF;
tDMortVegSHyp = tDMortVegHyp - tDMortVegWHyp;
tDBedDetSHyp = IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE ) THEN tDMortVegSHyp ELSE 0.0 ENDIF;
tO2BedWHyp =IF (aInclStrat EQ TRUE AND InclVeg EQ TRUE ) THEN tO2ProdVegWHyp - tO2RespVegWHyp + tO2UptNO3VegWHyp ELSE 0.0 ENDIF;
UseLoss = IF (InclWeb EQ TRUE) THEN 0.0 ELSE 1.0 ENDIF;
uFunTmLossHyp = EXP(-0.5/(cSigTmLoss*cSigTmLoss) *((uTmHyp-cTmOptLoss)*(uTmHyp-cTmOptLoss) -(cTmRef-cTmOptLoss)*(cTmRef-cTmOptLoss)));
uFunTmLossEpi = EXP(-0.5/(cSigTmLoss*cSigTmLoss) *((uTmEpi-cTmOptLoss)*(uTmEpi-cTmOptLoss) -(cTmRef-cTmOptLoss)*(cTmRef-cTmOptLoss)));
rPDBlueWHyp = oPBlueWHyp /(oDBlueWHyp+NearZero);
rNDBlueWHyp = oNBlueWHyp /(oDBlueWHyp+NearZero);
rPDBlueS = aPBlueS /(aDBlueS+NearZero);
rNDBlueS = aNBlueS /(aDBlueS+NearZero);
uFunTmBlueHyp = EXP(-0.5/(cSigTmBlue*cSigTmBlue) *((uTmHyp-cTmOptBlue)*(uTmHyp-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmProdBlueHyp = uFunTmBlueHyp;
uFunTmRespBlueHyp = uFunTmBlueHyp;
uFunTmBlueEpi = EXP(-0.5/(cSigTmBlue*cSigTmBlue) *((uTmEpi-cTmOptBlue)*(uTmEpi-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmProdBlueEpi = uFunTmBlueEpi;
uFunTmRespBlueEpi = uFunTmBlueEpi;
uFunTmBlueS = EXP(-0.5/(cSigTmBlue*cSigTmBlue) *((uTmBot-cTmOptBlue)*(uTmBot-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmRespBlueS = uFunTmBlueS;
uFunTmBlueSurf = EXP(-0.5/(cSigTmBlue*cSigTmBlue) *((uTmSurf-cTmOptBlue)*(uTmSurf-cTmOptBlue) - (cTmRef-cTmOptBlue)*(cTmRef-cTmOptBlue)));
uFunTmProdBlueSurf = uFunTmBlueSurf;
uFunTmRespBlueSurf = uFunTmBlueSurf;
aLPARAveSurf = MAX(0.0,(uLPARSurf - aLPARBotSurf)/aExtSurf);
aLPARAveEpi = (aLPARBotSurf - aLPARBotEpi)/ (aExtCoefOpenEpi * uDepthWEpi);
aLPARAveHyp = (aLPARBotEpiOpen -aLPARBotHyp)/ (aExtCoefOpenHyp * uDepthWEpi);
aAuxNfixLSurf = cAlphNfix * aLPARAveSurf ;
aAuxNfixLEpi = cAlphNfix * aLPARAveEpi;
aAuxNfixLHyp = cAlphNfix * aLPARAveHyp;
rNfixBlueSurf = cNfixMaxBlue - cNfixMaxBlue * EXP(- aAuxNfixLSurf) + cNfixDarkBlue;
rNfixBlueEpi = cNfixMaxBlue - cNfixMaxBlue * EXP(- aAuxNfixLEpi) + cNfixDarkBlue;
rNfixBlueHyp = cNfixMaxBlue - cNfixMaxBlue * EXP(- aAuxNfixLHyp) + cNfixDarkBlue;
aVPUptMaxCrBlueHyp = MAX(0.0,cVPUptMaxBlue * uFunTmProdBlueHyp *(cPDBlueMax - rPDBlueWHyp) /(cPDBlueMax - cPDBlueMin));
aVPUptBlueHyp = oPO4WHyp * aVPUptMaxCrBlueHyp /(aVPUptMaxCrBlueHyp / cAffPUptBlue + oPO4WHyp);
wPUptBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVPUptBlueHyp * oDBlueWHyp ENDIF;
aVNUptMaxCrBlueHyp = MAX(0.0,cVNUptMaxBlue * uFunTmProdBlueHyp * (cNDBlueMax - rNDBlueWHyp) /(cNDBlueMax - cNDBlueMin));
ahNUptBlueHyp = aVNUptMaxCrBlueHyp / cAffNUptBlue;
aVNUptBlueHyp = oNDissWHyp * aVNUptMaxCrBlueHyp /(ahNUptBlueHyp + oNDissWHyp);
wNUptBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVNUptBlueHyp * oDBlueWHyp ENDIF;
tNUptBlueHyp = wNUptBlueHyp * uDepthWHyp;
afNH4UptBlueHyp = oNH4WHyp * oNO3WHyp /((ahNUptBlueHyp + oNH4WHyp) *(ahNUptBlueHyp + oNO3WHyp)) + oNH4WHyp * ahNUptBlueHyp /((oNH4WHyp + oNO3WHyp) *(ahNUptBlueHyp + oNO3WHyp));
uMuMaxTmBlueHyp = cMuMaxBlue * uFunTmProdBlueHyp;
uMuMaxTmBlueEpi = cMuMaxBlue * uFunTmProdBlueEpi;
aPLimBlueHyp = MAX(0.0,(1.0 - cPDBlueMin / rPDBlueWHyp) * cPDBlueMax /(cPDBlueMax - cPDBlueMin));
aNLimBlueHyp = MAX(0.0,(1.0 - cNDBlueMin / rNDBlueWHyp) * cNDBlueMax /(cNDBlueMax - cNDBlueMin));
aSiLimBlueHyp = oSiO2WHyp /(hSiAssBlue + oSiO2WHyp);
aLLimBlueHyp = UseSteeleBlue *(EXP(1.0) /(aExtCoefHyp * uDepthWHyp) *(EXP(- aLPARBotHyp /(cLOptRefBlue * uFunTmProdBlueHyp)) - EXP(- uLPARSurfHyp /(cLOptRefBlue * uFunTmProdBlueHyp)))) +(1.0 - UseSteeleBlue) *(1.0 /(aExtCoefHyp * uDepthWHyp) * LN((1.0 + uLPARSurfHyp / (hLRefBlue * uFunTmProdBlueHyp)) / (1.0 + aLPARBotHyp /(hLRefBlue * uFunTmProdBlueHyp))));
aMuTmLBlueHyp = ufDay *(1.0 - afCovSurfVeg) * aLLimBlueHyp * uMuMaxTmBlueHyp;
aNutLimBlueHyp = MIN(aPLimBlueHyp,(MIN(aNLimBlueHyp,aSiLimBlueHyp)));
aMuBlueHyp = aNutLimBlueHyp * aMuTmLBlueHyp;
wDAssBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aMuBlueHyp*oDBlueWHyp ENDIF;
rChDBlueHyp = cChDBlueMax -(cChDBlueMax - cChDBlueMin) * aLLimBlueHyp;
oChlaBlueHyp = mgPerg * rChDBlueHyp * oDBlueWHyp;
aChlaBlueHyp = mgPerg * rChDBlueHyp * aDBlueWHyp;
aExtChBlueHyp = cExtSpBlue / rChDBlueHyp;
aNfixBlueHyp  = rNfixBlueHyp *aChlaBlueHyp /ugPerg;
tNUptBlueAirHyp = IF (InclNfix EQ FALSE) THEN 0.0 ELSE aNfixBlueHyp ENDIF;
tNUptBlueWHyp = IF (InclNfix EQ FALSE) THEN tNUptBlueHyp ELSE tNUptBlueHyp - tNUptBlueAirHyp ENDIF;
wNUptBlueWHyp = tNUptBlueWHyp / uDepthWHyp;
ukDRespTmBlueHyp = kDRespBlue * uFunTmRespBlueHyp;
wNUptNH4BlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE afNH4UptBlueHyp * wNUptBlueWHyp ENDIF;
wNUptNO3BlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptBlueWHyp - wNUptNH4BlueHyp ENDIF;
ukDRespTmBlueEpi = kDRespBlue * uFunTmRespBlueEpi;
ukDRespTmBlueS = kDRespBlue * uFunTmRespBlueS;
wDRespBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukDRespTmBlueHyp * oDBlueWHyp ENDIF;
ukDRespTmBlueSurf = kDRespBlue * uFunTmRespBlueSurf;
ukLossTmBlueHyp = UseLoss * kLossBlue * uFunTmLossHyp;
ukLossTmBlueEpi = UseLoss * kLossBlue * uFunTmLossEpi;
wDLossBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukLossTmBlueHyp * oDBlueWHyp ENDIF;
wDMortBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortBlueW * oDBlueWHyp ENDIF;
uCorVSetBlueHyp = (cVSetBlue + uQOutInf /mmPerm - uQInSeep / mmPerm) * aFunTauSetOMHyp * uFunTmSetHyp;
tDResusBlue = aDBlueS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespBlueS = ukDRespTmBlueS * aDBlueS;
tDMortBlueS = kMortBlueS * aDBlueS;
ukDDecBlueHyp = ukDRespTmBlueHyp + ukLossTmBlueHyp + kMortBlueW +(uCorVSetBlueHyp * uFunTmSetHyp) / uDepthWHyp;
wPExcrBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (rPDBlueWHyp * 2.0 )/(cPDBlueMax + rPDBlueWHyp) * rPDBlueWHyp * wDRespBlueWHyp ENDIF;
wPLossBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDBlueWHyp * wDLossBlueHyp ENDIF;
wPMortBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortBlueW * oPBlueWHyp ENDIF;
tPResusBlue = rPDBlueS * tDResusBlue;
tPExcrBlueS = (rPDBlueS *2.0)/(cPDBlueMax + rPDBlueS) * rPDBlueS * tDRespBlueS;
tPMortBlueS = kMortBlueS * aPBlueS;
wNExcrBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (rNDBlueWHyp *2.0)/(cNDBlueMax + rNDBlueWHyp) * rNDBlueWHyp * wDRespBlueWHyp ENDIF;
wNLossBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDBlueWHyp * wDLossBlueHyp ENDIF;
wNMortBlueWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortBlueW * oNBlueWHyp ENDIF;
tNResusBlue = rNDBlueS * tDResusBlue;
tNExcrBlueS = (2.0 * rNDBlueS) /(cNDBlueMax + rNDBlueS) * rNDBlueS * tDRespBlueS;
tNMortBlueS = kMortBlueS * aNBlueS;
aFunTauSetOMEpi = MIN(1.0 / POW(aFunDimSusp +NearZero , (0.5)), 1.0);
aFunTauSetIMEpi = aFunTauSetOMEpi;
uCorVSetBlueEpi = (cVSetBlue + uQOutInf /mmPerm - uQInSeep / mmPerm) * aFunTauSetOMEpi * uFunTmSetEpi;
rNDGrenWHyp = oNGrenWHyp /(oDGrenWHyp+NearZero);
rPDGrenS = aPGrenS /(aDGrenS+NearZero);
rNDGrenS = aNGrenS /(aDGrenS+NearZero);
uFunTmGrenHyp = EXP(-0.5/(cSigTmGren*cSigTmGren) *((uTmHyp-cTmOptGren)*(uTmHyp-cTmOptGren) - (cTmRef-cTmOptGren)*(cTmRef-cTmOptGren)));
uFunTmGrenEpi = EXP(-0.5/(cSigTmGren*cSigTmGren) *((uTmEpi-cTmOptGren)*(uTmEpi-cTmOptGren) - (cTmRef-cTmOptGren)*(cTmRef-cTmOptGren)));
uFunTmGrenS = EXP(-0.5/(cSigTmGren*cSigTmGren) *((uTmBot-cTmOptGren)*(uTmBot-cTmOptGren) - (cTmRef-cTmOptGren)*(cTmRef-cTmOptGren)));
uFunTmProdGrenHyp = uFunTmGrenHyp;
uFunTmRespGrenHyp = uFunTmGrenHyp;
uFunTmProdGrenEpi = uFunTmGrenEpi;
uFunTmRespGrenEpi = uFunTmGrenEpi;
uFunTmRespGrenS = uFunTmGrenS;
aVNUptMaxCrGrenHyp = MAX(0.0,cVNUptMaxGren * uFunTmProdGrenHyp * (cNDGrenMax - rNDGrenWHyp) /(cNDGrenMax - cNDGrenMin));
ahNUptGrenHyp = aVNUptMaxCrGrenHyp / cAffNUptGren;
aVNUptGrenHyp = oNDissWHyp * aVNUptMaxCrGrenHyp /(ahNUptGrenHyp + oNDissWHyp);
wNUptGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVNUptGrenHyp * oDGrenWHyp ENDIF;
afNH4UptGrenHyp = oNH4WHyp * oNO3WHyp /((ahNUptGrenHyp + oNH4WHyp) *(ahNUptGrenHyp + oNO3WHyp)) + oNH4WHyp * ahNUptGrenHyp /((oNH4WHyp + oNO3WHyp) *(ahNUptGrenHyp + oNO3WHyp));
wNUptNH4GrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE afNH4UptGrenHyp * wNUptGrenHyp ENDIF;
wNUptNO3GrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptGrenHyp - wNUptNH4GrenHyp ENDIF;
uMuMaxTmGrenHyp = cMuMaxGren * uFunTmProdGrenHyp;
uMuMaxTmGrenEpi = cMuMaxGren * uFunTmProdGrenEpi;
aNLimGrenHyp = MAX(0.0,(1.0 - cNDGrenMin / rNDGrenWHyp) * cNDGrenMax /(cNDGrenMax - cNDGrenMin));
aSiLimGrenHyp = oSiO2WHyp /(hSiAssGren + oSiO2WHyp);
aLLimGrenHyp = UseSteeleGren *(EXP(1.0) /(aExtCoefHyp * uDepthWHyp) *(EXP(- aLPARBotHyp /(cLOptRefGren * uFunTmProdGrenHyp)) - EXP(- uLPARSurfHyp /(cLOptRefGren * uFunTmProdGrenHyp)))) +(1.0 - UseSteeleGren) *(1.0 /(aExtCoefHyp * uDepthWHyp) * LN((1.0 + uLPARSurfHyp / (hLRefGren * uFunTmProdGrenHyp)) / (1.0 + aLPARBotHyp /(hLRefGren * uFunTmProdGrenHyp))));
aMuTmLGrenHyp = ufDay *(1.0 - afCovSurfVeg) * aLLimGrenHyp * uMuMaxTmGrenHyp;
rChDGrenHyp = cChDGrenMax -(cChDGrenMax - cChDGrenMin) * aLLimGrenHyp;
oChlaGrenHyp = mgPerg * rChDGrenHyp * oDGrenWHyp;
aExtChGrenHyp = cExtSpGren / rChDGrenHyp;
ukDRespTmGrenHyp = kDRespGren * uFunTmRespGrenHyp;
ukDRespTmGrenEpi = kDRespGren * uFunTmRespGrenEpi;
ukDRespTmGrenS = kDRespGren * uFunTmRespGrenS;
wDRespGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukDRespTmGrenHyp * oDGrenWHyp ENDIF;
ukLossTmGrenHyp = UseLoss * kLossGren * uFunTmLossHyp;
ukLossTmGrenEpi = UseLoss * kLossGren * uFunTmLossEpi;
wDLossGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukLossTmGrenHyp * oDGrenWHyp ENDIF;
wDMortGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortGrenW * oDGrenWHyp ENDIF;
uCorVSetGrenHyp = (cVSetGren+ uQOutInf /mmPerm - uQInSeep / mmPerm) * aFunTauSetOMHyp * uFunTmSetHyp;
tDSetGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE uCorVSetGrenHyp * oDGrenWHyp ENDIF;
tDResusGren = aDGrenS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespGrenS = ukDRespTmGrenS * aDGrenS;
tDMortGrenS = kMortGrenS * aDGrenS;
ukDDecGrenHyp = ukDRespTmGrenHyp + ukLossTmGrenHyp + kMortGrenW +(uCorVSetGrenHyp * uFunTmSetHyp) / uDepthWHyp;
wPMortGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortGrenW * oPGrenWHyp ENDIF;
tPResusGren = rPDGrenS * tDResusGren;
tPExcrGrenS = (2.0 * rPDGrenS) /(cPDGrenMax + rPDGrenS) * rPDGrenS * tDRespGrenS;
tPMortGrenS = kMortGrenS * aPGrenS;
wNExcrGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (2.0 * rNDGrenWHyp) /(cNDGrenMax + rNDGrenWHyp) * rNDGrenWHyp * wDRespGrenWHyp ENDIF;
wNLossGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDGrenWHyp * wDLossGrenHyp ENDIF;
wNMortGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortGrenW * oNGrenWHyp ENDIF;
tNSetGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDGrenWHyp * tDSetGrenHyp ENDIF;
tNResusGren = rNDGrenS * tDResusGren;
tNExcrGrenS = (2.0 * rNDGrenS) /(cNDGrenMax + rNDGrenS) * rNDGrenS * tDRespGrenS;
tNMortGrenS = kMortGrenS * aNGrenS;
uCorVSetGrenEpi = (cVSetGren + uQOutInf /mmPerm - uQInSeep / mmPerm) * aFunTauSetOMEpi * uFunTmSetEpi;
tDSetGrenEpi = uCorVSetGrenEpi * oDGrenWEpi;
rNDGrenWEpi = oNGrenWEpi /(oDGrenWEpi+NearZero);
tNSetGrenEpi = rNDGrenWEpi * tDSetGrenEpi;
rPDGrenWEpi = oPGrenWEpi /(oDGrenWEpi+NearZero);
tPSetGrenEpi = rPDGrenWEpi * tDSetGrenEpi;
wNPrimGrenWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptGrenHyp - wNExcrGrenWHyp - wNLossGrenHyp - wNMortGrenWHyp -(tNSetGrenHyp -tNSetGrenEpi - tNResusGren) / uDepthWHyp ENDIF;
rPDDiatWHyp = oPDiatWHyp /(oDDiatWHyp+NearZero);
rNDDiatWHyp = oNDiatWHyp /(oDDiatWHyp+NearZero);
rPDDiatS = aPDiatS /(aDDiatS+NearZero);
uFunTmDiatHyp = EXP(-0.5/(cSigTmDiat*cSigTmDiat) *((uTmHyp-cTmOptDiat)*(uTmHyp-cTmOptDiat) - (cTmRef-cTmOptDiat)*(cTmRef-cTmOptDiat)));
rNDDiatS = aNDiatS /(aDDiatS+NearZero);
uFunTmDiatEpi = EXP(-0.5/(cSigTmDiat*cSigTmDiat) *((uTmEpi-cTmOptDiat)*(uTmEpi-cTmOptDiat) - (cTmRef-cTmOptDiat)*(cTmRef-cTmOptDiat)));
uFunTmDiatS = EXP(-0.5/(cSigTmDiat*cSigTmDiat) *((uTmBot-cTmOptDiat)*(uTmBot-cTmOptDiat) - (cTmRef-cTmOptDiat)*(cTmRef-cTmOptDiat)));
uFunTmProdDiatHyp = uFunTmDiatHyp;
uFunTmRespDiatHyp = uFunTmDiatHyp;
uFunTmProdDiatEpi = uFunTmDiatEpi;
uFunTmRespDiatEpi = uFunTmDiatEpi;
uFunTmRespDiatS = uFunTmDiatS;
aVPUptMaxCrDiatHyp = MAX(0.0,cVPUptMaxDiat * uFunTmProdDiatHyp *(cPDDiatMax - rPDDiatWHyp) /(cPDDiatMax - cPDDiatMin));
aVPUptDiatHyp = oPO4WHyp * aVPUptMaxCrDiatHyp /(aVPUptMaxCrDiatHyp / cAffPUptDiat + oPO4WHyp);
wPUptDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVPUptDiatHyp * oDDiatWHyp ENDIF;
aVNUptMaxCrDiatHyp = MAX(0.0,cVNUptMaxDiat * uFunTmProdDiatHyp * (cNDDiatMax - rNDDiatWHyp) /(cNDDiatMax - cNDDiatMin));
ahNUptDiatHyp = aVNUptMaxCrDiatHyp / cAffNUptDiat;
aVNUptDiatHyp = oNDissWHyp * aVNUptMaxCrDiatHyp /(ahNUptDiatHyp + oNDissWHyp);
wNUptDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVNUptDiatHyp * oDDiatWHyp ENDIF;
afNH4UptDiatHyp = oNH4WHyp * oNO3WHyp /((ahNUptDiatHyp + oNH4WHyp) *(ahNUptDiatHyp + oNO3WHyp)) + oNH4WHyp * ahNUptDiatHyp /((oNH4WHyp + oNO3WHyp) *(ahNUptDiatHyp + oNO3WHyp));
wNUptNH4DiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE afNH4UptDiatHyp * wNUptDiatHyp ENDIF;
wNUptNO3DiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptDiatHyp - wNUptNH4DiatHyp ENDIF;
uMuMaxTmDiatHyp = cMuMaxDiat * uFunTmProdDiatHyp;
uMuMaxTmDiatEpi = cMuMaxDiat * uFunTmProdDiatEpi;
aPLimDiatHyp = MAX(0.0,(1.0 - cPDDiatMin / rPDDiatWHyp) * cPDDiatMax /(cPDDiatMax - cPDDiatMin));
aNLimDiatHyp = MAX(0.0,(1.0 - cNDDiatMin / rNDDiatWHyp) * cNDDiatMax /(cNDDiatMax - cNDDiatMin));
aSiLimDiatHyp = oSiO2WHyp /(hSiAssDiat + oSiO2WHyp);
aLLimDiatHyp = UseSteeleDiat *(EXP(1.0) /(aExtCoefHyp * uDepthWHyp) *(EXP(- aLPARBotHyp /(cLOptRefDiat * uFunTmProdDiatHyp)) - EXP(- uLPARSurfHyp /(cLOptRefDiat * uFunTmProdDiatHyp)))) +(1.0 - UseSteeleDiat) *(1.0 /(aExtCoefHyp * uDepthWHyp) * LN((1.0 + uLPARSurfHyp / (hLRefDiat * uFunTmProdDiatHyp)) / (1.0 + aLPARBotHyp /(hLRefDiat * uFunTmProdDiatHyp))));
aMuTmLDiatHyp = ufDay *(1.0 - afCovSurfVeg) * aLLimDiatHyp * uMuMaxTmDiatHyp;
aNutLimDiatHyp = MIN(aPLimDiatHyp,(MIN(aNLimDiatHyp,aSiLimDiatHyp)));
aMuDiatHyp = aNutLimDiatHyp * aMuTmLDiatHyp;
wDAssDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aMuDiatHyp*oDDiatWHyp ENDIF;
rChDDiatHyp = cChDDiatMax -(cChDDiatMax - cChDDiatMin) * aLLimDiatHyp;
oChlaDiatHyp = mgPerg * rChDDiatHyp * oDDiatWHyp;
aExtChDiatHyp = cExtSpDiat / rChDDiatHyp;
ukDRespTmDiatHyp = kDRespDiat * uFunTmRespDiatHyp;
ukDRespTmDiatEpi = kDRespDiat * uFunTmRespDiatEpi;
ukDRespTmDiatS = kDRespDiat * uFunTmRespDiatS;
wDRespDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukDRespTmDiatHyp * oDDiatWHyp ENDIF;
ukLossTmDiatHyp = UseLoss * kLossDiat * uFunTmLossHyp;
ukLossTmDiatEpi = UseLoss * kLossDiat * uFunTmLossEpi;
wDLossDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE ukLossTmDiatHyp * oDDiatWHyp ENDIF;
wDMortDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortDiatW * oDDiatWHyp ENDIF;
uCorVSetDiatHyp = (cVSetDiat + uQOutInf /mmPerm - uQInSeep / mmPerm) * aFunTauSetOMHyp * uFunTmSetHyp;
tDSetDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE uCorVSetDiatHyp * oDDiatWHyp ENDIF;
tDResusDiat = aDDiatS /(aDPhytS+NearZero) * tDResusPhytTot;
tDRespDiatS = ukDRespTmDiatS * aDDiatS;
tDMortDiatS = kMortDiatS * aDDiatS;
ukDDecDiatHyp = ukDRespTmDiatHyp + ukLossTmDiatHyp + kMortDiatW +(uCorVSetDiatHyp * uFunTmSetHyp) / uDepthWHyp;
wPExcrDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (2.0 * rPDDiatWHyp) /(cPDDiatMax + rPDDiatWHyp) * rPDDiatWHyp * wDRespDiatWHyp ENDIF;
wPLossDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDDiatWHyp * wDLossDiatHyp ENDIF;
wPMortDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortDiatW * oPDiatWHyp ENDIF;
tPSetDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDDiatWHyp * tDSetDiatHyp ENDIF;
tPResusDiat = rPDDiatS * tDResusDiat;
tPExcrDiatS = (2.0 * rPDDiatS) /(cPDDiatMax + rPDDiatS) * rPDDiatS * tDRespDiatS;
tPMortDiatS = kMortDiatS * aPDiatS;
wNExcrDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (2.0 * rNDDiatWHyp) /(cNDDiatMax + rNDDiatWHyp) * rNDDiatWHyp * wDRespDiatWHyp ENDIF;
wNLossDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDDiatWHyp * wDLossDiatHyp ENDIF;
wNMortDiatWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortDiatW * oNDiatWHyp ENDIF;
tNSetDiatHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDDiatWHyp * tDSetDiatHyp ENDIF;
tNResusDiat = rNDDiatS * tDResusDiat;
tNExcrDiatS = (2.0 * rNDDiatS) /(cNDDiatMax + rNDDiatS) * rNDDiatS * tDRespDiatS;
tNMortDiatS = kMortDiatS * aNDiatS;
uCorVSetDiatEpi = (cVSetDiat + uQOutInf /mmPerm - uQInSeep / mmPerm)  * aFunTauSetOMEpi * uFunTmSetEpi;
tDSetDiatEpi = uCorVSetDiatEpi * oDDiatWEpi;
rPDDiatWEpi = oPDiatWEpi /(oDDiatWEpi+NearZero);
tPSetDiatEpi = rPDDiatWEpi * tDSetDiatEpi;
rNDDiatWEpi = oNDiatWEpi /(oDDiatWEpi+NearZero);
tNSetDiatEpi = rNDDiatWEpi * tDSetDiatEpi;
wDPrimDiatWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wDAssDiatHyp - wDRespDiatWHyp - wDLossDiatHyp - wDMortDiatWHyp -(tDSetDiatHyp - tDSetDiatEpi - tDResusDiat) / uDepthWHyp ENDIF;
wPPrimDiatWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wPUptDiatHyp - wPExcrDiatWHyp - wPLossDiatHyp - wPMortDiatWHyp -(tPSetDiatHyp -tPSetDiatEpi - tPResusDiat) / uDepthWHyp ENDIF;
wNPrimDiatWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptDiatHyp - wNExcrDiatWHyp - wNLossDiatHyp - wNMortDiatWHyp -(tNSetDiatHyp - tNSetDiatEpi - tNResusDiat) / uDepthWHyp ENDIF;
oChlaHyp = oChlaDiatHyp + oChlaGrenHyp + oChlaBlueHyp;
wDRespPhytWHyp = wDRespDiatWHyp + wDRespGrenWHyp + wDRespBlueWHyp;
wDMortPhytWHyp = wDMortDiatWHyp + wDMortGrenWHyp + wDMortBlueWHyp;
wDLossPhytHyp = wDLossDiatHyp + wDLossGrenHyp + wDLossBlueHyp;
wPMortPhytWHyp = wPMortDiatWHyp + wPMortGrenWHyp + wPMortBlueWHyp;
tPResusPhyt = tPResusDiat + tPResusGren + tPResusBlue;
wNUptPhytHyp = wNUptDiatHyp + wNUptGrenHyp + wNUptBlueHyp;
wNUptNH4PhytHyp = wNUptNH4DiatHyp + wNUptNH4GrenHyp + wNUptNH4BlueHyp;
wNUptNO3PhytHyp = wNUptNO3DiatHyp + wNUptNO3GrenHyp + wNUptNO3BlueHyp;
wNExcrPhytWHyp = wNExcrDiatWHyp + wNExcrGrenWHyp + wNExcrBlueWHyp;
wNMortPhytWHyp = wNMortDiatWHyp + wNMortGrenWHyp + wNMortBlueWHyp;
tNResusPhyt = tNResusDiat + tNResusGren + tNResusBlue;
wNLossPhytHyp = wNLossDiatHyp + wNLossGrenHyp + wNLossBlueHyp;
tDRespPhytS = tDRespDiatS + tDRespGrenS + tDRespBlueS;
tDMortPhytS = tDMortDiatS + tDMortGrenS + tDMortBlueS;
tPExcrPhytS = tPExcrDiatS + tPExcrGrenS + tPExcrBlueS;
tPMortPhytS = tPMortDiatS + tPMortGrenS + tPMortBlueS;
tNExcrPhytS = tNExcrDiatS + tNExcrGrenS + tNExcrBlueS;
tNMortPhytS = tNMortDiatS + tNMortGrenS + tNMortBlueS;
wSiUptDiatHyp = cSiDDiat * wDAssDiatHyp;
wSiExcrDiatWHyp = cSiDDiat * wDRespDiatWHyp ;
wSiLossDiatHyp = cSiDDiat * wDLossDiatHyp;
wSiMortDiatWHyp = cSiDDiat * wDMortDiatWHyp;
tSiSetDiatHyp = cSiDDiat * tDSetDiatHyp;
tSiResusDiat = cSiDDiat * tDResusDiat ;
rCyDBlueHyp = cCyDBlueMax -(cCyDBlueMax - cCyDBlueMin) * aLLimBlueHyp;
oCyanHyp = rCyDBlueHyp * oDBlueWHyp * mgPerg;
fDDiatHyp = oDDiatWHyp /(oDDiatWHyp + oDGrenWHyp + oDBlueWHyp + NearZero);
wDPrimDetWHyp = wDMortPhytWHyp + wDLossPhytHyp;
wO2RespPhytWHyp = molO2molC * cCPerDW * wDRespPhytWHyp * aCorO2BODHyp;
wO2UptNO3PhytHyp = O2PerNO3 * molO2molN * wNUptNO3PhytHyp;
wPMortPhytPO4WHyp = fDissMortPhyt * wPMortPhytWHyp;
wPMortPhytDetWHyp = wPMortPhytWHyp - wPMortPhytPO4WHyp;
tPMortPhytPO4S = fDissMortPhyt * tPMortPhytS;
tPMortPhytDetS = tPMortPhytS - tPMortPhytPO4S;
tPPrimPO4S = tPExcrPhytS + tPMortPhytPO4S;
tPPrimTotT = 0.0;
wNMortPhytNH4WHyp = fDissMortPhyt * wNMortPhytWHyp;
wNMortPhytDetWHyp = wNMortPhytWHyp - wNMortPhytNH4WHyp;
wNLossPhytNH4Hyp = fDissLoss * wNLossPhytHyp;
wNLossPhytDetHyp = wNLossPhytHyp - wNLossPhytNH4Hyp;
wNPrimNH4WHyp = - wNUptNH4PhytHyp + wNExcrPhytWHyp + wNLossPhytNH4Hyp + wNMortPhytNH4WHyp;
wNPrimNO3WHyp = - wNUptNO3PhytHyp;
wNPrimDetWHyp = wNLossPhytDetHyp + wNMortPhytDetWHyp;
tNMortPhytNH4S = fDissMortPhyt * tNMortPhytS;
tNMortPhytDetS = tNMortPhytS - tNMortPhytNH4S;
tNPrimNH4S = tNExcrPhytS + tNMortPhytNH4S;
tNPrimNO3S = 0.0;
tNPrimTotT = 0.0;
tSiExcrDiatS = cSiDDiat * tDRespDiatS ;
tSiMortDiatS = cSiDDiat * tDMortDiatS;
wSiPrimSiO2WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wSiExcrDiatWHyp - wSiUptDiatHyp + tSiExcrDiatS / uDepthWHyp ENDIF;
wSiPrimDetWHyp = wSiMortDiatWHyp + wSiLossDiatHyp;
tSiPrimTotT = 0.0;
aPACoefEpi = cPACoefMin +(cPACoefMax - cPACoefMin) * hPACoef / (hPACoef + oDOMWEpi);
aPACoefHyp = cPACoefMin +(cPACoefMax - cPACoefMin) * hPACoef / (hPACoef + oDOMWHyp);
bSecchiMaxEpi = uDepthWEpi;
aSecchiEpi = MIN(bSecchiMaxEpi,aPACoefEpi / aExtCoefOpenEpi);
aTransparencyEpi = aSecchiEpi / uDepthWEpi;
bSecchiMaxHyp = uDepthWHyp + cSecchiPlus;
aSecchiHyp = IF ( aInclStrat EQ TRUE AND uDepthWEpi LE aPACoefEpi / aExtCoefOpenEpi ) THEN MIN(bSecchiMaxHyp,aPACoefHyp / aExtCoefOpenHyp - aSecchiEpi) ELSEIF ( aInclStrat EQ TRUE AND uDepthWEpi GT aPACoefEpi / aExtCoefOpenEpi) THEN 0.0 ELSE MIN(bSecchiMaxHyp,aPACoefHyp / aExtCoefOpenHyp) ENDIF;
aSecchiT = IF ( aInclStrat EQ TRUE ) THEN aSecchiEpi +aSecchiHyp ELSE aSecchiEpi ENDIF;
aTransparencyHyp = aSecchiHyp / uDepthWHyp;
aTransparencyT = IF ( aInclStrat EQ TRUE ) THEN aSecchiT / uDepthW ELSE aSecchiT / uDepthWHyp ENDIF;
aDepthEuphHyp = cEuph * aSecchiHyp;
aRelDepthEuphHyp = aDepthEuphHyp / uDepthWHyp;
aChlaHHyp = oChlaHyp * uDepthWHyp;
aCovPhytWHyp = cCovSpPhyt *(oDPhytWHyp * uDepthWHyp);
rExtChPhytHyp = aExtPhytHyp /(oChlaHyp / mgPerg + NearZero);
uFunTmZooHyp = EXP(-0.5/(cSigTmZoo*cSigTmZoo) *((uTmHyp-cTmOptZoo)*(uTmHyp-cTmOptZoo) -(cTmRef-cTmOptZoo)*(cTmRef-cTmOptZoo)));
uFunTmZooEpi = EXP(-0.5/(cSigTmZoo*cSigTmZoo) *((uTmEpi-cTmOptZoo)*(uTmEpi-cTmOptZoo) -(cTmRef-cTmOptZoo)*(cTmRef-cTmOptZoo)));
rPDZooHyp = oPZooHyp /(oDZooHyp+NearZero);
rNDZooHyp = oNZooHyp/(oDZooHyp+NearZero);
oDFoodZooHyp = cPrefDiat * oDDiatWHyp + cPrefGren * oDGrenWHyp + cPrefBlue * oDBlueWHyp + cPrefDet * oDDetWHyp;
aFiltHyp = cFiltMax * uFunTmZooHyp * hFilt /(hFilt + oDOMWHyp);
ukDAssTmZooHyp = fDAssZoo * cFiltMax * uFunTmZooHyp * hFilt;
ukDAssTmZooEpi = fDAssZoo * cFiltMax * uFunTmZooEpi * hFilt;
aDSatZooHyp = oDFoodZooHyp /(hFilt + oDOMWHyp);
ukDRespTmZooHyp = kDRespZoo * uFunTmZooHyp;
ukDRespTmZooEpi = kDRespZoo * uFunTmZooEpi;
ukDIncrZooHyp = ukDAssTmZooHyp - ukDRespTmZooHyp - kMortZoo;
ukDIncrZooEpi = ukDAssTmZooEpi - ukDRespTmZooEpi - kMortZoo;
wDEnvZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE MAX(0.0,ukDIncrZooHyp / cDCarrZoo * oDZooHyp*oDZooHyp) ENDIF;
wDAssZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aDSatZooHyp *(ukDAssTmZooHyp * oDZooHyp - wDEnvZooHyp) ENDIF;
wDConsZooHyp = wDAssZooHyp / fDAssZoo;
wDConsDetZooHyp = cPrefDet*oDDetWHyp / oDFoodZooHyp * wDConsZooHyp;
wDConsDiatZooHyp = cPrefDiat*oDDiatWHyp / oDFoodZooHyp * wDConsZooHyp;
wDConsGrenZooHyp = cPrefGren*oDGrenWHyp / oDFoodZooHyp * wDConsZooHyp;
wDConsBlueZooHyp = cPrefBlue*oDBlueWHyp / oDFoodZooHyp * wDConsZooHyp;
wDConsPhytZooHyp = wDConsDiatZooHyp + wDConsGrenZooHyp + wDConsBlueZooHyp;
wDEgesZooHyp = wDConsZooHyp - wDAssZooHyp;
aCorDRespZooHyp = MAX(cPDZooRef / rPDZooHyp,cNDZooRef / rNDZooHyp);
wDRespZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aCorDRespZooHyp * ukDRespTmZooHyp * oDZooHyp ENDIF;
wDMortZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kMortZoo * oDZooHyp +(1.0 - aDSatZooHyp) * wDEnvZooHyp ENDIF;
oPFoodZooHyp = cPrefDiat*oPDiatWHyp + cPrefGren*oPGrenWHyp + cPrefBlue*oPBlueWHyp + cPrefDet * oPDetWHyp;
rPDFoodZooHyp = oPFoodZooHyp /(oDFoodZooHyp+NearZero);
wPConsDiatZooHyp = rPDDiatWHyp * wDConsDiatZooHyp;
wPConsBlueZooHyp = rPDBlueWHyp * wDConsBlueZooHyp;
wPConsDetZooHyp = rPDDetWHyp * wDConsDetZooHyp;
afPAssZooHyp = MIN(1.0,cPDZooRef / rPDFoodZooHyp * fDAssZoo);
akPExcrZooHyp = rPDZooHyp / cPDZooRef * kDRespZoo * uFunTmZooHyp;
wPExcrZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE akPExcrZooHyp*oPZooHyp ENDIF;
wPMortZooHyp = rPDZooHyp * wDMortZooHyp;
wPMortZooPO4Hyp = fDissMortZoo * wPMortZooHyp;
wPMortZooDetHyp = wPMortZooHyp - wPMortZooPO4Hyp;
oNFoodZooHyp = cPrefDiat*oNDiatWHyp + cPrefGren*oNGrenWHyp + cPrefBlue*oNBlueWHyp + cPrefDet*oNDetWHyp;
rNDFoodZooHyp = oNFoodZooHyp /(oDFoodZooHyp+NearZero);
wNConsDiatZooHyp = rNDDiatWHyp*wDConsDiatZooHyp;
wNConsGrenZooHyp = rNDGrenWHyp*wDConsGrenZooHyp;
wNConsBlueZooHyp = rNDBlueWHyp*wDConsBlueZooHyp;
wNConsPhytZooHyp = wNConsDiatZooHyp + wNConsGrenZooHyp + wNConsBlueZooHyp;
wNConsDetZooHyp = rNDDetWHyp*wDConsDetZooHyp;
wNConsZooHyp = wNConsPhytZooHyp + wNConsDetZooHyp;
afNAssZooHyp = MIN(1.0,cNDZooRef / rNDFoodZooHyp * fDAssZoo);
wNAssZooHyp = afNAssZooHyp*wNConsZooHyp;
wNEgesZooHyp = wNConsZooHyp - wNAssZooHyp;
wNEgesZooNH4Hyp = fDissEgesZoo*wNEgesZooHyp;
wNEgesZooDetHyp = wNEgesZooHyp - wNEgesZooNH4Hyp;
kNExcrZooHyp = rNDZooHyp / cNDZooRef * kDRespZoo * uFunTmZooHyp;
wNExcrZooHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE kNExcrZooHyp*oNZooHyp ENDIF;
wNMortZooHyp = rNDZooHyp*wDMortZooHyp;
wNMortZooNH4Hyp = fDissMortZoo*wNMortZooHyp;
wNMortZooDetHyp = wNMortZooHyp - wNMortZooNH4Hyp;
wSiConsDiatZooHyp = cSiDDiat * wDConsDiatZooHyp;
uFunTmBent = EXP(-0.5/(cSigTmBent*cSigTmBent) *((uTmBot-cTmOptBent)*(uTmBot-cTmOptBent) - (cTmRef-cTmOptBent)*(cTmRef-cTmOptBent)));
aDFoodBent = aDDetS + aDPhytS;
rPDBent = aPBent /(aDBent+NearZero);
rNDBent = aNBent /(aDBent+NearZero);
tDMigrBent = kMigrBent *(cDBentIn - aDBent);
aDSatBent = aDFoodBent /(hDFoodBent + aDFoodBent);
ukDIncrBent = (kDAssBent - kDRespBent) * uFunTmBent - kMortBent;
tDEnvBent = MAX(0.0,ukDIncrBent / cDCarrBent * aDBent*aDBent);
tDAssBent = aDSatBent *(kDAssBent * uFunTmBent * aDBent - tDEnvBent);
aDAssBentSp = tDAssBent / aDBent;
tDConsBent = tDAssBent / fDAssBent;
tDConsDetBent = aDDetS / aDFoodBent * tDConsBent;
tDConsDiatBent = aDDiatS / aDFoodBent * tDConsBent;
tDConsGrenBent = aDGrenS / aDFoodBent * tDConsBent;
tDConsBlueBent = aDBlueS / aDFoodBent * tDConsBent;
tDConsPhytBent = tDConsDiatBent + tDConsGrenBent + tDConsBlueBent;
tDEgesBent = tDConsBent - tDAssBent;
tDRespBent = (cPDBentRef / rPDBent) * kDRespBent * uFunTmBent * aDBent;
tDMortBent = kMortBent*aDBent +(1.0 - aDSatBent) * tDEnvBent;
aPFoodBent = aPDetS + aPPhytS;
rPDFoodBent = aPFoodBent /(aDFoodBent+NearZero);
tPConsDetBent = rPDDetS * tDConsDetBent;
tPConsDiatBent = rPDDiatS * tDConsDiatBent;
tPConsGrenBent = rPDGrenS * tDConsGrenBent;
tPConsBlueBent = rPDBlueS * tDConsBlueBent;
tPConsPhytBent = tPConsDiatBent + tPConsGrenBent + tPConsBlueBent;
tPConsBent = tPConsDetBent + tPConsPhytBent;
afPAssBent = MIN(1.0,cPDBentRef / rPDFoodBent * fDAssBent);
tPAssBent = afPAssBent * tPConsBent;
tPEgesBent = tPConsBent - tPAssBent;
tPEgesBentPO4 = fDissEgesBent * tPEgesBent;
tPEgesBentDet = (1.0 - fDissEgesBent) * tPEgesBent;
tPExcrBent = (rPDBent / cPDBentRef) * kDRespBent * uFunTmBent * aPBent;
tPMortBent = rPDBent * tDMortBent;
tPMortBentPO4 = fDissMortBent * tPMortBent;
tPMortBentDet = (1.0-fDissMortBent)*tPMortBent;
tPMigrBent = kMigrBent *(cPDBentRef*cDBentIn - aPBent);
aNFoodBent = aNDetS + aNPhytS;
rNDFoodBent = aNFoodBent /(aDFoodBent+NearZero);
tNMigrBent = kMigrBent *(cNDBentRef*cDBentIn - aNBent);
tNConsDetBent = rNDDetS * tDConsDetBent;
tNConsDiatBent = rNDDiatS * tDConsDiatBent;
tNConsGrenBent = rNDGrenS * tDConsGrenBent;
tNConsBlueBent = rNDBlueS * tDConsBlueBent;
tNConsPhytBent = tNConsDiatBent + tNConsGrenBent + tNConsBlueBent;
tNConsBent = tNConsDetBent + tNConsPhytBent;
afNAssBent = MIN(1.0,cNDBentRef / rNDFoodBent * fDAssBent);
tNAssBent = afNAssBent * tNConsBent;
tNEgesBent = tNConsBent - tNAssBent;
tNEgesBentNH4 = fDissEgesBent * tNEgesBent;
tNEgesBentDet = (1.0 - fDissEgesBent) * tNEgesBent;
tNExcrBent = (rNDBent / cNDBentRef) * kDRespBent * uFunTmBent * aNBent;
tNMortBent = rNDBent * tDMortBent;
tNMortBentNH4 = fDissMortBent*tNMortBent;
tNMortBentDet = (1.0-fDissMortBent)*tNMortBent;
tSiConsDiatBent = cSiDDiat * tDConsDiatBent;
aFunVegFish = MAX(0.0,1.0 - cRelVegFish * aCovVeg);
ukDIncrFiJv = (kDAssFiJv - kDRespFiJv) * uFunTmFish - kMortFiJv;
aDSatFiAd = (aFunVegFish * aDBent) *(aFunVegFish * aDBent) /(hDBentFiAd * hDBentFiAd + (aFunVegFish * aDBent) *(aFunVegFish * aDBent));
ukDIncrFiAd = (kDAssFiAd - kDRespFiAd) * uFunTmFish - kMortFiAd;
ukHarvFish = IF (COS(2.0 * Pi * sTime / DaysInYear) GT 0.1) THEN kHarvFishWin ELSE kHarvFishSum ENDIF;
afPAssFiAd = MIN(1.0,cPDFishRef / rPDBent * fDAssFiAd);
afNAssFiAd = MIN(1.0,cNDFishRef / rNDBent * fDAssFiAd);
uFunTmPisc = EXP(-0.5 /(cSigTmPisc*cSigTmPisc) *((uTmEpi - cTmOptPisc)*(uTmEpi - cTmOptPisc) - (cTmRef - cTmOptPisc)*(cTmRef - cTmOptPisc)));
aDCarrPisc = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN MAX(cDCarrPiscMin,MIN(cDCarrPiscMax,cDCarrPiscBare)) ELSEIF (aDShootPhra LT cDPhraMinPisc) THEN cDCarrPiscMin ELSEIF (aCovVeg LT cCovVegMin) THEN MAX(cDCarrPiscMin,MIN(cDCarrPiscMax,fMarsh *(1.0/PerCent) * cRelPhraPisc)) ELSE MAX(cDCarrPiscMin,MIN(cDCarrPiscMax,fMarsh *(1.0/PerCent) *(cRelPhraPisc + cRelVegPisc))) ENDIF;
aFunVegPisc = aDSubVeg /(hDVegPisc + aDSubVeg + NearZero);
akDIncrPisc = (kDAssPisc * aFunVegPisc - kDRespPisc) * uFunTmPisc - kMortPisc;
ukHarvPisc = IF (COS(2.0*Pi * sTime / DaysInYear) GT 0.1) THEN kHarvPiscWin ELSE kHarvPiscSum ENDIF;
tDWebDetS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tDConsDetBent + tDEgesBent + tDMortBent ENDIF;
tDWebDiatS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tDConsDiatBent ENDIF;
tDWebGrenS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tDConsGrenBent ENDIF;
tDWebBlueS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tDConsBlueBent ENDIF;
tDWebPhytS = tDWebDiatS + tDWebGrenS + tDWebBlueS;
tPWebPO4S = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPExcrBent + tPEgesBentPO4 + tPMortBentPO4 ENDIF;
tPWebDetS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tPConsDetBent + tPEgesBentDet + tPMortBentDet ENDIF;
tPWebDiatS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tPConsDiatBent ENDIF;
tPWebGrenS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tPConsGrenBent ENDIF;
tPWebBlueS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tPConsBlueBent ENDIF;
tPWebPhytS = tPWebDiatS + tPWebGrenS + tPWebBlueS;
tNWebNH4S = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNExcrBent + tNEgesBentNH4 + tNMortBentNH4 ENDIF;
tNWebNO3S = IF (FALSE EQ InclWeb) THEN 0.0 ELSE 0.0 ENDIF;
tNWebDetS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tNConsDetBent + tNEgesBentDet + tNMortBentDet ENDIF;
tNWebDiatS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tNConsDiatBent ENDIF;
tNWebGrenS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tNConsGrenBent ENDIF;
tNWebBlueS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - tNConsBlueBent ENDIF;
tNWebPhytS = tNWebDiatS + tNWebGrenS + tNWebBlueS;
wSiWebSiO2W = 0.0;
wSiWebDetWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wSiConsDiatZooHyp ENDIF;
tSiWebDetS = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tSiConsDiatBent ENDIF;
tSiWebTotT = IF (FALSE EQ InclWeb) THEN 0.0 ELSE 0.0 ENDIF;
aPrefAveHyp = (cPrefDiat * oDDiatWHyp + cPrefGren * oDGrenWHyp + cPrefBlue * oDBlueWHyp + cPrefDet * oDDetWHyp) / oDOMWHyp;
wDConsZoo2Hyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aFiltHyp * aPrefAveHyp * oDOMWHyp * oDZooHyp ENDIF;
aDConsZooSpHyp = wDConsZooHyp / oDZooHyp;
aDAssZooSpHyp = wDAssZooHyp / oDZooHyp;
aDGrazSpHyp = wDConsZooHyp / oDOMWHyp;
aNConsZooSpHyp = wNConsZooHyp / oNZooHyp;
aNGrazSpHyp = wNConsZooHyp / oNOMWHyp;
afDShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDShootPhra /(aDRootPhra + aDShootPhra) ELSE 0.0 ENDIF;
rDSRPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDShootPhra/aDRootPhra ELSE 0.0 ENDIF;
rPDShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPShootPhra/aDShootPhra ELSE 0.0 ENDIF;
rNDShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNShootPhra/aDShootPhra ELSE 0.0 ENDIF;
rPDRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aPRootPhra/aDRootPhra ELSE 0.0 ENDIF;
rNDRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNRootPhra/aDRootPhra ELSE 0.0 ENDIF;
aLengShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aDShootPhra / cDStemPhra / cDensStemPhra ELSE 0.0 ENDIF;
bDayInitPhra = IF (Day LT 1.0 OR sTime LT StartTime + 1.0) THEN 367 ELSEIF (uTmEpi GE cTmInitPhra AND bDayInitPhra GT 366) THEN Day ELSE bDayInitPhra ENDIF;
aDAllPhra = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (Day LT bDayInitPhra) THEN 0.0 ELSEIF (Day LE bDayInitPhra + 1.0 / kDAllPhra) THEN fDAllPhra * aDRootPhra ELSE 0.0 ENDIF;
tDAllPhra = IF (FALSE EQ InclSeason) THEN 0.0 ELSEIF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (Day LT bDayInitPhra) THEN 0.0 ELSEIF (Day LE bDayInitPhra + 1.0 / kDAllPhra) THEN kDAllPhra * aDAllPhra ELSE 0.0 ENDIF;
tNTransPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rNDRootPhra * tDAllPhra ELSE 0.0 ENDIF;
tPTransPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rPDRootPhra * tDAllPhra ELSE 0.0 ENDIF;
aVNUptPhraMaxCr = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MAX(0.0,cVNUptPhraMax * POW(cQ10ProdPhra , (0.1 *(uTmEpi - cTmRef))) *(cNDPhraMax - rNDRootPhra) /(cNDPhraMax - cNDPhraMin)) ELSE 0.0 ENDIF;
ahNUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVNUptPhraMaxCr / cAffNUptPhra ELSE 0.0 ENDIF;
aVNUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVNUptPhraMaxCr * oNDissSM /(ahNUptPhraS + oNDissSM) ELSE 0.0 ENDIF;
tNUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVNUptPhraS * aDRootPhra ELSE 0.0 ENDIF;
tNUptNH4PhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aNH4SM / aNDissSM * tNUptPhraS ELSE 0.0 ENDIF;
tNUptNO3PhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tNUptPhraS - tNUptNH4PhraS ELSE 0.0 ENDIF;
tNUptShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afDShootPhra * tNUptPhraS ELSE 0.0 ENDIF;
tNUptRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tNUptPhraS - tNUptShootPhra ELSE 0.0 ENDIF;
aVPUptPhraMaxCr = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MAX(0.0,cVPUptPhraMax * POW(cQ10ProdPhra , (0.1 *(uTmEpi - cTmRef))) *(cPDPhraMax - rPDRootPhra) /(cPDPhraMax - cPDPhraMin)) ELSE 0.0 ENDIF;
ahPUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVPUptPhraMaxCr / cAffPUptPhra ELSE 0.0 ENDIF;
aVPUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVPUptPhraMaxCr * oPO4SM /(ahPUptPhraS + oPO4SM) ELSE 0.0 ENDIF;
tPUptPhraS = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aVPUptPhraS * aDRootPhra ELSE 0.0 ENDIF;
tPUptShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afDShootPhra * tPUptPhraS ELSE 0.0 ENDIF;
tPUptRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tPUptPhraS - tPUptShootPhra ELSE 0.0 ENDIF;
uFunTmProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN POW(cQ10ProdPhra , (0.1 *(uTmEpi - cTmRef))) ELSE 0.0 ENDIF;
ukDRespTmPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDRespPhra * POW(cQ10RespPhra , (0.1 *(uTmEpi - cTmRef))) ELSE 0.0 ENDIF;
aMuPhotPhra = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (aLengShootPhra GE uDepthWM) THEN cMuPhraMax * uFunTmProdPhra * ufDay ELSE 0.0 ENDIF;
aNLimProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (1.0 - cNDPhraMin / rNDRootPhra) * cNDPhraMax /(cNDPhraMax - cNDPhraMin) ELSE 0.0 ENDIF;
aPLimProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (1.0 - cPDPhraMin / rPDRootPhra) * cPDPhraMax /(cPDPhraMax - cPDPhraMin) ELSE 0.0 ENDIF;
aNutLimPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MIN(aNLimProdPhra,aPLimProdPhra) ELSE 0.0 ENDIF;
aMuPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aMuPhotPhra * aNutLimPhra ELSE 0.0 ENDIF;
akDIncrPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aMuPhotPhra - ukDRespTmPhra - kDMortShootPhra ELSE 0.0 ENDIF;
tDDensPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN MAX(0.0,akDIncrPhra / cDShootPhraMax * aDShootPhra * aDShootPhra) ELSE 0.0 ENDIF;
tDDensProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aMuPhra / cMuPhraMax * tDDensPhra ELSE 0.0 ENDIF;
tDProdPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN aMuPhra * aDShootPhra - tDDensProdPhra ELSE 0.0 ENDIF;
tDProdShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN afDShootPhra * tDProdPhra ELSE 0.0 ENDIF;
tDProdRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDProdPhra - tDProdShootPhra ELSE 0.0 ENDIF;
tDRespShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ukDRespTmPhra * aDShootPhra ELSE 0.0 ENDIF;
tDRespRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN ukDRespTmPhra * aDRootPhra ELSE 0.0 ENDIF;
tO2RespRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN molO2molC * cCPerDW * tDRespRootPhra * afOxySedM ELSE 0.0 ENDIF;
tO2FlowPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tO2RespRootPhra ELSE 0.0 ENDIF;
bDayRealPhra = IF (Day LT 180.0) THEN 367 ELSEIF (ufDay LE fDayWin AND bDayRealPhra GT 366) THEN Day ELSE bDayRealPhra ENDIF;
aDRealPhra = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (Day LT bDayRealPhra) THEN 0.0 ELSEIF (Day LE bDayRealPhra + 1.0 / kDRealPhra) THEN fDRealPhra * aDShootPhra ELSE 0.0 ENDIF;
tDRealPhra = IF (FALSE EQ InclSeason) THEN 0.0 ELSEIF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (Day LT bDayRealPhra) THEN 0.0 ELSEIF (Day LE bDayRealPhra + 1.0 / kDRealPhra) THEN kDRealPhra * aDRealPhra ELSE 0.0 ENDIF;
tNRetrPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rNDShootPhra * tDRealPhra ELSE 0.0 ENDIF;
tPRetrPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rPDShootPhra * tDRealPhra ELSE 0.0 ENDIF;
tDMortShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMortShootPhra * aDShootPhra ELSE 0.0 ENDIF;
tNMortShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rNDShootPhra * tDMortShootPhra ELSE 0.0 ENDIF;
tPMortShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rPDShootPhra * tDMortShootPhra ELSE 0.0 ENDIF;
tDMortRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kDMortRootPhra * aDRootPhra ELSE 0.0 ENDIF;
tNMortRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rNDRootPhra * tDMortRootPhra ELSE 0.0 ENDIF;
tPMortRootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN rPDRootPhra * tDMortRootPhra ELSE 0.0 ENDIF;
tDManShootPhra = IF (FALSE EQ InclMarsh OR fMarsh GT NearZero) THEN 0.0 ELSEIF ((Day GE cDayManPhra) AND (Day LT cDayManPhra + 1.0)) THEN fManPhra * aDShootPhra ELSE 0.0 ENDIF;
tNManShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDManShootPhra * rNDShootPhra ELSE 0.0 ENDIF;
tPManShootPhra = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDManShootPhra * rPDShootPhra ELSE 0.0 ENDIF;
tDIMSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDSetIMM ELSE 0.0 ENDIF;
tDHumSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN fRefrDetS * tDMinDetSM - tDMinHumSM ELSE 0.0 ENDIF;
tDDetSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN tDSetDetM - tDMinDetSM + tDSetPhytM + tDMortRootPhra ELSE 0.0 ENDIF;
vDeltaSM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (tDIMSM / cRhoIM +(tDHumSM + tDDetSM) / cRhoOM)/(1.0 - bPorS) ELSE 0.0 ENDIF;
tDBurIMM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN ((tDHumSM + tDDetSM) +(cRhoOM / cRhoIM) * tDIMSM) / ((aDHumSM + aDDetSM) / aDIMSM + cRhoOM / cRhoIM) ELSE ((tDHumSM + tDDetSM) +(cRhoOM / cRhoIM) * tDIMSM) / (fDOrgSoil /(1.0 - fDOrgSoil) + cRhoOM / cRhoIM) ENDIF;
tDBurOMM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN (aDHumSM + aDDetSM) / aDIMSM * tDBurIMM ELSE fDOrgSoil /(1.0 - fDOrgSoil) * tDBurIMM ENDIF;
tDBurDetM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN aDDetSM /(aDHumSM + aDDetSM) * tDBurOMM ELSE 0.0 ENDIF;
tDBurHumM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tDBurOMM - tDBurDetM ELSE tDBurOMM ENDIF;
tDBurTotM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tDBurIMM + tDBurOMM ELSE tDBurIMM + tDBurOMM ENDIF;
tPBurHumM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rPDHumSM * tDBurHumM ELSE cPDSoilOM * tDBurHumM ENDIF;
tPBurDetM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rPDDetSM * tDBurDetM ELSE 0.0 ENDIF;
tPBurAIMM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN aPAIMSM / aDIMSM * tDBurIMM ELSE 0.0 ENDIF;
tPBurPO4M = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN aPO4SM *(vDeltaSM / cDepthSM) ELSE cPO4Ground *(bPorSM * vDeltaSM) ENDIF;
tPBurTotM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tPBurDetM + tPBurHumM + tPBurAIMM + tPBurPO4M ELSE tPBurHumM + tPBurAIMM + tPBurPO4M ENDIF;
tNBurHumM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rNDHumSM * tDBurHumM ELSE cNDSoilOM * tDBurHumM ENDIF;
tNBurDetM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rNDDetSM * tDBurDetM ELSE 0.0 ENDIF;
tNBurNH4M = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN aNH4SM *(vDeltaSM / cDepthSM) ELSE cNH4Ground *(bPorSM * vDeltaSM) ENDIF;
tNBurNO3M = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN aNO3SM *(vDeltaSM / cDepthSM) ELSE cNO3Ground *(bPorSM * vDeltaSM) ENDIF;
tNBurTotM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tNBurDetM + tNBurHumM + tNBurNH4M + tNBurNO3M ELSE tNBurHumM + tNBurNH4M + tNBurNO3M ENDIF;
tSiBurDetM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN rSiDDetSM * tDBurDetM ELSE 0.0 ENDIF;
tSiBurTotM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (vDeltaSM GE 0.0) THEN tSiBurDetM ELSE 0.0 ENDIF;
vDeltaWM = IF (FALSE EQ InclMarsh OR fMarsh LE NearZero) THEN 0.0 ELSEIF (ConstDepth EQ TRUE) THEN 0.0 ELSE - vDeltaSM ENDIF;
aRelDeltaWM = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN vDeltaWM / uDepthWM ELSE 0.0 ENDIF;
bTimeDred = IF (sTime GE cDredStart * DaysPerYear) THEN (FLOOR(TimeYears/cDredInterval) * cDredInterval) * DaysPerYear ELSE -9999.999 ENDIF;
bRhoSolidSoil = fDOrgSoil * cRhoOM +(1.0 - fDOrgSoil) * cRhoIM;
tDMarsTotT = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (- tDBurTotM - wDMinDetWM * uDepthWM -(1.0 - fRefrDetS) * tDMinDetSM - tDMinHumSM + tDProdPhra - tDRespShootPhra - tDRespRootPhra - tDManShootPhra) * fMarsh ELSE 0.0 ENDIF;
tPMarsTotT = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (- tPInfPO4SM + tPSeepPO4SM - tPDifGroundPO4M - tPBurTotM - tPChemPO4M - tPManShootPhra) * fMarsh ELSE 0.0 ENDIF;
tNMarsTotT = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN (- tNInfNH4SM + tNSeepNH4SM - tNInfNO3SM + tNSeepNO3SM - tNDifGroundNO3M - tNDifGroundNH4M - tNBurTotM - wNDenitWM * uDepthWM - tNDenitSM - tNManShootPhra) * fMarsh ELSE 0.0 ENDIF;
tSiMarsTotT = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN - tSiBurDetM * fMarsh - tInfSiO2WM + tSeepSiO2WM ELSE 0.0 ENDIF;
uTauSubstEpi = 1.0 / (ukOutEpi+NearZero);
akExchMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN kExchMaxM * hfMarsh /(hfMarsh + fMarsh)  ELSE 0.0 ENDIF;
afVolMarshEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN fMarsh * uDepthWM / uDepthWEpi ELSE 0.0 ENDIF;
akExchLEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi * afVolMarshEpi ELSE 0.0 ENDIF;
oPPhytWEpi = oPDiatWEpi + oPGrenWEpi + oPBlueWEpi;
oNPhytWEpi = oNDiatWEpi + oNGrenWEpi + oNBlueWEpi;
oDSestWEpi = oDOMWEpi + oDIMWEpi;
oPOMWEpi = oPPhytWEpi + oPDetWEpi;
oPSestWEpi = oPPhytWEpi + oPDetWEpi + oPAIMWEpi;
oPInorgWEpi = oPO4WEpi + oPAIMWEpi;
oPTotWEpi = oPSestWEpi + oPO4WEpi;
oNOMWEpi = oNPhytWEpi + oNDetWEpi;
oNSestWEpi = oNOMWEpi;
oNkjWEpi = oNSestWEpi + oNH4WEpi;
oNTotWEpi = oNkjWEpi + oNO3WEpi;
rPDIMWEpi = oPAIMWEpi / oDIMWEpi;
rPDDetWEpi = oPDetWEpi / (oDDetWEpi+NearZero);
rNDDetWEpi = oNDetWEpi / (oDDetWEpi+NearZero);
rSiDDetWEpi = oSiDetWEpi / (oDDetWEpi+NearZero);
wDDilIMEpi = ukOutEpi * oDIMWEpi;
wDDilDetEpi = ukOutEpi * oDDetWEpi;
wDDilDiatEpi = ukOutEpi * oDDiatWEpi;
wDDilGrenEpi = ukOutEpi * oDGrenWEpi;
wDDilBlueEpi = ukOutEpi * oDBlueWEpi;
wDDilPhytEpi = wDDilDiatEpi + wDDilGrenEpi + wDDilBlueEpi;
wDDilZooEpi = ukOutEpi * oDZooEpi;
wPDilZooEpi = ukOutEpi * oPZooEpi;
wNDilZooEpi = ukOutEpi * oNZooEpi;
wPDilPO4Epi = ukOutEpi * oPO4WEpi;
wPDilDetEpi = ukOutEpi*oPDetWEpi;
wPDilAIMEpi = ukOutEpi * oPAIMWEpi;
wNDilNH4Epi = ukOutEpi * oNH4WEpi;
wNDilNO3Epi = ukOutEpi * oNO3WEpi;
wNDilDetEpi = ukOutEpi * oNDetWEpi;
uO2LoadEpi = IF (ReadTranFrac EQ TRUE) THEN mO2LoadEpi ELSE cO2In * uQInEpi / mmPerm ENDIF;
wO2OutflEpi = ukOutEpi * oO2WEpi;
wPDilDiatEpi = ukOutEpi * oPDiatWEpi;
wNDilDiatEpi = ukOutEpi * oNDiatWEpi;
wPDilGrenEpi = ukOutEpi * oPGrenWEpi;
wNDilGrenEpi = ukOutEpi * oNGrenWEpi;
wPDilBlueEpi = ukOutEpi * oPBlueWEpi;
wNDilBlueEpi = ukOutEpi * oNBlueWEpi;
wPDilPhytEpi = wPDilDiatEpi + wPDilGrenEpi + wPDilBlueEpi;
wNDilPhytEpi = wNDilDiatEpi + wNDilGrenEpi + wNDilBlueEpi;
wDOutflTotEpi = ukOutEpi * oDSestWEpi;
wPOutflTotEpi = ukOutEpi * oPTotWEpi;
wNOutflTotEpi = ukOutEpi * oNTotWEpi;
wSiDilSiO2Epi = ukOutEpi * oSiO2WEpi;
wSiDilDetEpi = ukOutEpi * oSiDetWEpi;
wSiDilDiatEpi = cSiDDiat * wDDilDiatEpi;
wSiOutflTotEpi = ukOutEpi * (oSiO2WEpi + oSiDetWEpi + cSiDDiat * oDDiatWEpi);
wDDilTotEpi = wDDilIMEpi + wDDilDetEpi + wDDilPhytEpi;
wPDilTotEpi = wPDilDetEpi + wPDilPO4Epi + wPDilAIMEpi + wPDilPhytEpi;
wNDilTotEpi = wNDilDetEpi + wNDilNO3Epi + wNDilNH4Epi + wNDilPhytEpi;
wSiDilTotEpi = wSiDilDetEpi + wSiDilSiO2Epi + wSiDilDiatEpi;
wDTranDiatEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadDiatEpi / uDepthWEpi - wDDilDiatEpi ENDIF;
wPTranDiatEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadDiatEpi / uDepthWEpi - wPDilDiatEpi ENDIF;
wNTranDiatEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadDiatEpi / uDepthWEpi - wNDilDiatEpi ENDIF;
wDTranGrenEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadGrenEpi / uDepthWEpi - wDDilGrenEpi ENDIF;
wPTranGrenEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadGrenEpi / uDepthWEpi - wPDilGrenEpi ENDIF;
wNTranGrenEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadGrenEpi / uDepthWEpi - wNDilGrenEpi ENDIF;
wDTranBlueEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadBlueEpi / uDepthWEpi - wDDilBlueEpi ENDIF;
wPTranBlueEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadBlueEpi / uDepthWEpi - wPDilBlueEpi ENDIF;
wNTranBlueEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadBlueEpi / uDepthWEpi - wNDilBlueEpi ENDIF;
wDTranPhytEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE wDTranDiatEpi + wDTranGrenEpi + wDTranBlueEpi ENDIF;
wPTranPhytEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE wPTranDiatEpi + wPTranGrenEpi + wPTranBlueEpi ENDIF;
wNTranPhytEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE wNTranDiatEpi + wNTranGrenEpi + wNTranBlueEpi ENDIF;
wSiTranSiO2Epi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadSiO2Epi / uDepthWEpi - wSiDilSiO2Epi ENDIF;
wSiTranDetWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadDetEpi / uDepthWEpi - wSiDilDetEpi ENDIF;
tSiTranTotTEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uSiLoadEpi - wSiDilTotEpi * uDepthWEpi ENDIF;
wDTranZooEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE (uDLoadZooEpi /uDepthWEpi - wDDilZooEpi) ENDIF;
wPTranZooEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE (uPLoadZooEpi /uDepthWEpi - wPDilZooEpi) ENDIF;
wNTranZooEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE (uNLoadZooEpi /uDepthWEpi - wNDilZooEpi) ENDIF;
wDTranIMWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadIMEpi / uDepthWEpi - wDDilIMEpi ENDIF;
wDTranDetWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadDetEpi / uDepthWEpi - wDDilDetEpi ENDIF;
wO2TranWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uO2LoadEpi / uDepthWEpi - wO2OutflEpi ENDIF;
wPTranPO4WEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadPO4Epi / uDepthWEpi - wPDilPO4Epi ENDIF;
wPTranAIMWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadAIMEpi / uDepthWEpi - wPDilAIMEpi ENDIF;
wPTranDetWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadDetEpi / uDepthWEpi - wPDilDetEpi ENDIF;
wNTranNH4WEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadNH4Epi / uDepthWEpi - wNDilNH4Epi ENDIF;
wNTranNO3WEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadNO3Epi / uDepthWEpi - wNDilNO3Epi ENDIF;
wNTranDetWEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadDetEpi / uDepthWEpi - wNDilDetEpi ENDIF;
tDTranTotTEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uDLoadEpi - wDDilTotEpi * uDepthWEpi ENDIF;
tPTranTotTEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uPLoadEpi - wPDilTotEpi * uDepthWEpi ENDIF;
tNTranTotTEpi = IF (FALSE EQ InclTran) THEN 0.0 ELSE uNLoadEpi - wNDilTotEpi * uDepthWEpi ENDIF;
wDExchIMMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDIMWEpi - oDIMWM) ELSE 0.0 ENDIF;
wPExchPO4MEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPO4WEpi - oPO4WM) ELSE 0.0 ENDIF;
wPExchAIMMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPAIMWEpi - oPAIMWM) ELSE 0.0 ENDIF;
wNExchNH4MEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNH4WEpi - oNH4WM) ELSE 0.0 ENDIF;
wNExchNO3MEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNO3WEpi - oNO3WM) ELSE 0.0 ENDIF;
wSiExchSiO2MEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oSiO2WEpi - oSiO2WM) ELSE 0.0 ENDIF;
wO2ExchMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oO2WEpi - oO2WM) ELSE 0.0 ENDIF;
wDExchDetMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDDetWEpi - oDDetWM) ELSE 0.0 ENDIF;
wPExchDetMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPDetWEpi - oPDetWM) ELSE 0.0 ENDIF;
wNExchDetMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNDetWEpi - oNDetWM) ELSE 0.0 ENDIF;
wSiExchDetMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oSiDetWEpi - oSiDetWM) ELSE 0.0 ENDIF;
wDExchDiatMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDDiatWEpi - oDDiatWM) ELSE 0.0 ENDIF;
wPExchDiatMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPDiatWEpi - oPDiatWM) ELSE 0.0 ENDIF;
wNExchDiatMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNDiatWEpi - oNDiatWM) ELSE 0.0 ENDIF;
wSiExchDiatMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * wDExchDiatMEpi ELSE 0.0 ENDIF;
wDExchGrenMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDGrenWEpi - oDGrenWM) ELSE 0.0 ENDIF;
wPExchGrenMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPGrenWEpi - oPGrenWM) ELSE 0.0 ENDIF;
wNExchGrenMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNGrenWEpi - oNGrenWM) ELSE 0.0 ENDIF;
wDExchBlueMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDBlueWEpi - oDBlueWM) ELSE 0.0 ENDIF;
wPExchBlueMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPBlueWEpi - oPBlueWM) ELSE 0.0 ENDIF;
wNExchBlueMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNBlueWEpi - oNBlueWM) ELSE 0.0 ENDIF;
wDExchZooMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oDZooEpi - oDZooM) ELSE 0.0 ENDIF;
wPExchZooMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oPZooEpi - oPZooM) ELSE 0.0 ENDIF;
wNExchZooMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchMEpi *(oNZooEpi - oNZooM) ELSE 0.0 ENDIF;
wDExchIMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDIMWEpi - oDIMWM) ELSE 0.0 ENDIF;
wPExchPO4Epi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPO4WEpi - oPO4WM) ELSE 0.0 ENDIF;
wPExchAIMEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPAIMWEpi - oPAIMWM) ELSE 0.0 ENDIF;
wNExchNH4Epi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNH4WEpi - oNH4WM) ELSE 0.0 ENDIF;
wNExchNO3Epi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNO3WEpi - oNO3WM) ELSE 0.0 ENDIF;
wSiExchSiO2Epi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oSiO2WEpi - oSiO2WM) ELSE 0.0 ENDIF;
wO2ExchEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oO2WEpi - oO2WM) ELSE 0.0 ENDIF;
wDExchDetEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDDetWEpi - oDDetWM) ELSE 0.0 ENDIF;
wPExchDetEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPDetWEpi - oPDetWM) ELSE 0.0 ENDIF;
wNExchDetEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNDetWEpi - oNDetWM) ELSE 0.0 ENDIF;
wSiExchDetEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oSiDetWEpi - oSiDetWM) ELSE 0.0 ENDIF;
wDExchDiatEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDDiatWEpi - oDDiatWM) ELSE 0.0 ENDIF;
wPExchDiatEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPDiatWEpi - oPDiatWM) ELSE 0.0 ENDIF;
wNExchDiatEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNDiatWEpi - oNDiatWM) ELSE 0.0 ENDIF;
wSiExchDiatEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN cSiDDiat * wDExchDiatEpi ELSE 0.0 ENDIF;
wDExchGrenEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDGrenWEpi - oDGrenWM) ELSE 0.0 ENDIF;
wPExchGrenEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPGrenWEpi - oPGrenWM) ELSE 0.0 ENDIF;
wNExchGrenEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNGrenWEpi - oNGrenWM) ELSE 0.0 ENDIF;
wDExchBlueEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDBlueWEpi - oDBlueWM) ELSE 0.0 ENDIF;
wPExchBlueEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPBlueWEpi - oPBlueWM) ELSE 0.0 ENDIF;
wNExchBlueEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNBlueWEpi - oNBlueWM) ELSE 0.0 ENDIF;
wDExchZooEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oDZooEpi - oDZooM) ELSE 0.0 ENDIF;
wPExchZooEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oPZooEpi - oPZooM) ELSE 0.0 ENDIF;
wNExchZooEpi = IF (InclMarsh EQ TRUE AND fMarsh GT NearZero) THEN akExchLEpi *(oNZooEpi - oNZooM) ELSE 0.0 ENDIF;
tInfSiO2WEpi =IF (InclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oSiO2WEpi ELSE 0.0 ENDIF;
tInfO2WEpi =IF (InclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oO2WEpi ELSE 0.0 ENDIF;
tPInfPO4WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oPO4WEpi ELSE 0.0 ENDIF;
tNInfNH4WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNH4WEpi ELSE 0.0 ENDIF;
tNInfNO3WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQOutInf GE 0.0) THEN uQOutInf / mmPerm * oNO3WEpi ELSE 0.0 ENDIF;
tSeepSiO2WEpi =IF (InclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * 0.0 ELSE 0.0 ENDIF;
tSeepO2WEpi =IF (InclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * 0.0 ELSE 0.0 ENDIF;
tPSeepPO4WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oPO4S ELSE 0.0 ENDIF;
tNSeepNH4WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oNH4S ELSE 0.0 ENDIF;
tNSeepNO3WEpi = IF (aInclStrat EQ TRUE ) THEN 0.0 ELSEIF (uQInSeep GE 0.0) THEN uQInSeep / mmPerm * oNO3S ELSE 0.0 ENDIF;
tSiAbioTotT = - fRefrDetS * tSiMinDetS - tInfSiO2WHyp - tInfSiO2WEpi + tSeepSiO2WHyp + tSeepSiO2WEpi;
tO2AerEpi = kAer * uFunTmAerEpi * (uO2SatEpi - oO2WEpi) * aFunFloatAer * aFunBlueSurfAer;
tDTurbFishIM = fLutum * aDIMS / (fLutum * aDIMS + aDDetS) * tDTurbFish;
uCorVSetIMEpi = (aFunTauSetIMEpi+ uQOutInf /mmPerm - uQInSeep / mmPerm) * POW((fLutumRef/fLutum) , (0.5)) * uFunTmSetEpi * cVSetIM;
tDSetIMEpi = uCorVSetIMEpi * oDIMWEpi;
tPSetAIMEpi = oPAIMWEpi / oDIMWEpi * tDSetIMEpi;
uCorVSetDetEpi = (cVSetDet + uQOutInf /mmPerm - uQInSeep / mmPerm) * aFunTauSetOMEpi * uFunTmSetEpi;
tDSetDetEpi = uCorVSetDetEpi * oDDetWEpi;
tPSetDetEpi = uCorVSetDetEpi * oPDetWEpi;
tNSetDetEpi = uCorVSetDetEpi * oNDetWEpi;
tSiSetDetEpi = uCorVSetDetEpi * oSiDetWEpi;
wDMinDetWEpi = kDMinDetW * uFunTmMinWEpi * oDDetWEpi;
wPMinDetWEpi = kPMinDetW * uFunTmMinWEpi * oPDetWEpi;
wNMinDetWEpi = kNMinDetW * uFunTmMinWEpi * oNDetWEpi;
wSiMinDetWEpi = kSiMinDetW * uFunTmMinWEpi * oSiDetWEpi;
aCorO2BODEpi = oO2WEpi / (hO2BOD + oO2WEpi);
wO2MinDetWEpi = molO2molC * cCPerDW * aCorO2BODEpi * wDMinDetWEpi;
wDDenitWEpi = oNO3WEpi*oNO3WEpi / (hNO3Denit*hNO3Denit + oNO3WEpi*oNO3WEpi) * (1.0 - aCorO2BODEpi) * wDMinDetWEpi;
wNDenitWEpi = NO3PerC * molNmolC * cCPerDW * wDDenitWEpi;
aCorO2NitrWEpi = oO2WEpi*oO2WEpi / (hO2Nitr*hO2Nitr + oO2WEpi*oO2WEpi);
wNNitrWEpi = kNitrW * uFunTmNitrEpi * aCorO2NitrWEpi * oNH4WEpi;
wO2NitrWEpi = O2PerNH4 * molO2molN * wNNitrWEpi;
tDMinOxyDetS = afOxySed * (1.0 - fRefrDetS) * tDMinDetS;
tO2MinDetS = molO2molC * cCPerDW * tDMinOxyDetS;
tDDenitS = oNO3S*oNO3S / (hNO3Denit*hNO3Denit + oNO3S*oNO3S) * (1.0 - afOxySed) * (1.0 - fRefrDetS) * tDMinDetS;
tNDenitS = NO3PerC * molNmolC * cCPerDW * tDDenitS;
tNNitrS = afOxySed * kNitrS * uFunTmNitrS * aNH4S;
tO2NitrS = O2PerNH4 * molO2molN * tNNitrS;
tDMinHumS = kDMinHum * uFunTmMinS * afOxySed * aDHumS;
tPMinHumS = kDMinHum * uFunTmMinS * afOxySed * aPHumS;
tNMinHumS = kDMinHum * uFunTmMinS * afOxySed * aNHumS;
tPDifPO4Epi = IF ( aInclStrat EQ TRUE ) THEN 0.0 ELSE kPDifPO4 * uFunTmDif * cTurbDifNut * bPorCorS * (oPO4S - oPO4WEpi ) / aDepthDif ENDIF;
tNDifNO3Epi = IF ( aInclStrat EQ TRUE ) THEN 0.0 ELSE kNDifNO3 * uFunTmDif * cTurbDifNut * bPorCorS * (oNO3S - oNO3WEpi ) / aDepthDif ENDIF;
tNDifNH4Epi = IF ( aInclStrat EQ TRUE ) THEN 0.0 ELSE kNDifNH4 * uFunTmDif * cTurbDifNut * bPorCorS * (oNH4S - oNH4WEpi ) / aDepthDif ENDIF;
tO2DifEpi = IF ( aInclStrat EQ TRUE ) THEN 0.0 ELSE kO2Dif / aDepthDif * uFunTmDif * cTurbDifO2 * bPorCorS * oO2WEpi ENDIF;
aPAdsMaxWEpi = cRelPAdsD + aCorO2BODEpi * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM;
aKPAdsWEpi = (1.0 - fRedMax * (1.0-aCorO2BODEpi)) * cKPAdsOx;
aPIsoAdsWEpi = aPAdsMaxWEpi * aKPAdsWEpi * oPO4WEpi / (1.0 + aKPAdsWEpi * oPO4WEpi);
aPEqIMWEpi = aPIsoAdsWEpi * oDIMWEpi;
wPSorpIMWEpi = kPSorp * (aPEqIMWEpi - oPAIMWEpi);
aPAdsMaxS = cRelPAdsD + afOxySed * cRelPAdsFe * fFeDIM + cRelPAdsAl * fAlDIM;
aKPAdsS = (1.0 - fRedMax * (1.0-afOxySed)) * cKPAdsOx;
aPIsoAdsS = aPAdsMaxS * aKPAdsS * oPO4S / (1.0 + aKPAdsS * oPO4S);
aPEqIMS = aPIsoAdsS * aDIMS;
tPSorpIMS = kPSorp * (aPEqIMS - aPAIMS);
wO2AbioWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE tO2BubHyp / uDepthWHyp - wO2MinDetWHyp - wO2NitrWHyp - (tO2MinDetS + tO2NitrS) / uDepthWHyp - (tInfO2WHyp / uDepthWHyp) + (tSeepO2WHyp / uDepthWHyp) ENDIF;
wPAbioDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE - wPMinDetWHyp - (tPSetDetHyp - tPSetDetEpi - tPResusDet) / uDepthWHyp ENDIF;
wPAbioPO4WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wPMinDetWHyp - wPSorpIMWHyp - (tPInfPO4WHyp / uDepthWHyp) + ((tPSeepPO4WHyp + tPDifPO4Hyp + tPResusPO4) / uDepthWHyp) ENDIF;
wPAbioAIMWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (- tPSetAIMHyp +tPSetAIMEpi + tPResusAIM) / uDepthWHyp + wPSorpIMWHyp ENDIF;
tPAbioTotT = uPErosOM - tPChemPO4 - tPInfPO4S + tPSeepPO4S - tPDifGroundPO4;
wNAbioNH4WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNMinDetWHyp - wNNitrWHyp - (tNInfNH4WHyp / uDepthWHyp) + ((tNSeepNH4WHyp + tNDifNH4Hyp + tNResusNH4) / uDepthWHyp) ENDIF;
wNAbioNO3WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNNitrWHyp - wNDenitWHyp + ((tNDifNO3Hyp + tNResusNO3 - tNInfNO3WHyp + tNSeepNO3WHyp) / uDepthWHyp) ENDIF;
wNAbioDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE - wNMinDetWHyp - (tNSetDetHyp -tNSetDetEpi - tNResusDet ) / uDepthWHyp ENDIF;
wSiAbioSiO2WHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wSiMinDetWHyp + (1.0 - fRefrDetS) * tSiMinDetS / uDepthWHyp - tInfSiO2WHyp / uDepthWHyp + tSeepSiO2WHyp / uDepthWHyp ENDIF;
wSiAbioDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE - wSiMinDetWHyp - (tSiSetDetHyp -tSiSetDetEpi - tSiResusDet) / uDepthWHyp ENDIF;
wDAbioDetWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (- tDSetDetHyp + tDSetDetEpi + tDResusDet ) / uDepthWHyp - wDMinDetWHyp ENDIF;
wDAbioIMWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (uDErosIMW * fHypErosIM - tDSetIMHyp+ tDSetIMEpi + tDResusIM) / uDepthWHyp ENDIF;
wDAbioIMWEpi = IF ( aInclStrat EQ TRUE ) THEN (uDErosIMW * (1- fHypErosIM) - tDSetIMEpi ) / uDepthWEpi ELSE (uDErosIMW * (1- fHypErosIM) - tDSetIMEpi + tDResusIM) / uDepthWEpi ENDIF;
wDAbioDetWEpi = IF (aInclStrat EQ TRUE ) THEN (- tDSetDetEpi ) / uDepthWEpi - wDMinDetWEpi ELSE (- tDSetDetEpi + tDResusDet ) / uDepthWEpi - wDMinDetWEpi ENDIF;
tDAbioIMS = IF ( aInclStrat EQ TRUE ) THEN uDErosIMS + tDSetIMHyp - tDResusIM ELSE uDErosIMS + tDSetIMEpi - tDResusIM ENDIF ;
tDAbioDetS = IF ( aInclStrat EQ TRUE ) THEN tDSetDetHyp - tDResusDet - tDMinDetS ELSE tDSetDetEpi - tDResusDet - tDMinDetS ENDIF ;
tDAbioHumS = uDErosOM + fRefrDetS * tDMinDetS - tDMinHumS;
tDAbioTotT = cDErosTot - wDMinDetWEpi * uDepthWEpi - wDMinDetWHyp * uDepthWHyp - (1.0 - fRefrDetS) * tDMinDetS - tDMinHumS;
wO2AbioWEpi = IF (aInclStrat EQ FALSE) THEN tO2AerEpi / uDepthWEpi - wO2MinDetWEpi - wO2NitrWEpi - (tO2MinDetS + tO2NitrS) / uDepthWEpi - tInfO2WEpi/uDepthWEpi + tSeepO2WEpi/uDepthWEpi ELSE tO2AerEpi / uDepthWEpi - wO2MinDetWEpi - wO2NitrWEpi ENDIF;
wO2AbioM = tO2AerM / uDepthWM - wO2MinDetWM - wO2NitrWM - (tO2MinDetSM + tO2NitrSM) / uDepthWM  - tInfO2WM /uDepthWM  + tSeepO2WM /uDepthWM ;
wPAbioDetWEpi = IF (aInclStrat EQ TRUE ) THEN - wPMinDetWEpi - (tPSetDetEpi ) / uDepthWEpi ELSE - wPMinDetWEpi - (tPSetDetEpi - tPResusDet) / uDepthWEpi ENDIF;
wPAbioPO4WEpi =IF (aInclStrat EQ TRUE ) THEN wPMinDetWEpi - wPSorpIMWEpi + (tPDifPO4Epi / uDepthWEpi) ELSE wPMinDetWEpi - wPSorpIMWEpi + ((tPSeepPO4WEpi - tPInfPO4WEpi + tPDifPO4Epi + tPResusPO4) / uDepthWEpi) ENDIF;
wPAbioAIMWEpi = IF (aInclStrat EQ TRUE ) THEN (- tPSetAIMEpi ) / uDepthWEpi + wPSorpIMWEpi ELSE (- tPSetAIMEpi + tPResusAIM ) / uDepthWEpi + wPSorpIMWEpi ENDIF;
tPAbioDetS = IF ( aInclStrat EQ TRUE ) THEN - tPMinDetS + tPSetDetHyp - tPResusDet ELSE - tPMinDetS + tPSetDetEpi - tPResusDet ENDIF ;
tPAbioHumS = uPErosOM + fRefrDetS * tPMinDetS - tPMinHumS;
tPAbioPO4S = IF ( aInclStrat EQ TRUE ) THEN tPInfPO4WHyp - tPSeepPO4WHyp - tPInfPO4S + tPSeepPO4S + (1.0-fRefrDetS) * tPMinDetS + tPMinHumS - tPSorpIMS - tPResusPO4 - tPDifPO4Hyp - tPDifGroundPO4 - tPChemPO4 ELSE tPInfPO4WEpi - tPSeepPO4WEpi - tPInfPO4S + tPSeepPO4S + (1.0-fRefrDetS) * tPMinDetS + tPMinHumS - tPSorpIMS - tPResusPO4 - tPDifPO4Epi - tPDifGroundPO4 - tPChemPO4 ENDIF;
tPAbioAIMS = IF ( aInclStrat EQ TRUE ) THEN tPSetAIMHyp - tPResusAIM + tPSorpIMS ELSE tPSetAIMEpi - tPResusAIM + tPSorpIMS ENDIF;
wNAbioNH4WEpi = IF (aInclStrat EQ TRUE ) THEN wNMinDetWEpi - wNNitrWEpi + (tNDifNH4Epi / uDepthWEpi) ELSE wNMinDetWEpi - wNNitrWEpi + ((tNSeepNH4WEpi - tNInfNH4WEpi + tNDifNH4Epi + tNResusNH4) / uDepthWEpi) ENDIF;
wNAbioNO3WEpi = IF (aInclStrat EQ TRUE ) THEN wNNitrWEpi - wNDenitWEpi + (tNDifNO3Epi / uDepthWEpi) ELSE wNNitrWEpi - wNDenitWEpi + ((tNDifNO3Epi + tNResusNO3 - tNInfNO3WEpi + tNSeepNO3WEpi) / uDepthWEpi) ENDIF;
wNAbioDetWEpi = IF (aInclStrat EQ TRUE ) THEN - wNMinDetWEpi - (tNSetDetEpi) / uDepthWEpi ELSE - wNMinDetWEpi - (tNSetDetEpi - tNResusDet ) / uDepthWEpi ENDIF;
tNAbioNH4S = IF ( aInclStrat EQ TRUE ) THEN tNInfNH4WHyp - tNSeepNH4WHyp - tNInfNH4S + tNSeepNH4S + (1.0-fRefrDetS) * tNMinDetS + tNMinHumS - tNResusNH4 - tNDifNH4Hyp - tNDifGroundNH4 - tNNitrS ELSE tNInfNH4WEpi - tNSeepNH4WEpi - tNInfNH4S + tNSeepNH4S + (1.0-fRefrDetS) * tNMinDetS + tNMinHumS - tNResusNH4 - tNDifNH4Epi - tNDifGroundNH4 - tNNitrS ENDIF;
tNAbioNO3S = IF ( aInclStrat EQ TRUE ) THEN tNInfNO3WHyp - tNSeepNO3WHyp - tNInfNO3S + tNSeepNO3S + tNNitrS - tNDenitS - tNResusNO3 - tNDifNO3Hyp - tNDifGroundNO3 ELSE tNInfNO3WEpi - tNSeepNO3WEpi - tNInfNO3S + tNSeepNO3S + tNNitrS - tNDenitS - tNResusNO3 - tNDifNO3Epi - tNDifGroundNO3 ENDIF;
tNAbioDetS = IF ( aInclStrat EQ TRUE ) THEN - tNMinDetS + tNSetDetHyp - tNResusDet ELSE - tNMinDetS + tNSetDetEpi - tNResusDet ENDIF ;
tNAbioHumS = uNErosOM + fRefrDetS * tNMinDetS - tNMinHumS;
tNAbioTotT = uNErosOM - tNDenitS - wNDenitWEpi * uDepthWEpi - wNDenitWHyp * uDepthWHyp - tNInfNH4S - tNInfNO3S + tNSeepNH4S + tNSeepNO3S - tNDifGroundNO3 - tNDifGroundNH4;
wSiAbioSiO2WEpi = IF (aInclStrat EQ FALSE ) THEN wSiMinDetWEpi + (1.0 - fRefrDetS) * tSiMinDetS / uDepthWEpi - tInfSiO2WEpi / uDepthWEpi + tSeepSiO2WEpi / uDepthWEpi ELSE wSiMinDetWEpi ENDIF;
wSiAbioDetWEpi = IF (aInclStrat EQ TRUE ) THEN - wSiMinDetWEpi - (tSiSetDetEpi ) / uDepthWEpi ELSE - wSiMinDetWEpi - (tSiSetDetEpi - tSiResusDet) / uDepthWEpi ENDIF;
tSiAbioDetS = IF ( aInclStrat EQ TRUE ) THEN - tSiMinDetS + tSiSetDetHyp - tSiResusDet ELSE - tSiMinDetS + tSiSetDetEpi - tSiResusDet ENDIF;
tDProdSubVegEpi = bfSubVegEpi * tDProdVegEpi;
tDMortVegWEpi = fDetWMortVeg * (1.0 - bfRootVeg) * tDMortVegEpi;
tDMortVegSEpi = tDMortVegEpi - tDMortVegWEpi;
tDBedVeg = IF InclVeg EQ TRUE THEN tDMigrVeg + tDProdVegEpi + tDProdVegHyp- tDRespVeg - tDMortVegEpi - tDMortVegHyp - tDGrazVegBird - tDManVeg ELSE 0.0 ENDIF;
tO2ProdVegEpi = molO2molC * cCPerDW * tDProdVegEpi;
tO2RespVegWEpi = molO2molC * cCPerDW * bfSubVegEpi * tDRespVeg * aCorO2BODEpi;
tO2ProdVegSEpi = MIN (tO2RespVegS, tO2ProdVegEpi);
tO2ProdVegWEpi = MIN ( tO2ProdVegEpi - tO2ProdVegSEpi, bfSubVeg * tO2ProdVegEpi) ;
tO2BedS = tO2ProdVegSHyp + tO2ProdVegSEpi - tO2RespVegS + tO2UptNO3VegS;
tO2UptNO3VegWEpi = O2PerNO3 * molO2molN * bfSubVeg * tNUptNO3VegWEpi;
tPMortVegEpi = rPDVeg * tDMortVegEpi;
tPMortVegPO4Epi = fDissMortVeg * tPMortVegEpi;
tPMortVegPO4SEpi = bfRootVeg * tPMortVegPO4Epi;
tPMortVegPO4WEpi = tPMortVegPO4Epi - tPMortVegPO4SEpi;
tPMortVegDetEpi = tPMortVegEpi - tPMortVegPO4Epi;
tPMortVegDetWEpi = fDetWMortVeg * (1.0 - bfRootVeg) * tPMortVegDetEpi;
tPMortVegDetSEpi = tPMortVegDetEpi - tPMortVegDetWEpi;
tPBedVeg = IF InclVeg EQ TRUE THEN tPMigrVeg + tPUptVegEpi + tPUptVegHyp - tPExcrVeg - tPMortVegEpi - tPMortVegHyp - tPGrazVegBird - tPManVeg ELSE 0.0 ENDIF;
tNMortVegNH4WEpi = tNMortVegNH4Epi - tNMortVegNH4SEpi;
tNMortVegDetEpi = tNMortVegEpi - tNMortVegNH4Epi;
tNMortVegDetWEpi = fDetWMortVeg * (1.0 - bfRootVeg) * tNMortVegDetEpi;
tNMortVegDetSEpi = tNMortVegDetEpi - tNMortVegDetWEpi;
tNBedVeg = IF InclVeg EQ TRUE THEN tNMigrVeg + tNUptVeg - tNExcrVeg - tNMortVegEpi - tNMortVegHyp - tNGrazVegBird - tNManVeg ELSE 0.0 ENDIF;
wDBedDetWEpi = IF (InclVeg EQ TRUE) THEN (tDMortVegWEpi + tDEgesBird) / uDepthWEpi ELSE 0.0 ENDIF;
tDBedDetSEpi = IF ( InclVeg EQ TRUE) THEN tDMortVegSEpi ELSE 0.0 ENDIF;
wPBedPO4WEpi = IF (InclVeg EQ FALSE) THEN 0.0 ELSE (- tPUptVegWEpi + tPExcrVegW * uVegHeightEpi / uVegHeight + tPMortVegPO4WEpi + tPEgesBirdPO4) /uDepthWEpi ENDIF;
wPBedDetWEpi = IF (InclVeg EQ TRUE) THEN (tPMortVegDetWEpi + tPEgesBirdDet) / uDepthWEpi ELSE 0.0 ENDIF;
tPBedPO4S = IF ( InclVeg EQ TRUE) THEN - tPUptVegS + tPExcrVegS + tPMortVegPO4SEpi + tPMortVegPO4SHyp ELSE 0.0 ENDIF;
tPBedDetS = IF (InclVeg EQ TRUE) THEN tPMortVegDetSEpi + tPMortVegDetSHyp ELSE 0.0 ENDIF;
wNBedNH4WEpi = IF ( InclVeg EQ TRUE ) THEN (- tNUptNH4VegWEpi + tNExcrVegW * (uVegHeightEpi /uVegHeight ) + tNMortVegNH4WEpi + tNEgesBirdNH4) / uDepthWEpi ELSE 0.0 ENDIF;
wNBedNO3WEpi = IF ( InclVeg EQ TRUE) THEN - tNUptNO3VegWEpi / uDepthWEpi ELSE 0.0 ENDIF;
wNBedDetWEpi = IF (InclVeg EQ TRUE) THEN (tNMortVegDetWEpi + tNEgesBirdDet) / uDepthWEpi ELSE 0.0 ENDIF;
tNBedNH4S = IF ( InclVeg EQ TRUE) THEN - tNUptNH4VegS + tNExcrVegS + tNMortVegNH4SEpi + tNMortVegNH4SHyp ELSE 0.0 ENDIF;
tNBedNO3S = IF ( InclVeg EQ TRUE ) THEN - tNUptNO3VegS ELSE 0.0 ENDIF;
tNBedDetS = IF ( InclVeg EQ FALSE) THEN 0.0 ELSEIF (aInclStrat EQ TRUE) THEN tNMortVegDetSEpi + tNMortVegDetSHyp ELSE tNMortVegDetSEpi ENDIF;
tO2BedWEpi = IF ( InclVeg EQ TRUE ) THEN tO2ProdVegWEpi - tO2RespVegWEpi + tO2UptNO3VegWEpi ELSE 0.0 ENDIF;
rPDBlueWEpi = oPBlueWEpi /(oDBlueWEpi+NearZero);
aVPUptMaxCrBlueEpi = MAX(0.0,cVPUptMaxBlue * uFunTmProdBlueEpi *(cPDBlueMax - rPDBlueWEpi) /(cPDBlueMax - cPDBlueMin));
aVPUptBlueEpi = oPO4WEpi * aVPUptMaxCrBlueEpi /(aVPUptMaxCrBlueEpi / cAffPUptBlue + oPO4WEpi);
wPUptBlueEpi = aVPUptBlueEpi * oDBlueWEpi;
rNDBlueWEpi = oNBlueWEpi /(oDBlueWEpi+NearZero);
aVNUptMaxCrBlueEpi = MAX(0.0,cVNUptMaxBlue * uFunTmProdBlueEpi * (cNDBlueMax - rNDBlueWEpi) /(cNDBlueMax - cNDBlueMin));
ahNUptBlueEpi = aVNUptMaxCrBlueEpi / cAffNUptBlue;
aVNUptBlueEpi = oNDissWEpi * aVNUptMaxCrBlueEpi /(ahNUptBlueEpi + oNDissWEpi);
wNUptBlueEpi = aVNUptBlueEpi * oDBlueWEpi;
tNUptBlueEpi = wNUptBlueEpi * uDepthWEpi;
aLLimBlueEpi = UseSteeleBlue *(EXP(1.0) /(aExtCoefEpi * uDepthWEpi) *(EXP(- aLPARBotEpi /(cLOptRefBlue * uFunTmProdBlueEpi)) - EXP(- aLPARBotSurf /(cLOptRefBlue * uFunTmProdBlueEpi)))) +(1.0 - UseSteeleBlue) *(1.0 /(aExtCoefEpi * uDepthWEpi) * LN((1.0 + aLPARBotSurf / (hLRefBlue * uFunTmProdBlueEpi)) / (1.0 + aLPARBotEpi /(hLRefBlue * uFunTmProdBlueEpi))));
rChDBlueEpi = cChDBlueMax -(cChDBlueMax - cChDBlueMin) * aLLimBlueEpi;
aChlaBlueEpi = mgPerg * rChDBlueEpi * aDBlueWEpi;
aNfixBlueEpi = rNfixBlueEpi *aChlaBlueEpi /ugPerg;
afNH4UptBlueEpi = oNH4WEpi * oNO3WEpi /((ahNUptBlueEpi + oNH4WEpi) *(ahNUptBlueEpi + oNO3WEpi)) + oNH4WEpi * ahNUptBlueEpi /((oNH4WEpi + oNO3WEpi) *(ahNUptBlueEpi + oNO3WEpi));
tNUptBlueAirEpi = IF (InclNfix EQ FALSE) THEN 0.0 ELSE aNfixBlueEpi ENDIF;
tNUptBlueWEpi = IF (InclNfix EQ FALSE) THEN tNUptBlueEpi ELSE tNUptBlueEpi - tNUptBlueAirEpi ENDIF;
wNUptBlueWEpi = tNUptBlueWEpi / uDepthWEpi;
wNUptNH4BlueEpi = afNH4UptBlueEpi * wNUptBlueWEpi;
wNUptNO3BlueEpi = wNUptBlueWEpi - wNUptNH4BlueEpi;
aPLimBlueEpi = MAX(0.0,(1.0 - cPDBlueMin / rPDBlueWEpi) * cPDBlueMax /(cPDBlueMax - cPDBlueMin));
aNLimBlueEpi = MAX(0.0,(1.0 - cNDBlueMin / rNDBlueWEpi) * cNDBlueMax /(cNDBlueMax - cNDBlueMin));
aSiLimBlueEpi = oSiO2WEpi /(hSiAssBlue + oSiO2WEpi);
aMuTmLBlueEpi = ufDay *(1.0 - afCovSurfVeg) * aLLimBlueEpi * uMuMaxTmBlueEpi;
aNutLimBlueEpi = MIN(aPLimBlueEpi , (MIN(aNLimBlueEpi,aSiLimBlueEpi)));
aMuBlueEpi = aNutLimBlueEpi * aMuTmLBlueEpi;
wDAssBlueEpi = aMuBlueEpi*oDBlueWEpi;
oChlaBlueEpi = mgPerg * rChDBlueEpi * oDBlueWEpi;
aLLimBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN -9999 ELSE MAX(0.0,UseSteeleBlue *(EXP(1.0) /(aExtSurf) *(EXP(- aLPARBotSurf/(cLOptRefBlue *  uFunTmProdBlueSurf)) - EXP(- uLPARSurf /(cLOptRefBlue *  uFunTmProdBlueSurf)))) +(1.0 - UseSteeleBlue) *(1.0 /(aExtSurf) * LN((1.0 + uLPARSurf / (hLRefBlue * uFunTmProdBlueSurf)) / (1.0 + aLPARBotSurf /(hLRefBlue * uFunTmProdBlueSurf))))) ENDIF;
aRepLLimBlue = (aLLimBlueSurf* aDBlueSurf + aLLimBlueEpi* aDBlueWEpi) / (aDBlueSurf + aDBlueWEpi);
rChDBlueSurf = cChDBlueMax -(cChDBlueMax - cChDBlueMin) * aLLimBlueSurf;
aChlaBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE mgPerg * rChDBlueSurf * aDBlueSurf ENDIF;
oChlaBlueW = IF ( aInclStrat EQ TRUE ) THEN (oChlaBlueEpi * uDepthWEpi + oChlaBlueHyp * uDepthWHyp) / uDepthW ELSE (oChlaBlueEpi * uDepthWEpi) / uDepthW ENDIF;
oChlaBlue = IF ( aInclStrat EQ TRUE ) THEN (oChlaBlueEpi * uDepthWEpi + oChlaBlueHyp * uDepthWHyp + aChlaBlueSurf) / uDepthW ELSE (oChlaBlueEpi * uDepthWEpi + aChlaBlueSurf ) / uDepthW ENDIF;
aChlaLimFloBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE (1.0 - (POW ((aChlaBlueSurf / cDepthSurf) , (-cStepPow))) / ((POW (cChlaThrBlue , (-cStepPow))) + (POW ((aChlaBlueSurf / cDepthSurf) , (-cStepPow))))) ENDIF;
aChlaLimFloBlueEpi = IF (InclSurf EQ FALSE  OR aDBlueWEpi LT cDBlueSurfMin) THEN 0.0 ELSE (1.0 - (POW (oChlaBlueEpi , (-cStepPow))) / ((POW (cChlaThrBlue , (-cStepPow))) + (POW (oChlaBlueEpi , (-cStepPow))))) ENDIF;
aChlaLimFloBlueHyp = IF (aInclStrat EQ FALSE OR aDBlueWHyp LT cDBlueSurfMin) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN 0.0 ELSE  (1.0 - (POW (oChlaBlueHyp , (-cStepPow))) / ((POW (cChlaThrBlue , (-cStepPow))) + (POW (oChlaBlueHyp , (-cStepPow))))) ENDIF;
aVWLimFloBlue = IF (InclSurf EQ FALSE) THEN 0.0 ELSE  (1.0 - (POW (uVWind , cStepPow)) / ((POW (cVWindThrBlue , cStepPow)) + (POW (uVWind , cStepPow)))) ENDIF;
aTmLimFloBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE (1.0 - (POW (uTmSurf , (-cStepPow))) / ((POW (cTmThrBlue , (-cStepPow))) + (POW (uTmSurf , (-cStepPow))))) ENDIF;
aTmLimFloBlueEpi = IF (InclSurf EQ FALSE) THEN 0.0 ELSE (1.0 - (POW (uTmEpi , (-cStepPow))) / ((POW (cTmThrBlue , (-cStepPow))) + (POW (uTmEpi , (-cStepPow))))) ENDIF;
aTmLimFloBlueHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN 0.0 ELSE  (1.0 - (POW (uTmHyp , (-cStepPow))) / ((POW (cTmThrBlue , (-cStepPow))) + (POW (uTmHyp , (-cStepPow))))) ENDIF;
aTrigFloBlueSurf =  aVWLimFloBlue * aTmLimFloBlueSurf * aChlaLimFloBlueSurf;
aTrigFloBlueEpi =  aVWLimFloBlue * aTmLimFloBlueEpi * aChlaLimFloBlueEpi;
aTrigFloBlueHyp =   aTmLimFloBlueHyp * aChlaLimFloBlueHyp;
uVFloBlueSurf =  IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE aTrigFloBlueSurf * cVFloMaxBlueW ENDIF;
uVFloBlueEpi = IF (InclSurf EQ FALSE) THEN 0.0 ELSE aTrigFloBlueEpi * cVFloMaxBlueW ENDIF;
uVFloBlueHyp =  IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN 0.0 ELSE aTrigFloBlueHyp * cVFloMaxBlueW ENDIF;
uVBlueHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN  - uCorVSetBlueHyp ELSE  uVFloBlueHyp - uCorVSetBlueHyp  ENDIF;
tDSetBlueHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (uVBlueHyp LT 0.0) THEN - uVBlueHyp * oDBlueWHyp ELSE 0.0 ENDIF;
tPSetBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDBlueWHyp * tDSetBlueHyp ENDIF;
tNSetBlueHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rNDBlueWHyp * tDSetBlueHyp ENDIF;
tDFloBlueHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSEIF (uVBlueHyp GE 0.0) THEN uVBlueHyp * oDBlueWHyp ELSE 0.0 ENDIF;
tPFloBlueHyp =  tDFloBlueHyp  * rPDBlueWHyp;
tNFloBlueHyp =  tDFloBlueHyp  * rNDBlueWHyp;
uVBlueEpi = IF (InclSurf EQ TRUE) THEN uVFloBlueEpi - uCorVSetBlueEpi ELSE - uCorVSetBlueEpi ENDIF;
tDSetBlueEpi = IF (uVBlueEpi LT 0.0) THEN - uVBlueEpi * oDBlueWEpi ELSE 0.0 ENDIF;
tDFloBlueEpi = IF (uVBlueEpi GE 0.0) THEN uVBlueEpi * oDBlueWEpi ELSE 0.0 ENDIF;
tNSetBlueEpi = rNDBlueWEpi * tDSetBlueEpi;
tNFloBlueEpi =  tDFloBlueEpi  * rNDBlueWEpi;
tPSetBlueEpi = rPDBlueWEpi * tDSetBlueEpi;
tPFloBlueEpi =  tDFloBlueEpi  * rPDBlueWEpi;
aFunTauSetOMSurf =MIN(1.0 / POW(aFunDimSusp +NearZero , (0.5)), 1.0);
uFunTmSetSurf = POW(cThetaSet , (uTmSurf-cTmRef));
uCorVSetBlueSurf = (cVSetBlue + uQOutInf /mmPerm - uQInSeep / mmPerm) * aFunTauSetOMSurf * uFunTmSetSurf;
uVBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN - uCorVSetBlueSurf ELSE uVFloBlueSurf - uCorVSetBlueSurf ENDIF;
tDSetBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSEIF (uVBlueSurf LT 0.0) THEN aDBlueSurf  / cDepthSurf * (- uVBlueSurf) ELSE 0.0 ENDIF;
rNDBlueSurf = aNBlueSurf / (aDBlueSurf + NearZero);
tNSetBlueSurf = rNDBlueSurf * tDSetBlueSurf;
rPDBlueSurf = aPBlueSurf / (aDBlueSurf + NearZero);
tPSetBlueSurf = rPDBlueSurf * tDSetBlueSurf;
rPDGrenWHyp = oPGrenWHyp /(oDGrenWHyp+NearZero);
aVPUptMaxCrGrenHyp = MAX(0.0,cVPUptMaxGren * uFunTmProdGrenHyp *(cPDGrenMax - rPDGrenWHyp) /(cPDGrenMax - cPDGrenMin));
aVPUptGrenHyp = oPO4WHyp * aVPUptMaxCrGrenHyp /(aVPUptMaxCrGrenHyp / cAffPUptGren + oPO4WHyp);
wPUptGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aVPUptGrenHyp * oDGrenWHyp ENDIF;
wPUptPhytHyp = wPUptDiatHyp + wPUptGrenHyp + wPUptBlueHyp;
wPExcrGrenWHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE (2.0 *rPDGrenWHyp) /(cPDGrenMax + rPDGrenWHyp) * rPDGrenWHyp * wDRespGrenWHyp ENDIF;
wPExcrPhytWHyp = wPExcrDiatWHyp + wPExcrGrenWHyp + wPExcrBlueWHyp;
aPLimGrenHyp = MAX(0.0,(1.0 - cPDGrenMin / rPDGrenWHyp) * cPDGrenMax /(cPDGrenMax - cPDGrenMin));
aNutLimGrenHyp = MIN(aPLimGrenHyp,(MIN(aNLimGrenHyp,aSiLimGrenHyp)));
aMuGrenHyp = aNutLimGrenHyp * aMuTmLGrenHyp;
wDAssGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE aMuGrenHyp*oDGrenWHyp ENDIF;
wDPrimGrenWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wDAssGrenHyp - wDRespGrenWHyp - wDLossGrenHyp - wDMortGrenWHyp -(tDSetGrenHyp -tDSetGrenEpi - tDResusGren) / uDepthWHyp ENDIF;
wDAssPhytHyp = wDAssDiatHyp + wDAssGrenHyp + wDAssBlueHyp;
wO2ProdPhytHyp = molO2molC * cCPerDW * wDAssPhytHyp;
wO2PrimWHyp = wO2ProdPhytHyp - wO2RespPhytWHyp + wO2UptNO3PhytHyp;
wPLossGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDGrenWHyp * wDLossGrenHyp ENDIF;
wPLossPhytHyp = wPLossDiatHyp + wPLossGrenHyp + wPLossBlueHyp;
wPLossPhytPO4Hyp = fDissLoss * wPLossPhytHyp;
wPLossPhytDetHyp = wPLossPhytHyp - wPLossPhytPO4Hyp;
wPPrimDetWHyp = wPLossPhytDetHyp + wPMortPhytDetWHyp;
wPPrimPO4WHyp = - wPUptPhytHyp + wPExcrPhytWHyp + wPLossPhytPO4Hyp + wPMortPhytPO4WHyp;
tPSetGrenHyp =IF (aInclStrat EQ FALSE) THEN 0.0 ELSE rPDGrenWHyp * tDSetGrenHyp ENDIF;
wPPrimGrenWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wPUptGrenHyp - wPExcrGrenWHyp - wPLossGrenHyp - wPMortGrenWHyp -(tPSetGrenHyp -tPSetGrenEpi - tPResusGren) / uDepthWHyp ENDIF;
wPConsGrenZooHyp = rPDGrenWHyp * wDConsGrenZooHyp;
wPConsPhytZooHyp = wPConsDiatZooHyp + wPConsGrenZooHyp + wPConsBlueZooHyp;
wPConsZooHyp = wPConsPhytZooHyp + wPConsDetZooHyp;
wPAssZooHyp = afPAssZooHyp * wPConsZooHyp;
wPEgesZooHyp = wPConsZooHyp - wPAssZooHyp;
wPEgesZooPO4Hyp = fDissEgesZoo*wPEgesZooHyp;
wPEgesZooDetHyp = wPEgesZooHyp - wPEgesZooPO4Hyp;
aPConsZooSpHyp = wPConsZooHyp / oPZooHyp;
aPGrazSpHyp = wPConsZooHyp / oPOMWHyp;
wDPrimBlueWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wDAssBlueHyp - wDRespBlueWHyp - wDLossBlueHyp - wDMortBlueWHyp + (tDResusBlue + tDSetBlueEpi - tDSetBlueHyp - tDFloBlueHyp) / uDepthWHyp ENDIF;
wPPrimBlueWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wPUptBlueHyp - wPExcrBlueWHyp - wPLossBlueHyp - wPMortBlueWHyp+ (tPResusBlue + tPSetBlueEpi - tPSetBlueHyp - tPFloBlueHyp) / uDepthWHyp ENDIF;
wNPrimBlueWHyp = IF (aInclStrat EQ FALSE) THEN 0.0 ELSE wNUptBlueHyp - wNExcrBlueWHyp - wNLossBlueHyp - wNMortBlueWHyp+ (tNResusBlue + tNSetBlueEpi - tNSetBlueHyp - tNFloBlueHyp) / uDepthWHyp ENDIF;
tDSetPhytHyp = tDSetDiatHyp + tDSetGrenHyp + tDSetBlueHyp;
wDPrimPhytWHyp = wDPrimDiatWHyp + wDPrimGrenWHyp + wDPrimBlueWHyp;
tPSetPhytHyp = tPSetDiatHyp + tPSetGrenHyp + tPSetBlueHyp;
wPPrimPhytWHyp = wPPrimDiatWHyp + wPPrimGrenWHyp + wPPrimBlueWHyp;
tNSetPhytHyp = tNSetDiatHyp + tNSetGrenHyp + tNSetBlueHyp;
wNPrimPhytWHyp = wNPrimDiatWHyp + wNPrimGrenWHyp + wNPrimBlueWHyp;
tDSetTotHyp = tDSetIMHyp + tDSetDetHyp + tDSetPhytHyp;
tPSetTotHyp = tPSetAIMHyp + tPSetDetHyp + tPSetPhytHyp;
tNSetTotHyp = tNSetDetHyp + tNSetPhytHyp;
aLLimGrenEpi = UseSteeleGren *(EXP(1.0) /(aExtCoefEpi * uDepthWEpi) *(EXP(- aLPARBotEpi /(cLOptRefGren * uFunTmProdGrenEpi)) - EXP(- aLPARBotSurf /(cLOptRefGren * uFunTmProdGrenEpi)))) +(1.0 - UseSteeleGren) *(1.0 /(aExtCoefEpi * uDepthWEpi) * LN((1.0 + aLPARBotSurf / (hLRefGren * uFunTmProdGrenEpi)) / (1.0 + aLPARBotEpi /(hLRefGren * uFunTmProdGrenEpi))));
rChDGrenEpi = cChDGrenMax -(cChDGrenMax - cChDGrenMin) * aLLimGrenEpi;
oChlaGrenEpi = mgPerg * rChDGrenEpi * oDGrenWEpi;
aLLimDiatEpi = UseSteeleDiat *(EXP(1.0) /(aExtCoefEpi * uDepthWEpi) *(EXP(- aLPARBotEpi /(cLOptRefDiat * uFunTmProdDiatEpi)) - EXP(- aLPARBotSurf /(cLOptRefDiat * uFunTmProdDiatEpi)))) +(1.0 - UseSteeleDiat) *(1.0 /(aExtCoefEpi * uDepthWEpi) * LN((1.0 + aLPARBotSurf / (hLRefDiat * uFunTmProdDiatEpi)) / (1.0 + aLPARBotEpi /(hLRefDiat * uFunTmProdDiatEpi))));
rChDDiatEpi = cChDDiatMax -(cChDDiatMax - cChDDiatMin) * aLLimDiatEpi;
oChlaDiatEpi = mgPerg * rChDDiatEpi * oDDiatWEpi;
oChlaEpi = oChlaDiatEpi + oChlaGrenEpi + oChlaBlueEpi;
wDRespBlueWEpi = ukDRespTmBlueEpi * oDBlueWEpi;
wDLossBlueEpi = ukLossTmBlueEpi * oDBlueWEpi;
wDMortBlueWEpi = kMortBlueW * oDBlueWEpi;
ukDDecBlueEpi = ukDRespTmBlueEpi + ukLossTmBlueEpi + kMortBlueW +(uCorVSetBlueEpi * uFunTmSetEpi) / uDepthWEpi;
wPExcrBlueWEpi = (rPDBlueWEpi * 2.0 )/(cPDBlueMax + rPDBlueWEpi) * rPDBlueWEpi * wDRespBlueWEpi ;
wPLossBlueEpi = rPDBlueWEpi * wDLossBlueEpi;
wPMortBlueWEpi = kMortBlueW * oPBlueWEpi;
wNExcrBlueWEpi = (rNDBlueWEpi *2.0)/(cNDBlueMax + rNDBlueWEpi) * rNDBlueWEpi * wDRespBlueWEpi ;
wNLossBlueEpi = rNDBlueWEpi * wDLossBlueEpi;
wNMortBlueWEpi = kMortBlueW * oNBlueWEpi;
wDPrimBlueWEpi = IF (aInclStrat EQ TRUE ) THEN wDAssBlueEpi - wDRespBlueWEpi - wDLossBlueEpi - wDMortBlueWEpi + (tDSetBlueSurf-tDFloBlueEpi + tDFloBlueHyp- tDSetBlueEpi ) / uDepthWEpi ELSE wDAssBlueEpi - wDRespBlueWEpi - wDLossBlueEpi - wDMortBlueWEpi + (tDResusBlue + tDSetBlueSurf - tDSetBlueEpi -  tDFloBlueEpi) / uDepthWEpi ENDIF;
wPPrimBlueWEpi = IF (aInclStrat EQ TRUE ) THEN wPUptBlueEpi - wPExcrBlueWEpi - wPLossBlueEpi - wPMortBlueWEpi+ (tPSetBlueSurf-tPFloBlueEpi + tPFloBlueHyp- tPSetBlueEpi ) / uDepthWEpi ELSE wPUptBlueEpi - wPExcrBlueWEpi - wPLossBlueEpi - wPMortBlueWEpi+ (tPResusBlue + tPSetBlueSurf - tPSetBlueEpi -  tPFloBlueEpi) / uDepthWEpi ENDIF;
wNPrimBlueWEpi = IF (aInclStrat EQ TRUE ) THEN wNUptBlueEpi - wNExcrBlueWEpi - wNLossBlueEpi - wNMortBlueWEpi + (tNSetBlueSurf-tNFloBlueEpi + tNFloBlueHyp- tNSetBlueEpi ) / uDepthWEpi ELSE wNUptBlueEpi - wNExcrBlueWEpi - wNLossBlueEpi - wNMortBlueWEpi+ (tNResusBlue + tNSetBlueSurf - tNSetBlueEpi -  tNFloBlueEpi) / uDepthWEpi ENDIF;
ukDilSurf = ukOutEpi;
tDDilBlueSurf =  IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukDilSurf * aDBlueSurf ENDIF;
tNDilBlueSurf =  IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukDilSurf * aNBlueSurf ENDIF;
tPDilBlueSurf =  IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukDilSurf * aPBlueSurf ENDIF;
tDTranBlueSurf = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE uDLoadBlueSurf - tDDilBlueSurf ENDIF;
tPTranBlueSurf = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE uPLoadBlueSurf - tPDilBlueSurf ENDIF;
tNTranBlueSurf = IF (FALSE EQ InclTran) THEN 0.0 ELSEIF (InclSurf EQ FALSE) THEN 0.0 ELSE uNLoadBlueSurf - tNDilBlueSurf ENDIF;
uMuMaxTmBlueSurf = cMuMaxBlue * uFunTmProdBlueSurf;
aMuTmLBlueSurf = ufDay * aLLimBlueSurf * uMuMaxTmBlueSurf;
aPLimBlueSurf = MAX(0.0,(1.0 - cPDBlueMin / rPDBlueSurf) * cPDBlueMax /(cPDBlueMax - cPDBlueMin));
aNLimBlueSurf = MAX(0.0,(1.0 - cNDBlueMin / rNDBlueSurf) * cNDBlueMax /(cNDBlueMax - cNDBlueMin));
aSiLimBlueSurf = oSiO2WEpi /(hSiAssBlue + oSiO2WEpi);
aNutLimBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN -9999 ELSE MIN(aPLimBlueSurf,MIN(aNLimBlueSurf,aSiLimBlueSurf)) ENDIF;
aRepPLimBlue = (aPLimBlueSurf* aDBlueSurf + aPLimBlueEpi* aDBlueWEpi) / (aDBlueSurf + aDBlueWEpi);
aRepNLimBlue = (aNLimBlueSurf* aDBlueSurf + aNLimBlueEpi* aDBlueWEpi) / (aDBlueSurf + aDBlueWEpi);
aRepNutLimBlue = (aNutLimBlueSurf* aDBlueSurf + aNutLimBlueEpi* aDBlueWEpi) / (aDBlueSurf + aDBlueWEpi);
aMuBlueSurf = aNutLimBlueSurf * aMuTmLBlueSurf;
tDAssBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE aMuBlueSurf * aDBlueSurf ENDIF;
aVNUptMaxCrBlueSurf = MAX(0.0,cVNUptMaxBlue * uFunTmProdBlueSurf * (cNDBlueMax - rNDBlueSurf) /(cNDBlueMax - cNDBlueMin));
aVPUptMaxCrBlueSurf = MAX(0.0,cVPUptMaxBlue * uFunTmProdBlueSurf *(cPDBlueMax - rPDBlueSurf) /(cPDBlueMax - cPDBlueMin));
ahNUptBlueSurf = aVNUptMaxCrBlueSurf / cAffNUptBlue;
aVNUptBlueSurf = oNDissWEpi * aVNUptMaxCrBlueSurf /(ahNUptBlueSurf + oNDissWEpi);
aVPUptBlueSurf = oPO4WEpi * aVPUptMaxCrBlueSurf /(aVPUptMaxCrBlueSurf / cAffPUptBlue + oPO4WEpi);
tNUptBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE aVNUptBlueSurf * aDBlueSurf ENDIF;
aNfixBlueSurf = rNfixBlueSurf *aChlaBlueSurf /ugPerg;
tNUptBlueAirSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSEIF (InclNfix EQ FALSE) THEN 0.0 ELSE aNfixBlueSurf ENDIF;
tNUptBlueWSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSEIF (InclNfix EQ FALSE) THEN tNUptBlueSurf ELSE tNUptBlueSurf - tNUptBlueAirSurf ENDIF;
afNH4UptBlueSurf = oNH4WEpi * oNO3WEpi /((ahNUptBlueSurf + oNH4WEpi) *(ahNUptBlueSurf + oNO3WEpi)) + oNH4WEpi * ahNUptBlueSurf /((oNH4WEpi + oNO3WEpi) *(ahNUptBlueSurf + oNO3WEpi));
tNUptNH4BlueSurf = afNH4UptBlueSurf * tNUptBlueWSurf;
tNUptNO3BlueSurf = tNUptBlueWSurf - tNUptNH4BlueSurf;
tPUptBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE aVPUptBlueSurf * aDBlueSurf ENDIF;
tDRespBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukDRespTmBlueSurf *aDBlueSurf ENDIF;
tNExcrBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE (rNDBlueSurf * 2.0 )/(cNDBlueMax + rNDBlueSurf) * rNDBlueSurf * tDRespBlueSurf ENDIF;
tPExcrBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE (rPDBlueSurf * 2.0 )/(cPDBlueMax + rPDBlueSurf) * rPDBlueSurf * tDRespBlueSurf ENDIF;
tDMortBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE kMortBlueW * aDBlueSurf ENDIF;
tNMortBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE kMortBlueW * aNBlueSurf ENDIF;
wNMortBlueNH4WSurf = fDissMortPhyt * tNMortBlueSurf / uDepthWEpi;
wNMortBlueDetSurf = ( 1 -fDissMortPhyt) * tNMortBlueSurf / uDepthWEpi;
tPMortBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE kMortBlueW * aPBlueSurf ENDIF;
uFunTmLossSurf = EXP(-0.5/(cSigTmLoss*cSigTmLoss) *((uTmSurf-cTmOptLoss)*(uTmSurf-cTmOptLoss) -(cTmRef-cTmOptLoss)*(cTmRef-cTmOptLoss)));
ukLossTmBlueSurf = UseLoss * kLossBlue * uFunTmLossSurf;
tDLossBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE ukLossTmBlueSurf * aDBlueSurf ENDIF;
tPLossBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE rPDBlueSurf * tDLossBlueSurf ENDIF;
tNLossBlueSurf = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE rNDBlueSurf * tDLossBlueSurf ENDIF;
tDPrimBlueSurf = IF (InclSurf EQ FALSE) THEN 0.0 ELSE tDAssBlueSurf - tDRespBlueSurf + tDFloBlueEpi - tDSetBlueSurf- tDMortBlueSurf ENDIF;
tNPrimBlueSurf = IF (InclSurf EQ FALSE) THEN 0.0 ELSE tNUptBlueSurf - tNExcrBlueSurf  + tNFloBlueEpi - tNSetBlueSurf - tNMortBlueSurf ENDIF;
tPPrimBlueSurf = IF (InclSurf EQ FALSE) THEN 0.0 ELSE tPUptBlueSurf - tPExcrBlueSurf + tPFloBlueEpi - tPSetBlueSurf- tPMortBlueSurf ENDIF;
tDPrimBlueS = IF ( aInclStrat EQ FALSE) THEN tDSetBlueEpi - tDResusBlue - tDMortBlueS - tDRespBlueS ELSE tDSetBlueHyp - tDResusBlue - tDMortBlueS - tDRespBlueS ENDIF;
tPPrimBlueS = IF ( aInclStrat EQ FALSE) THEN tPSetBlueEpi - tPResusBlue - tPMortBlueS - tPExcrBlueS ELSE tPSetBlueHyp - tPResusBlue - tPMortBlueS - tPExcrBlueS ENDIF;
tNPrimBlueS = IF (aInclStrat EQ FALSE) THEN tNSetBlueEpi - tNResusBlue - tNMortBlueS - tNExcrBlueS ELSE tNSetBlueHyp - tNResusBlue - tNMortBlueS - tNExcrBlueS ENDIF;
aVPUptMaxCrGrenEpi = MAX(0.0,cVPUptMaxGren * uFunTmProdGrenEpi *(cPDGrenMax - rPDGrenWEpi) /(cPDGrenMax - cPDGrenMin));
aVPUptGrenEpi = oPO4WEpi * aVPUptMaxCrGrenEpi /(aVPUptMaxCrGrenEpi / cAffPUptGren + oPO4WEpi);
wPUptGrenEpi = aVPUptGrenEpi * oDGrenWEpi;
aVNUptMaxCrGrenEpi = MAX(0.0,cVNUptMaxGren * uFunTmProdGrenEpi * (cNDGrenMax - rNDGrenWEpi) /(cNDGrenMax - cNDGrenMin));
ahNUptGrenEpi = aVNUptMaxCrGrenEpi / cAffNUptGren;
aVNUptGrenEpi = oNDissWEpi * aVNUptMaxCrGrenEpi /(ahNUptGrenEpi + oNDissWEpi);
wNUptGrenEpi = aVNUptGrenEpi * oDGrenWEpi;
afNH4UptGrenEpi = oNH4WEpi * oNO3WEpi /((ahNUptGrenEpi + oNH4WEpi) *(ahNUptGrenEpi + oNO3WEpi)) + oNH4WEpi * ahNUptGrenEpi /((oNH4WEpi + oNO3WEpi) *(ahNUptGrenEpi + oNO3WEpi));
wNUptNH4GrenEpi = afNH4UptGrenEpi * wNUptGrenEpi;
wNUptNO3GrenEpi = wNUptGrenEpi - wNUptNH4GrenEpi;
aPLimGrenEpi = MAX(0.0,(1.0 - cPDGrenMin / rPDGrenWEpi) * cPDGrenMax /(cPDGrenMax - cPDGrenMin));
aNLimGrenEpi = MAX(0.0,(1.0 - cNDGrenMin / rNDGrenWEpi) * cNDGrenMax /(cNDGrenMax - cNDGrenMin));
aSiLimGrenEpi = oSiO2WEpi /(hSiAssGren + oSiO2WEpi);
aMuTmLGrenEpi = ufDay *(1.0 - afCovSurfVeg) * aLLimGrenEpi * uMuMaxTmGrenEpi;
aNutLimGrenEpi = MIN(aPLimGrenEpi , (MIN(aNLimGrenEpi,aSiLimGrenEpi)));
aMuGrenEpi = aNutLimGrenEpi * aMuTmLGrenEpi;
wDAssGrenEpi = aMuGrenEpi*oDGrenWEpi;
aExtChGrenEpi = cExtSpGren / rChDGrenEpi;
wDRespGrenWEpi = ukDRespTmGrenEpi * oDGrenWEpi;
wDLossGrenEpi = ukLossTmGrenEpi * oDGrenWEpi;
wDMortGrenWEpi = kMortGrenW * oDGrenWEpi;
ukDDecGrenEpi = ukDRespTmGrenEpi + ukLossTmGrenEpi + kMortGrenW +(uCorVSetGrenEpi * uFunTmSetEpi) / uDepthWEpi;
wPExcrGrenWEpi = (2.0 *rPDGrenWEpi) /(cPDGrenMax + rPDGrenWEpi) * rPDGrenWEpi * wDRespGrenWEpi ;
wPLossGrenEpi = rPDGrenWEpi * wDLossGrenEpi;
wPMortGrenWEpi = kMortGrenW * oPGrenWEpi;
wNExcrGrenWEpi = (2.0 * rNDGrenWEpi) /(cNDGrenMax + rNDGrenWEpi) * rNDGrenWEpi * wDRespGrenWEpi;
wNLossGrenEpi = rNDGrenWEpi * wDLossGrenEpi;
wNMortGrenWEpi = kMortGrenW * oNGrenWEpi;
wDPrimGrenWEpi = IF (aInclStrat EQ TRUE ) THEN wDAssGrenEpi - wDRespGrenWEpi - wDLossGrenEpi - wDMortGrenWEpi -(tDSetGrenEpi ) / uDepthWEpi ELSE wDAssGrenEpi - wDRespGrenWEpi - wDLossGrenEpi - wDMortGrenWEpi -(tDSetGrenEpi - tDResusGren) / uDepthWEpi ENDIF;
wPPrimGrenWEpi =IF (aInclStrat EQ TRUE ) THEN wPUptGrenEpi - wPExcrGrenWEpi - wPLossGrenEpi - wPMortGrenWEpi -(tPSetGrenEpi ) / uDepthWEpi ELSE wPUptGrenEpi - wPExcrGrenWEpi - wPLossGrenEpi - wPMortGrenWEpi -(tPSetGrenEpi - tPResusGren) / uDepthWEpi ENDIF;
wNPrimGrenWEpi = IF (aInclStrat EQ TRUE ) THEN wNUptGrenEpi - wNExcrGrenWEpi - wNLossGrenEpi - wNMortGrenWEpi -(tNSetGrenEpi ) / uDepthWEpi ELSE wNUptGrenEpi - wNExcrGrenWEpi - wNLossGrenEpi - wNMortGrenWEpi -(tNSetGrenEpi - tNResusGren) / uDepthWEpi ENDIF;
tDPrimGrenS = IF ( aInclStrat EQ FALSE) THEN tDSetGrenEpi - tDResusGren - tDMortGrenS - tDRespGrenS ELSE tDSetGrenHyp - tDResusGren - tDMortGrenS - tDRespGrenS ENDIF;
tPPrimGrenS = IF ( aInclStrat EQ FALSE) THEN tPSetGrenEpi - tPResusGren - tPMortGrenS - tPExcrGrenS ELSE tPSetGrenHyp - tPResusGren - tPMortGrenS - tPExcrGrenS ENDIF;
tNPrimGrenS = IF ( aInclStrat EQ FALSE) THEN tNSetGrenEpi - tNResusGren - tNMortGrenS - tNExcrGrenS ELSE tNSetGrenHyp - tNResusGren - tNMortGrenS - tNExcrGrenS ENDIF;
aVPUptMaxCrDiatEpi = MAX(0.0,cVPUptMaxDiat * uFunTmProdDiatEpi *(cPDDiatMax - rPDDiatWEpi) /(cPDDiatMax - cPDDiatMin));
aVPUptDiatEpi = oPO4WEpi * aVPUptMaxCrDiatEpi /(aVPUptMaxCrDiatEpi / cAffPUptDiat + oPO4WEpi);
wPUptDiatEpi = aVPUptDiatEpi * oDDiatWEpi;
aVNUptMaxCrDiatEpi = MAX(0.0,cVNUptMaxDiat * uFunTmProdDiatEpi * (cNDDiatMax - rNDDiatWEpi) /(cNDDiatMax - cNDDiatMin));
ahNUptDiatEpi = aVNUptMaxCrDiatEpi / cAffNUptDiat;
aVNUptDiatEpi = oNDissWEpi * aVNUptMaxCrDiatEpi /(ahNUptDiatEpi + oNDissWEpi);
wNUptDiatEpi = aVNUptDiatEpi * oDDiatWEpi;
afNH4UptDiatEpi = oNH4WEpi * oNO3WEpi /((ahNUptDiatEpi + oNH4WEpi) *(ahNUptDiatEpi + oNO3WEpi)) + oNH4WEpi * ahNUptDiatEpi /((oNH4WEpi + oNO3WEpi) *(ahNUptDiatEpi + oNO3WEpi));
wNUptNH4DiatEpi = afNH4UptDiatEpi * wNUptDiatEpi;
wNUptNO3DiatEpi = wNUptDiatEpi - wNUptNH4DiatEpi;
aPLimDiatEpi = MAX(0.0,(1.0 - cPDDiatMin / rPDDiatWEpi) * cPDDiatMax /(cPDDiatMax - cPDDiatMin));
aNLimDiatEpi = MAX(0.0,(1.0 - cNDDiatMin / rNDDiatWEpi) * cNDDiatMax /(cNDDiatMax - cNDDiatMin));
aSiLimDiatEpi = oSiO2WEpi /(hSiAssDiat + oSiO2WEpi);
aMuTmLDiatEpi = ufDay *(1.0 - afCovSurfVeg) * aLLimDiatEpi * uMuMaxTmDiatEpi;
aNutLimDiatEpi = MIN(aPLimDiatEpi , (MIN(aNLimDiatEpi,aSiLimDiatEpi)));
aMuDiatEpi = aNutLimDiatEpi * aMuTmLDiatEpi;
wDAssDiatEpi = aMuDiatEpi*oDDiatWEpi;
aExtChDiatEpi = cExtSpDiat / rChDDiatEpi;
wDRespDiatWEpi = ukDRespTmDiatEpi * oDDiatWEpi;
wDLossDiatEpi = ukLossTmDiatEpi * oDDiatWEpi;
wDMortDiatWEpi = kMortDiatW * oDDiatWEpi;
ukDDecDiatEpi = ukDRespTmDiatEpi + ukLossTmDiatEpi + kMortDiatW +(uCorVSetDiatEpi * uFunTmSetEpi) / uDepthWEpi;
wPExcrDiatWEpi = (2.0 * rPDDiatWEpi) /(cPDDiatMax + rPDDiatWEpi) * rPDDiatWEpi * wDRespDiatWEpi ;
wPLossDiatEpi = rPDDiatWEpi * wDLossDiatEpi;
wPMortDiatWEpi = kMortDiatW * oPDiatWEpi;
wNExcrDiatWEpi = (2.0 * rNDDiatWEpi) /(cNDDiatMax + rNDDiatWEpi) * rNDDiatWEpi * wDRespDiatWEpi ;
wNLossDiatEpi = rNDDiatWEpi * wDLossDiatEpi;
wNMortDiatWEpi = kMortDiatW * oNDiatWEpi;
wDPrimDiatWEpi = IF (aInclStrat EQ TRUE ) THEN wDAssDiatEpi - wDRespDiatWEpi - wDLossDiatEpi - wDMortDiatWEpi -(tDSetDiatEpi ) / uDepthWEpi ELSE wDAssDiatEpi - wDRespDiatWEpi - wDLossDiatEpi - wDMortDiatWEpi -(tDSetDiatEpi - tDResusDiat) / uDepthWEpi ENDIF;
wPPrimDiatWEpi = IF (aInclStrat EQ TRUE ) THEN wPUptDiatEpi - wPExcrDiatWEpi - wPLossDiatEpi - wPMortDiatWEpi -(tPSetDiatEpi ) / uDepthWEpi ELSE wPUptDiatEpi - wPExcrDiatWEpi - wPLossDiatEpi - wPMortDiatWEpi -(tPSetDiatEpi - tPResusDiat) / uDepthWEpi ENDIF;
wNPrimDiatWEpi = IF (aInclStrat EQ TRUE ) THEN wNUptDiatEpi - wNExcrDiatWEpi - wNLossDiatEpi - wNMortDiatWEpi -(tNSetDiatEpi ) / uDepthWEpi ELSE wNUptDiatEpi - wNExcrDiatWEpi - wNLossDiatEpi - wNMortDiatWEpi -(tNSetDiatEpi - tNResusDiat) / uDepthWEpi ENDIF;
tDPrimDiatS = IF ( aInclStrat EQ FALSE) THEN tDSetDiatEpi - tDResusDiat - tDMortDiatS - tDRespDiatS ELSE tDSetDiatHyp - tDResusDiat - tDMortDiatS - tDRespDiatS ENDIF;
tPPrimDiatS = IF ( aInclStrat EQ FALSE) THEN tPSetDiatEpi - tPResusDiat - tPMortDiatS - tPExcrDiatS ELSE tPSetDiatHyp - tPResusDiat - tPMortDiatS - tPExcrDiatS ENDIF;
tNPrimDiatS = IF ( aInclStrat EQ FALSE) THEN tNSetDiatEpi - tNResusDiat - tNMortDiatS - tNExcrDiatS ELSE tNSetDiatHyp - tNResusDiat - tNMortDiatS - tNExcrDiatS ENDIF;
oChla = IF ( aInclStrat EQ TRUE ) THEN (oChlaEpi * uDepthWEpi + oChlaHyp * uDepthWHyp + aChlaBlueSurf) / uDepthW ELSE (oChlaEpi * uDepthWEpi+ aChlaBlueSurf ) / uDepthW ENDIF;
oChlaW = IF ( aInclStrat EQ TRUE ) THEN (oChlaEpi * uDepthWEpi + oChlaHyp * uDepthWHyp) / uDepthW ELSE (oChlaEpi * uDepthWEpi) / uDepthW ENDIF;
aChlaH = oChla * uDepthW;
aLPIEpi =  (aLPARBotSurf- aLPARBotEpiOpen + uhLVeg* LN((1.0 +aLPARBotEpiOpen/ uhLVeg)  /(1.0 + aLPARBotSurf  / uhLVeg) + NearZero  ) ) / uDepthWEpi;
aLPIHyp =  (aLPARBotEpi- aLPARBotHypOpen + uhLVeg* LN((1.0 +aLPARBotHypOpen/ uhLVeg)  /(1.0 + aLPARBotEpi  / uhLVeg) + NearZero  ) ) / uDepthWHyp;
aLPIMeasEpi =  (aLPARBotSurf- aLPARBotEpi ) /aExtCoefEpi;
aLPIMeasHyp =  (aLPARBotEpi- aLPARBotHyp) / aExtCoefHyp;
aLMeasEpi = aLPARBotSurf * EXP(- aExtCoefOpenEpi *cDepthMeasoChl);
aLMeasHyp = aLPARBotEpi * EXP(- aExtCoefOpenHyp * (cDepthMeasoChl -  uDepthWEpi));
aLPAREupho = PerCent * uLPARSurf;
aDepthEuphW = IF (aLPAREupho GT aLPARBotSurf) THEN  0.0 ELSEIF (aLPAREupho GE aLPARBotEpiOpen) THEN - LN(aLPAREupho/aLPARBotSurf) / aExtCoefEpi ELSE uDepthWEpi - LN(aLPAREupho/aLPARBotEpiOpen) / aExtCoefOpenHyp ENDIF;
oChlaMeasEpi = IF (cDepthMeasoChl LT aDepthEuphW) THEN aLMeasEpi/ aLPIMeasEpi *oChlaEpi * uDepthWEpi ELSE oChlaEpi ENDIF;
oChlaMeasHyp = IF (cDepthMeasoChl LT aDepthEuphW) THEN  aLMeasHyp/ aLPIMeasHyp *oChlaHyp* uDepthWHyp  ELSE oChlaHyp ENDIF;
oChlaMeasW = IF (cDepthMeasoChl LT uDepthWEpi) THEN oChlaMeasEpi ELSE oChlaMeasHyp ENDIF;
wDAssPhytEpi = wDAssDiatEpi + wDAssGrenEpi + wDAssBlueEpi;
wDRespPhytWEpi = wDRespDiatWEpi + wDRespGrenWEpi + wDRespBlueWEpi;
wDMortPhytWEpi = wDMortDiatWEpi + wDMortGrenWEpi + wDMortBlueWEpi;
tDSetPhytEpi = tDSetDiatEpi + tDSetGrenEpi + tDSetBlueEpi;
wDLossPhytEpi = wDLossDiatEpi + wDLossGrenEpi + wDLossBlueEpi + tDLossBlueSurf / uDepthWEpi;
wDPrimPhytWEpi = wDPrimDiatWEpi + wDPrimGrenWEpi + wDPrimBlueWEpi;
wPUptPhytEpi = wPUptDiatEpi + wPUptGrenEpi + wPUptBlueEpi;
wPExcrPhytWEpi = wPExcrDiatWEpi + wPExcrGrenWEpi + wPExcrBlueWEpi;
wPMortPhytWEpi = wPMortDiatWEpi + wPMortGrenWEpi + wPMortBlueWEpi;
tPSetPhytEpi = tPSetDiatEpi + tPSetGrenEpi + tPSetBlueEpi;
wPLossPhytEpi = wPLossDiatEpi + wPLossGrenEpi + wPLossBlueEpi + tPLossBlueSurf / uDepthWEpi;
wPPrimPhytWEpi = wPPrimDiatWEpi + wPPrimGrenWEpi + wPPrimBlueWEpi;
wNUptPhytEpi = wNUptDiatEpi + wNUptGrenEpi + wNUptBlueEpi;
wNUptNH4PhytEpi = wNUptNH4DiatEpi + wNUptNH4GrenEpi + wNUptNH4BlueEpi;
wNUptNO3PhytEpi = wNUptNO3DiatEpi + wNUptNO3GrenEpi + wNUptNO3BlueEpi;
wNExcrPhytWEpi = wNExcrDiatWEpi + wNExcrGrenWEpi + wNExcrBlueWEpi;
wNMortPhytWEpi = wNMortDiatWEpi + wNMortGrenWEpi + wNMortBlueWEpi;
tNSetPhytEpi = tNSetDiatEpi + tNSetGrenEpi + tNSetBlueEpi;
wNLossPhytEpi = wNLossDiatEpi + wNLossGrenEpi + wNLossBlueEpi + tNLossBlueSurf / uDepthWEpi;
wNPrimPhytWEpi = wNPrimDiatWEpi + wNPrimGrenWEpi + wNPrimBlueWEpi;
tDPrimPhytS = tDPrimDiatS + tDPrimGrenS + tDPrimBlueS;
tPPrimPhytS = tPPrimDiatS + tPPrimGrenS + tPPrimBlueS;
tNPrimPhytS = tNPrimDiatS + tNPrimGrenS + tNPrimBlueS;
wSiUptDiatEpi = cSiDDiat * wDAssDiatEpi;
wSiExcrDiatWEpi = cSiDDiat * wDRespDiatWEpi ;
wSiLossDiatEpi = cSiDDiat * wDLossDiatEpi;
wSiMortDiatWEpi = cSiDDiat * wDMortDiatWEpi;
tSiSetDiatEpi = cSiDDiat * tDSetDiatEpi;
wSiPrimDiatWHyp = IF (aInclStrat EQ TRUE ) THEN wSiUptDiatHyp - tSiSetDiatHyp / uDepthWHyp - wSiExcrDiatWHyp - wSiMortDiatWHyp - wSiLossDiatHyp ELSE 0.0 ENDIF;
wSiPrimDiatWEpi = IF (aInclStrat EQ TRUE ) THEN wSiUptDiatEpi - tSiSetDiatEpi / uDepthWEpi - wSiExcrDiatWEpi - wSiMortDiatWEpi - wSiLossDiatEpi ELSE wSiUptDiatEpi - tSiSetDiatEpi / uDepthWEpi - wSiExcrDiatWEpi - wSiMortDiatWEpi - wSiLossDiatEpi + tSiResusDiat / uDepthWEpi ENDIF;
rCyDBlueEpi = cCyDBlueMax -(cCyDBlueMax - cCyDBlueMin) * aLLimBlueEpi;
oCyanEpi = rCyDBlueEpi * oDBlueWEpi * mgPerg;
fDDiatEpi = oDDiatWEpi /(oDDiatWEpi + oDGrenWEpi + oDBlueWEpi + NearZero);
wDPrimDetWEpi = IF (InclSurf EQ TRUE) THEN wDMortPhytWEpi + wDLossPhytEpi + tDMortBlueSurf / uDepthWEpi ELSE wDMortPhytWEpi + wDLossPhytEpi ENDIF;
tDPrimDetS = tDMortPhytS;
tDPrimTotSurf = IF (InclSurf EQ TRUE) THEN tDAssBlueSurf - tDRespBlueSurf ELSE 0.0 ENDIF;
tDPrimTotT = IF (aInclStrat EQ FALSE ) THEN(wDAssPhytEpi - wDRespPhytWEpi) * uDepthWEpi - tDRespPhytS + tDPrimTotSurf ELSE (wDAssPhytEpi - wDRespPhytWEpi) * uDepthWEpi + (wDAssPhytHyp - wDRespPhytWHyp) * uDepthWHyp - tDRespPhytS + tDPrimTotSurf ENDIF;
wO2ProdPhytEpi = molO2molC * cCPerDW * wDAssPhytEpi;
wO2RespPhytWEpi = molO2molC * cCPerDW * wDRespPhytWEpi * aCorO2BODEpi;
wO2UptNO3PhytEpi = O2PerNO3 * molO2molN * wNUptNO3PhytEpi;
wO2PrimWEpi = wO2ProdPhytEpi - wO2RespPhytWEpi + wO2UptNO3PhytEpi;
tO2RespPhytS = molO2molC * cCPerDW * tDRespPhytS * afOxySed;
tO2PrimS = tO2RespPhytS;
tO2PrimSHyp = IF aInclStrat EQ TRUE THEN tO2PrimS / uDepthWHyp ELSE 0.0 ENDIF;
tO2PrimSEpi = IF aInclStrat EQ FALSE THEN tO2PrimS / uDepthWEpi ELSE 0.0 ENDIF;
wPMortBluePO4WSurf = fDissMortPhyt * tPMortBlueSurf / uDepthWEpi;
wPMortBlueDetSurf = ( 1 -fDissMortPhyt) * tPMortBlueSurf / uDepthWEpi;
wPMortPhytPO4WEpi = fDissMortPhyt * wPMortPhytWEpi;
wPMortPhytDetWEpi = wPMortPhytWEpi - wPMortPhytPO4WEpi + wPMortBlueDetSurf;
wPLossPhytPO4Epi = fDissLoss * wPLossPhytEpi;
wPLossPhytDetEpi = wPLossPhytEpi - wPLossPhytPO4Epi;
wPPrimPO4WEpi = - wPUptPhytEpi + wPExcrPhytWEpi + wPLossPhytPO4Epi + wPMortPhytPO4WEpi - tPUptBlueSurf / uDepthWEpi + tPExcrBlueSurf / uDepthWEpi + wPMortBluePO4WSurf;
wPPrimDetWEpi = wPLossPhytDetEpi + wPMortPhytDetWEpi;
tPPrimDetS = tPMortPhytDetS ;
wNMortPhytNH4WEpi = fDissMortPhyt * wNMortPhytWEpi;
wNMortPhytDetWEpi = wNMortPhytWEpi - wNMortPhytNH4WEpi+ wNMortBlueDetSurf;
wNLossPhytNH4Epi = fDissLoss * wNLossPhytEpi;
wNLossPhytDetEpi = wNLossPhytEpi - wNLossPhytNH4Epi;
wNPrimNH4WEpi = - wNUptNH4PhytEpi + wNExcrPhytWEpi + wNLossPhytNH4Epi + wNMortPhytNH4WEpi- tNUptNH4BlueSurf / uDepthWEpi + tNExcrBlueSurf / uDepthWEpi + wNMortBlueNH4WSurf;
wNPrimNO3WEpi = - wNUptNO3PhytEpi - tNUptNO3BlueSurf / uDepthWEpi;
wNPrimDetWEpi = wNLossPhytDetEpi + wNMortPhytDetWEpi;
tNPrimDetS = tNMortPhytDetS ;
wSiPrimSiO2WEpi = IF (aInclStrat EQ FALSE) THEN wSiExcrDiatWEpi - wSiUptDiatEpi + tSiExcrDiatS / uDepthWEpi ELSE wSiExcrDiatWEpi - wSiUptDiatEpi ENDIF;
wSiPrimDetWEpi = wSiMortDiatWEpi + wSiLossDiatEpi;
tSiPrimDiatS = IF (aInclStrat EQ FALSE) THEN tSiSetDiatEpi - tSiResusDiat - tSiExcrDiatS - tSiMortDiatS ELSE tSiSetDiatHyp - tSiResusDiat - tSiExcrDiatS - tSiMortDiatS ENDIF;
tSiPrimDetS = tSiMortDiatS ;
aDepthEuphEpi = cEuph * aSecchiEpi;
aRelDepthEuphEpi = aDepthEuphEpi / uDepthWEpi;
aChlaHEpi = oChlaEpi * uDepthWEpi;
aCovPhytWEpi = cCovSpPhyt *(oDPhytWEpi * uDepthWEpi);
rExtChPhytEpi = aExtPhytEpi /(oChlaEpi / mgPerg + NearZero);
rPDZooEpi = oPZooEpi /(oDZooEpi+NearZero);
rNDZooEpi = oNZooEpi/(oDZooEpi+NearZero);
aDFoodZooEpi =  IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN cPrefDiat * aDDiatWEpi + cPrefGren * aDGrenWEpi + cPrefBlue * aDBlueWEpi + cPrefDet * aDDetWEpi ELSE cPrefDiat * aDDiatWEpi + cPrefGren * aDGrenWEpi + cPrefBlue * aDBlueWEpi + cPrefBlueSurf * aDBlueSurf + cPrefDet * aDDetWEpi ENDIF;
oDFoodZooEpi = aDFoodZooEpi / uDepthWEpi;
aFiltEpi = cFiltMax * uFunTmZooEpi * hFilt /(hFilt + oDOMWEpi);
aDSatZooEpi = oDFoodZooEpi /(hFilt + oDOMWEpi);
wDEnvZooEpi = MAX(0.0,ukDIncrZooEpi / cDCarrZoo * oDZooEpi*oDZooEpi);
wDAssZooEpi = aDSatZooEpi *(ukDAssTmZooEpi * oDZooEpi - wDEnvZooEpi);
wDConsZooEpi = wDAssZooEpi / fDAssZoo;
wDConsDetZooEpi = cPrefDet*oDDetWEpi / oDFoodZooEpi * wDConsZooEpi;
wDConsDiatZooEpi = cPrefDiat*oDDiatWEpi / oDFoodZooEpi * wDConsZooEpi;
wDConsGrenZooEpi = cPrefGren*oDGrenWEpi / oDFoodZooEpi * wDConsZooEpi;
wDConsBlueZooEpi = cPrefBlue*oDBlueWEpi / oDFoodZooEpi * wDConsZooEpi;
wDConsBlueZooSurf =  IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE cPrefBlueSurf *aDBlueSurf / aDFoodZooEpi * wDConsZooEpi ENDIF;
tDConsBlueZooSurf =  IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE wDConsBlueZooSurf *uDepthWEpi ENDIF;
wDConsPhytZooEpi = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN wDConsDiatZooEpi + wDConsGrenZooEpi + wDConsBlueZooEpi ELSE wDConsDiatZooEpi + wDConsGrenZooEpi + wDConsBlueZooEpi + wDConsBlueZooSurf ENDIF;
wDEgesZooEpi = wDConsZooEpi - wDAssZooEpi;
aCorDRespZooEpi = MAX(cPDZooRef / rPDZooEpi,cNDZooRef / rNDZooEpi);
wDRespZooEpi = aCorDRespZooEpi * ukDRespTmZooEpi * oDZooEpi;
wDMortZooEpi = kMortZoo * oDZooEpi +(1.0 - aDSatZooEpi) * wDEnvZooEpi;
aPFoodZooEpi = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN cPrefDiat*aPDiatWEpi + cPrefGren*aPGrenWEpi + cPrefBlue * aPBlueWEpi  + cPrefDet * aPDetWEpi ELSE cPrefDiat*aPDiatWEpi + cPrefGren*aPGrenWEpi + cPrefBlue*aPBlueWEpi + cPrefBlueSurf *aPBlueSurf + cPrefDet * aPDetWEpi ENDIF;
oPFoodZooEpi = aPFoodZooEpi / MassEpi;
rPDFoodZooEpi = oPFoodZooEpi /(oDFoodZooEpi+NearZero);
wPConsDiatZooEpi = rPDDiatWEpi * wDConsDiatZooEpi;
wPConsGrenZooEpi = rPDGrenWEpi * wDConsGrenZooEpi;
wPConsBlueZooEpi = rPDBlueWEpi * wDConsBlueZooEpi;
wPConsBlueZooSurf = rPDBlueSurf * wDConsBlueZooSurf;
tPConsBlueZooSurf = wPConsBlueZooSurf *uDepthWEpi;
wPConsPhytZooEpi = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN wPConsDiatZooEpi + wPConsGrenZooEpi + wPConsBlueZooEpi ELSE wPConsDiatZooEpi + wPConsGrenZooEpi + wPConsBlueZooEpi + wPConsBlueZooSurf ENDIF;
wPConsDetZooEpi = rPDDetWEpi * wDConsDetZooEpi;
wPConsZooEpi = wPConsPhytZooEpi + wPConsDetZooEpi;
afPAssZooEpi = MIN(1.0,cPDZooRef / rPDFoodZooEpi * fDAssZoo);
wPAssZooEpi = afPAssZooEpi * wPConsZooEpi;
wPEgesZooEpi = wPConsZooEpi - wPAssZooEpi;
wPEgesZooPO4Epi = fDissEgesZoo*wPEgesZooEpi;
wPEgesZooDetEpi = wPEgesZooEpi - wPEgesZooPO4Epi;
akPExcrZooEpi = rPDZooEpi / cPDZooRef * kDRespZoo * uFunTmZooEpi;
wPExcrZooEpi = akPExcrZooEpi*oPZooEpi ;
wPMortZooEpi = rPDZooEpi * wDMortZooEpi;
wPMortZooPO4Epi = fDissMortZoo * wPMortZooEpi;
wPMortZooDetEpi = wPMortZooEpi - wPMortZooPO4Epi;
aNFoodZooEpi =  IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN cPrefDiat*aNDiatWEpi + cPrefGren*aNGrenWEpi + cPrefBlue*aNBlueWEpi + cPrefDet * aNDetWEpi ELSE cPrefDiat*aNDiatWEpi + cPrefGren*aNGrenWEpi + cPrefBlue*aNBlueWEpi + cPrefBlueSurf*aNBlueSurf + cPrefDet * aNDetWEpi ENDIF;
oNFoodZooEpi = aNFoodZooEpi / MassEpi;
rNDFoodZooEpi = oNFoodZooEpi /(oDFoodZooEpi+NearZero);
wNConsDiatZooEpi = rNDDiatWEpi*wDConsDiatZooEpi;
wNConsGrenZooEpi = rNDGrenWEpi*wDConsGrenZooEpi;
wNConsBlueZooEpi = rNDBlueWEpi*wDConsBlueZooEpi;
wNConsBlueZooSurf = rNDBlueSurf * wDConsBlueZooSurf;
tNConsBlueZooSurf = wNConsBlueZooSurf *uDepthWEpi;
wNConsPhytZooEpi = IF (InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN  wNConsDiatZooEpi + wNConsGrenZooEpi + wNConsBlueZooEpi ELSE wNConsDiatZooEpi + wNConsGrenZooEpi + wNConsBlueZooEpi + wNConsBlueZooSurf ENDIF;
wNConsDetZooEpi = rNDDetWEpi*wDConsDetZooEpi;
wNConsZooEpi = wNConsPhytZooEpi + wNConsDetZooEpi;
afNAssZooEpi = MIN(1.0,cNDZooRef / rNDFoodZooEpi * fDAssZoo);
wNAssZooEpi = afNAssZooEpi*wNConsZooEpi;
wNEgesZooEpi = wNConsZooEpi - wNAssZooEpi;
wNEgesZooNH4Epi = fDissEgesZoo*wNEgesZooEpi;
wNEgesZooDetEpi = wNEgesZooEpi - wNEgesZooNH4Epi;
kNExcrZooEpi = rNDZooEpi / cNDZooRef * kDRespZoo * uFunTmZooEpi;
wNExcrZooEpi = kNExcrZooEpi*oNZooEpi ;
wNMortZooEpi = rNDZooEpi*wDMortZooEpi;
wNMortZooNH4Epi = fDissMortZoo*wNMortZooEpi;
wNMortZooDetEpi = wNMortZooEpi - wNMortZooNH4Epi;
wSiConsDiatZooEpi = cSiDDiat * wDConsDiatZooEpi;
rPDFiJv = aPFiJv /(aDFiJv+NearZero);
rPDFiAd = aPFiAd /(aDFiAd+NearZero);
rNDFiJv = aNFiJv /(aDFiJv+NearZero);
rNDFiAd = aNFiAd /(aDFiAd+NearZero);
tDReprFish = IF (FALSE EQ InclSeason) THEN ((1/DaysInYear)*fReprFish) * aDFiAd ELSEIF (Day GE cDayReprFish AND Day LT cDayReprFish + 1.0) THEN fReprFish * aDFiAd * PerDay ELSE 0.0 ENDIF;
tDAgeFish = IF (FALSE EQ InclSeason) THEN ((1/DaysInYear)*fAgeFish) * aDFiJv ELSEIF (Day GE 364.0) THEN fAgeFish * aDFiJv *PerDay ELSE 0.0 ENDIF;
aDTotZoo = IF (aInclStrat EQ FALSE) THEN oDZooEpi * uDepthWEpi ELSE oDZooEpi * uDepthWEpi + oDZooHyp * uDepthWHyp ENDIF;
aPTotZoo = IF (aInclStrat EQ FALSE) THEN oPZooEpi * uDepthWEpi ELSE oPZooEpi * uDepthWEpi + oPZooHyp * uDepthWHyp ENDIF;
aNTotZoo = IF (aInclStrat EQ FALSE) THEN oNZooEpi * uDepthWEpi ELSE oNZooEpi * uDepthWEpi + oNZooHyp * uDepthWHyp ENDIF;
aDSatFiJv = aDTotZoo * aDTotZoo /(hDZooFiJv * hDZooFiJv + aDTotZoo * aDTotZoo);
tDEnvFiJv = MAX(0.0,ukDIncrFiJv /(cDCarrFish - aDFiAd) * aDFiJv*aDFiJv);
tDAssFiJv = aDSatFiJv *(kDAssFiJv * uFunTmFish * aDFiJv - tDEnvFiJv);
tDConsFiJv = tDAssFiJv / fDAssFiJv;
tDEgesFiJv = tDConsFiJv - tDAssFiJv;
tDRespFiJv = (cPDFishRef / rPDFiJv) * kDRespFiJv * uFunTmFish * aDFiJv;
tDMortFiJv = kMortFiJv * aDFiJv +(1.0 - aDSatFiJv) * tDEnvFiJv;
tDMigrFiJv = kMigrFish *(cDFiJvIn - aDFiJv);
tDEnvFiAd = MAX(0.0,ukDIncrFiAd /(cDCarrFish - aDFiJv) * aDFiAd*aDFiAd);
tDAssFiAd = aDSatFiAd *(kDAssFiAd * uFunTmFish * aDFiAd - tDEnvFiAd);
tDConsFiAd = tDAssFiAd / fDAssFiAd;
tDEgesFiAd = tDConsFiAd - tDAssFiAd;
tDRespFiAd = (cPDFishRef / rPDFiAd) * kDRespFiAd * uFunTmFish * aDFiAd;
tDMortFiAd = kMortFiAd * aDFiAd +(1.0 - aDSatFiAd) * tDEnvFiAd;
tDHarvFish = ukHarvFish * aDFiAd;
tDMigrFiAd = kMigrFish *(cDFiAdIn - aDFiAd);
tDMortFiJvBot = fDBone * tDMortFiJv;
tDMortFiJvDet = tDMortFiJv - tDMortFiJvBot;
tDMortFiAdBot = fDBone * tDMortFiAd;
tDMortFiAdDet = tDMortFiAd - tDMortFiAdBot;
tPReprFish = rPDFiAd * tDReprFish;
tPAgeFish = rPDFiJv * tDAgeFish;
tPMigrFiJv = kMigrFish *(cPDFishRef * cDFiJvIn - aPFiJv);
tPConsFiJv = rPDZooEpi * tDConsFiJv;
afPAssFiJv = MIN(1.0,cPDFishRef / rPDZooEpi * fDAssFiJv);
tPAssFiJv = afPAssFiJv * tPConsFiJv;
tPEgesFiJv = tPConsFiJv - tPAssFiJv;
tPExcrFiJv = (rPDFiJv / cPDFishRef) * kDRespFiJv * uFunTmFish * aPFiJv;
tPMortFiJv = rPDFiJv * tDMortFiJv;
tPMigrFiAd = kMigrFish *(cPDFishRef * cDFiAdIn - aPFiAd);
tPConsFiAd = rPDBent * tDConsFiAd;
tPAssFiAd = afPAssFiAd * tPConsFiAd;
tPEgesFiAd = tPConsFiAd - tPAssFiAd;
tPExcrFiAd = (rPDFiAd / cPDFishRef) * kDRespFiAd * uFunTmFish * aPFiAd;
tPMortFiAd = rPDFiAd * tDMortFiAd;
tPHarvFish = rPDFiAd * tDHarvFish;
tPMortFiJvBot = fPBone * tPMortFiJv;
tPMortFiJvPO4 = fDissMortFish *(tPMortFiJv - tPMortFiJvBot);
tPMortFiJvDet = tPMortFiJv - tPMortFiJvBot - tPMortFiJvPO4;
tPMortFiAdBot = fPBone * tPMortFiAd;
tPMortFiAdPO4 = fDissMortFish *(tPMortFiAd - tPMortFiAdBot);
tPMortFiAdDet = tPMortFiAd - tPMortFiAdBot - tPMortFiAdPO4;
tPEgesFiJvPO4 = fDissEgesFish * tPEgesFiJv;
tPEgesFiJvDet = tPEgesFiJv - tPEgesFiJvPO4;
tPEgesFiAdPO4 = fDissEgesFish * tPEgesFiAd;
tPEgesFiAdDet = tPEgesFiAd - tPEgesFiAdPO4;
tNReprFish = rNDFiAd * tDReprFish;
tNAgeFish = rNDFiJv * tDAgeFish;
tNMigrFiJv = kMigrFish *(cNDFishRef * cDFiJvIn - aNFiJv);
tNConsFiJv = rNDZooEpi * tDConsFiJv;
afNAssFiJv = MIN(1.0,cNDFishRef / rNDZooEpi * fDAssFiJv);
tNAssFiJv = afNAssFiJv * tNConsFiJv;
tNEgesFiJv = tNConsFiJv - tNAssFiJv;
tNExcrFiJv = (rNDFiJv / cNDFishRef) * kDRespFiJv * uFunTmFish * aNFiJv;
tNMortFiJv = rNDFiJv * tDMortFiJv;
tNMigrFiAd = kMigrFish *(cNDFishRef * cDFiAdIn - aNFiAd);
tNConsFiAd = rNDBent * tDConsFiAd;
tNAssFiAd = afNAssFiAd * tNConsFiAd;
tNEgesFiAd = tNConsFiAd - tNAssFiAd;
tNExcrFiAd = (rNDFiAd / cNDFishRef) * kDRespFiAd * uFunTmFish * aNFiAd;
tNMortFiAd = rNDFiAd * tDMortFiAd;
tNHarvFish = rNDFiAd * tDHarvFish;
tNMortFiAdBot = fDBone * tNMortFiAd;
tNMortFiAdNH4 = fDissMortFish *(tNMortFiAd - tNMortFiAdBot);
tNMortFiAdDet = tNMortFiAd - tNMortFiAdBot - tNMortFiAdNH4;
tNMortFiJvBot = fDBone * tNMortFiJv;
tNMortFiJvNH4 = fDissMortFish *(tNMortFiJv - tNMortFiJvBot);
tNMortFiJvDet = tNMortFiJv - tNMortFiJvBot - tNMortFiJvNH4;
tNEgesFiJvNH4 = fDissEgesFish * tNEgesFiJv;
tNEgesFiJvDet = tNEgesFiJv - tNEgesFiJvNH4;
tDMigrPisc = kMigrPisc *(cDPiscIn - aDPisc);
aDFish = aDFiJv + aDFiAd;
aDSatPisc = aDFish*aDFish /(hDFishPisc*hDFishPisc + aDFish*aDFish);
tDEnvPisc = MAX(0.0,akDIncrPisc / aDCarrPisc * aDPisc*aDPisc);
tDAssPisc = aDSatPisc *(kDAssPisc * aFunVegPisc * uFunTmPisc * aDPisc - tDEnvPisc);
tDConsPisc = tDAssPisc / fDAssPisc;
tDEgesPisc = tDConsPisc - tDAssPisc;
tDConsFiJvPisc = aDFiJv / aDFish * tDConsPisc;
tDConsFiAdPisc = tDConsPisc - tDConsFiJvPisc;
tDMortPisc = kMortPisc * aDPisc +(1.0 - aDSatPisc) * tDEnvPisc;
tDMortPiscBot = fDBone * tDMortPisc;
tDMortPiscDet = tDMortPisc - tDMortPiscBot;
tDHarvPisc = ukHarvPisc * aDPisc;
aPPisc = cPDPisc * aDPisc;
tPConsFiJvPisc = rPDFiJv * tDConsFiJvPisc;
tPConsFiAdPisc = rPDFiAd * tDConsFiAdPisc;
tPConsPisc = tPConsFiJvPisc + tPConsFiAdPisc;
rPDFoodPisc = tPConsPisc / tDConsPisc;
aNPisc = cNDPisc * aDPisc;
tNConsFiJvPisc = rNDFiJv * tDConsFiJvPisc;
tNConsFiAdPisc = rNDFiAd * tDConsFiAdPisc;
tNConsPisc = tNConsFiJvPisc + tNConsFiAdPisc;
rNDFoodPisc = tNConsPisc / tDConsPisc;
tDConsPiscNut = (tDAssPisc / fDAssPisc) * MAX (1.0, cNDPisc / rNDFoodPisc * fDAssPisc, cPDPisc / rPDFoodPisc * fDAssPisc);
tDEgesPiscNut = tDConsPiscNut - tDAssPisc;
tDConsFiJvPiscNut = aDFiJv / aDFish * tDConsPiscNut;
tDConsFiAdPiscNut = tDConsPiscNut - tDConsFiJvPiscNut;
tPConsFiJvPiscNut = rPDFiJv * tDConsFiJvPiscNut;
tPConsFiAdPiscNut = rPDFiAd * tDConsFiAdPiscNut;
tPConsPiscNut = tPConsFiJvPiscNut + tPConsFiAdPiscNut;
tNConsFiJvPiscNut = rNDFiJv * tDConsFiJvPiscNut;
tNConsFiAdPiscNut = rNDFiAd * tDConsFiAdPiscNut;
tNConsPiscNut = tNConsFiJvPiscNut + tNConsFiAdPiscNut;
afPAssPisc = MIN(1.0, ((cPDPisc / rPDFoodPisc * fDAssPisc) / (tDConsPiscNut / tDConsPisc )) );
tPAssPisc = afPAssPisc * tPConsPiscNut;
tPEgesPisc = tPConsPiscNut - tPAssPisc;
tPEgesPiscPO4 = fDissEgesPisc * tPEgesPisc;
tPEgesPiscDet = tPEgesPisc - tPEgesPiscPO4;
tDRespPisc = kDRespPisc * uFunTmPisc * aDPisc;
tPExcrPisc = cPDPisc * tDRespPisc;
tPMortPisc = cPDPisc * tDMortPisc;
tPMortPiscBot = fPBone * tPMortPisc;
tPMortPiscPO4 = fDissMortPisc *(tPMortPisc - tPMortPiscBot);
tPMortPiscDet = tPMortPisc - tPMortPiscBot - tPMortPiscPO4;
tPMigrPisc = kMigrPisc *(cPDPisc * cDPiscIn - aPPisc);
tPHarvPisc = cPDPisc * tDHarvPisc;
afNAssPisc = MIN(1.0, ((cNDPisc / rNDFoodPisc * fDAssPisc) / (tDConsPiscNut / tDConsPisc )) );
tNAssPisc = afNAssPisc * tNConsPiscNut;
tNEgesPisc = tNConsPiscNut - tNAssPisc;
tNEgesPiscNH4 = fDissEgesPisc * tNEgesPisc;
tNEgesPiscDet = tNEgesPisc - tNEgesPiscNH4;
tNExcrPisc = cNDPisc * tDRespPisc;
tNMortPisc = cNDPisc * tDMortPisc;
tNMortPiscBot = fDBone * tNMortPisc;
tNMortPiscNH4 = fDissMortPisc *(tNMortPisc - tNMortPiscBot);
tNMortPiscDet = tNMortPisc - tNMortPiscBot - tNMortPiscNH4;
tNMigrPisc = kMigrPisc *(cNDPisc * cDPiscIn - aNPisc);
tNHarvPisc = cNDPisc * tDHarvPisc;
tDWebBent = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tDMigrBent + tDAssBent - tDConsFiAd - tDRespBent - tDMortBent ENDIF;
tPWebBent = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPMigrBent + tPAssBent - tPConsFiAd - tPExcrBent - tPMortBent ENDIF;
tNWebBent = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNMigrBent + tNAssBent - tNConsFiAd - tNExcrBent - tNMortBent ENDIF;
tDWebFiJv = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tDMigrFiJv + tDReprFish - tDAgeFish + tDAssFiJv - tDRespFiJv - tDMortFiJv - tDConsFiJvPiscNut ENDIF;
tPWebFiJv = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPMigrFiJv + tPReprFish - tPAgeFish + tPAssFiJv - tPExcrFiJv - tPMortFiJv - tPConsFiJvPiscNut ENDIF;
tNWebFiJv =IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNMigrFiJv + tNReprFish - tNAgeFish + tNAssFiJv - tNExcrFiJv - tNMortFiJv - tNConsFiJvPiscNut ENDIF;
tDWebFiAd = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tDMigrFiAd + tDAssFiAd - tDRespFiAd - tDMortFiAd - tDReprFish + tDAgeFish - tDConsFiAdPiscNut - tDHarvFish ENDIF;
tPWebFiAd = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPMigrFiAd + tPAssFiAd - tPExcrFiAd - tPMortFiAd - tPReprFish + tPAgeFish - tPConsFiAdPiscNut - tPHarvFish ENDIF;
tNWebFiAd = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNMigrFiAd + tNAssFiAd - tNExcrFiAd - tNMortFiAd - tNReprFish + tNAgeFish - tNConsFiAdPiscNut - tNHarvFish ENDIF;
tDWebPisc = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tDMigrPisc + tDAssPisc - tDRespPisc - tDMortPisc - tDHarvPisc ENDIF;
wDWebZooHyp = IF (FALSE EQ InclWeb OR aInclStrat EQ FALSE) THEN 0.0 ELSE wDAssZooHyp - wDRespZooHyp - wDMortZooHyp - tDConsFiJv * (( aDTotZoo - oDZooEpi * uDepthWEpi) / (aDTotZoo + NearZero)) / uDepthWHyp ENDIF;
wDWebDetWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsDetZooHyp + wDEgesZooHyp + wDMortZooHyp +(tDEgesFiJv * uFiJvEgesHyp + tDEgesFiAd * uFiAdEgesHyp + tDMortFiJvDet * uFiJvMortHyp + tDMortFiAdDet * uFiAdMortHyp + tDEgesPiscNut * uPiscEgesHyp + tDMortPiscDet * uPiscMortHyp) / uDepthWHyp ENDIF;
wDWebDiatWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsDiatZooHyp ENDIF;
wDWebGrenWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsGrenZooHyp ENDIF;
wDWebBlueWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsBlueZooHyp ENDIF;
wDWebZooEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wDAssZooEpi - wDRespZooEpi - wDMortZooEpi - tDConsFiJv * (oDZooEpi * uDepthWEpi / (aDTotZoo + NearZero) ) / uDepthWEpi ENDIF;
wDWebDetWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsDetZooEpi + wDEgesZooEpi + wDMortZooEpi +(tDEgesFiJv * ( 1.0 - uFiJvEgesHyp ) + tDEgesFiAd * ( 1.0 - uFiAdEgesHyp ) + tDMortFiJvDet * ( 1.0 - uFiJvMortHyp ) + tDMortFiAdDet * ( 1.0 - uFiAdMortHyp ) + tDEgesPiscNut * ( 1.0 - uPiscEgesHyp ) + tDMortPiscDet * ( 1.0 - uPiscMortHyp)) / uDepthWEpi ENDIF;
wDWebDiatWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsDiatZooEpi ENDIF;
wDWebGrenWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsGrenZooEpi ENDIF;
wDWebBlueWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDConsBlueZooEpi ENDIF;
tDWebBlueSurf = IF (InclWeb EQ FALSE OR InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE - tDConsBlueZooSurf ENDIF;
tDWebTotT = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wDRespZooEpi * uDepthWEpi - wDRespZooHyp * uDepthWHyp + tDMigrFiJv + tDMigrFiAd + tDMigrPisc + tDMigrBent - tDRespFiJv - tDRespFiAd - tDRespPisc - tDRespBent - tDMortFiJvBot - tDMortFiAdBot- tDMortPiscBot - tDHarvFish - tDHarvPisc ENDIF;
wPWebZooHyp = IF (FALSE EQ InclWeb OR aInclStrat EQ FALSE) THEN 0.0 ELSE wPAssZooHyp - wPExcrZooHyp - wPMortZooHyp - tPConsFiJv * (( aPTotZoo - oPZooEpi * uDepthWEpi ) / (aPTotZoo + NearZero) ) / uDepthWHyp ENDIF;
wPWebPO4WHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wPExcrZooHyp + wPEgesZooPO4Hyp + wPMortZooPO4Hyp +(tPExcrFiJv *uFiJvExcrHyp + tPExcrFiAd * uFiAdExcrHyp + tPEgesFiJvPO4 * uFiJvEgesHyp + tPEgesFiAdPO4 * uFiAdEgesHyp + tPMortFiJvPO4 * uFiJvMortHyp + tPMortFiAdPO4 * uFiAdMortHyp+ tPExcrPisc * uPiscExcrHyp + tPEgesPiscPO4 * uPiscEgesHyp + tPMortPiscPO4 * uPiscMortHyp ) / uDepthWHyp ENDIF;
wPWebDetWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsDetZooHyp + wPEgesZooDetHyp + wPMortZooDetHyp +(tPEgesFiJvDet * uFiJvEgesHyp + tPEgesFiAdDet * uFiAdEgesHyp+ tPMortFiJvDet * uFiJvMortHyp + tPMortFiAdDet * uFiAdMortHyp+ tPEgesPiscDet * uPiscEgesHyp+ tPMortPiscDet * uPiscMortHyp) / uDepthWHyp ENDIF;
wPWebDiatWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsDiatZooHyp ENDIF;
wPWebGrenWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsGrenZooHyp ENDIF;
wPWebBlueWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsBlueZooHyp ENDIF;
wPWebZooEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wPAssZooEpi - wPExcrZooEpi - wPMortZooEpi - tPConsFiJv * (oPZooEpi * uDepthWEpi / (aPTotZoo + NearZero)) / uDepthWEpi ENDIF;
wPWebPO4WEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wPExcrZooEpi + wPEgesZooPO4Epi + wPMortZooPO4Epi +(tPExcrFiJv * ( 1.0 -uFiJvExcrHyp ) + tPExcrFiAd * ( 1.0 - uFiAdExcrHyp )+ tPEgesFiJvPO4 * ( 1.0 - uFiJvEgesHyp ) + tPEgesFiAdPO4 * ( 1.0 - uFiAdEgesHyp ) + tPMortFiJvPO4 * ( 1.0 - uFiJvMortHyp ) + tPMortFiAdPO4 * ( 1.0 - uFiAdMortHyp )+ tPExcrPisc * ( 1.0 - uPiscExcrHyp ) + tPEgesPiscPO4 * ( 1.0 - uPiscEgesHyp ) + tPMortPiscPO4 * ( 1.0 - uPiscMortHyp)) / uDepthWEpi ENDIF;
wPWebDetWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsDetZooEpi + wPEgesZooDetEpi + wPMortZooDetEpi +(tPEgesFiJvDet * ( 1.0 - uFiJvEgesHyp ) + tPEgesFiAdDet * ( 1.0 - uFiAdEgesHyp )+ tPMortFiJvDet * ( 1.0 - uFiJvMortHyp ) + tPMortFiAdDet * ( 1.0 - uFiAdMortHyp )+ tPEgesPiscDet * ( 1.0 - uPiscEgesHyp )+ tPMortPiscDet * ( 1.0 - uPiscMortHyp )) / uDepthWEpi ENDIF;
wPWebDiatWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsDiatZooEpi ENDIF;
wPWebGrenWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsGrenZooEpi ENDIF;
wPWebBlueWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wPConsBlueZooEpi ENDIF;
tPWebBlueSurf = IF (InclWeb EQ FALSE OR InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE - tPConsBlueZooSurf ENDIF;
tPWebTotT = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tPMigrFiJv + tPMigrFiAd + tPMigrPisc + tPMigrBent - tPMortFiJvBot - tPMortFiAdBot- tPMortPiscBot - tPHarvFish - tPHarvPisc ENDIF;
tNEgesFiAdNH4 = fDissEgesFish * tNEgesFiAd;
tNEgesFiAdDet = tNEgesFiAd - tNEgesFiAdNH4;
wNWebNO3WHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE 0.0 ENDIF;
wNWebNO3WEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE 0.0 ENDIF;
wNWebZooHyp = IF (FALSE EQ InclWeb OR aInclStrat EQ FALSE) THEN 0.0 ELSE wNAssZooHyp - wNExcrZooHyp - wNMortZooHyp - tNConsFiJv * (( aNTotZoo -oNZooEpi * uDepthWEpi ) / (aNTotZoo + NearZero) ) / uDepthWHyp ENDIF;
wNWebNH4WHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wNExcrZooHyp + wNEgesZooNH4Hyp + wNMortZooNH4Hyp +(tNExcrFiJv * uFiJvExcrHyp + tNExcrFiAd * uFiAdExcrHyp + tNEgesFiJvNH4 * uFiJvEgesHyp+ tNEgesFiAdNH4 * uFiAdEgesHyp + tNMortFiAdNH4 *uFiAdMortHyp+ tNMortFiJvNH4*uFiJvMortHyp + tNExcrPisc *uPiscExcrHyp + tNEgesPiscNH4 *uPiscEgesHyp + tNMortPiscNH4 *uPiscMortHyp) / uDepthWHyp ENDIF;
wNWebDetWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsDetZooHyp + wNEgesZooDetHyp + wNMortZooDetHyp +(tNEgesFiJvDet * uFiJvEgesHyp +tNEgesFiAdDet * uFiAdEgesHyp+ tNMortFiJvDet * uFiJvMortHyp + tNMortFiAdDet * uFiAdMortHyp + tNEgesPiscDet * uPiscEgesHyp + tNMortPiscDet * uPiscMortHyp) / uDepthWHyp ENDIF;
wNWebDiatWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsDiatZooHyp ENDIF;
wNWebGrenWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsGrenZooHyp ENDIF;
wNWebBlueWHyp = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsBlueZooHyp ENDIF;
wNWebZooEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wNAssZooEpi - wNExcrZooEpi - wNMortZooEpi - tNConsFiJv * (oNZooEpi * uDepthWEpi / (aNTotZoo + NearZero) ) / uDepthWEpi ENDIF;
wNWebNH4WEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wNExcrZooEpi + wNEgesZooNH4Epi + wNMortZooNH4Epi +(tNExcrFiJv * ( 1.0 - uFiJvExcrHyp) + tNExcrFiAd * ( 1.0 - uFiAdExcrHyp) + tNEgesFiJvNH4 * ( 1.0 - uFiJvEgesHyp ) + tNEgesFiAdNH4 * ( 1.0 - uFiAdEgesHyp ) + tNMortFiAdNH4 * ( 1.0 -uFiAdMortHyp ) + tNMortFiJvNH4* ( 1.0 -uFiJvMortHyp) + tNExcrPisc * ( 1.0 -uPiscExcrHyp ) + tNEgesPiscNH4 * ( 1.0 -uPiscEgesHyp ) + tNMortPiscNH4 * ( 1.0 -uPiscMortHyp)) / uDepthWEpi ENDIF;
wNWebDetWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsDetZooEpi + wNEgesZooDetEpi + wNMortZooDetEpi +(tNEgesFiJvDet * ( 1.0 - uFiJvEgesHyp ) +tNEgesFiAdDet * ( 1.0 - uFiAdEgesHyp ) + tNMortFiJvDet * ( 1.0 - uFiJvMortHyp ) + tNMortFiAdDet * ( 1.0 - uFiAdMortHyp ) + tNEgesPiscDet * ( 1.0 - uPiscEgesHyp ) + tNMortPiscDet * ( 1.0 - uPiscMortHyp )) / uDepthWEpi ENDIF;
wNWebDiatWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsDiatZooEpi ENDIF;
wNWebGrenWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsGrenZooEpi ENDIF;
wNWebBlueWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE - wNConsBlueZooEpi ENDIF;
tNWebBlueSurf = IF (InclWeb EQ FALSE OR InclSurf EQ FALSE OR aDBlueSurf LT cDBlueSurfMin) THEN 0.0 ELSE - tNConsBlueZooSurf ENDIF;
tNWebTotT = IF (FALSE EQ InclWeb) THEN 0.0 ELSE tNMigrFiJv + tNMigrFiAd + tNMigrPisc + tNMigrBent - tNMortFiJvBot- tNMortFiAdBot - tNMortPiscBot - tNHarvFish - tNHarvPisc ENDIF;
wSiWebDetWEpi = IF (FALSE EQ InclWeb) THEN 0.0 ELSE wSiConsDiatZooEpi ENDIF;
aPrefAveEpi = (cPrefDiat * oDDiatWEpi + cPrefGren * oDGrenWEpi + cPrefBlue * oDBlueWEpi + cPrefDet * oDDetWEpi) / oDOMWEpi;
wDConsZoo2Epi = aFiltEpi * aPrefAveEpi * oDOMWEpi * oDZooEpi;
aDConsZooSpEpi = wDConsZooEpi / oDZooEpi;
aDAssZooSpEpi = wDAssZooEpi / oDZooEpi;
aDGrazSpEpi = wDConsZooEpi / oDOMWEpi;
aPConsZooSpEpi = wPConsZooEpi / oPZooEpi;
aPGrazSpEpi = wPConsZooEpi / oPOMWEpi;
aNConsZooSpEpi = wNConsZooEpi / oNZooEpi;
aNGrazSpEpi = wNConsZooEpi / oNOMWEpi;
tDSetTotEpi = tDSetIMEpi + tDSetDetEpi + tDSetPhytEpi;
tPSetTotEpi = tPSetAIMEpi + tPSetDetEpi + tPSetPhytEpi;
tNSetTotEpi = tNSetDetEpi + tNSetPhytEpi;
tDResusTot = tDResusDead + tDResusPhytTot;
tPResusTot = tPResusDet + tPResusAIM + tPResusPhyt + tPResusPO4;
tNResusTot = tNResusDet + tNResusNH4 + tNResusNO3 + tNResusPhyt;
aDepthStart = IF (sTime EQ bTimeDred) THEN uDepthW ELSE aDepthStart ENDIF;
akDredDepth = IF ((sTime GE bTimeDred) AND (sTime LT bTimeDred + cLengDred) AND (aDepthStart LE cDepthRef - cDepthS)) THEN (LN(cDepthRef / aDepthStart)) / cLengDred ELSE 0.0 ENDIF;
akDred = IF ((sTime GE bTimeDred) AND (sTime LT bTimeDred + cLengDred) AND (aDepthStart LE cDepthRef - cDepthS)) THEN (- LN(1.0 - fEffDred)) / cLengDred ELSE 0.0 ENDIF;
akDredBent = IF ((sTime GE bTimeDred) AND (sTime LT bTimeDred + cLengDred) AND (aDepthStart LE cDepthRef - cDepthS)) THEN (- LN(1.0 - fEffDredBent)) / cLengDred ELSE 0.0 ENDIF;
vDredDepthW =IF (aInclStrat EQ TRUE) THEN 0.0 ELSE akDredDepth * uDepthW ENDIF;
tDDredDetS = akDred * aDDetS;
tPDredDetS = akDred * aPDetS;
tNDredDetS = akDred * aNDetS;
tSiDredDetS = akDred * aSiDetS;
tPDredAIMS = akDred * aPAIMS;
tDDredNetSoil = -(tDDredDetS / cRhoOM) * bRhoSolidSoil;
tDDredNetIMS = (1.0 - fDOrgSoil) * tDDredNetSoil;
tDDredNetHumS = fDOrgSoil * tDDredNetSoil;
tPDredNetHumS = cPDSoilOM * tDDredNetHumS;
tNDredNetHumS = cNDSoilOM * tDDredNetHumS;
tDDredDiatS = akDred * aDDiatS;
tPDredDiatS = akDred * aPDiatS;
tNDredDiatS = akDred * aNDiatS;
tDDredGrenS = akDred * aDGrenS;
tPDredGrenS = akDred * aPGrenS;
tNDredGrenS = akDred * aNGrenS;
tDDredBlueS = akDred * aDBlueS;
tPDredBlueS = akDred * aPBlueS;
tNDredBlueS = akDred * aNBlueS;
tDDredPhytS = tDDredDiatS+tDDredGrenS+tDDredBlueS;
tPDredPhytS = tPDredDiatS+tPDredGrenS+tPDredBlueS;
tNDredPhytS = tNDredDiatS+tNDredGrenS+tNDredBlueS;
tDDredBent = IF (InclWeb EQ TRUE) THEN akDredBent * aDBent ELSE 0.0 ENDIF;
tPDredBent = IF (InclWeb EQ TRUE) THEN akDredBent * aPBent ELSE 0.0 ENDIF;
tNDredBent = IF (InclWeb EQ TRUE) THEN akDredBent * aNBent ELSE 0.0 ENDIF;
tDDredVeg = akDred * aDVeg;
tPDredVeg = akDred * aPVeg;
tNDredVeg = akDred * aNVeg;
tDDredNetTot = tDDredDetS - tDDredNetSoil + tDDredPhytS + tDDredBent + tDDredVeg;
tPDredNetTot = tPDredDetS - tPDredNetHumS + tPDredAIMS + tPDredPhytS + tPDredBent + tPDredVeg;
tNDredNetTot = tNDredDetS - tNDredNetHumS + tNDredPhytS + tNDredBent + tNDredVeg;
tSiDredTot = tSiDredDetS + cSiDDiat * tDDredDiatS;
tDIMS = tDAbioIMS;
tDHumS = tDAbioHumS;
tDDetS = tDAbioDetS + tDPrimDetS + tDWebDetS + tDBedDetSEpi + tDBedDetSHyp;
vDeltaS = (tDIMS / cRhoIM +(tDHumS + tDDetS) / cRhoOM)/(1.0 - bPorS);
vDeltaW = IF (ConstDepth EQ TRUE ) THEN 0.0 ELSE - vDeltaS ENDIF;
tDBurIM = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN ((tDHumS + tDDetS) +(cRhoOM / cRhoIM) * tDIMS) / ((aDHumS + aDDetS) / aDIMS + cRhoOM / cRhoIM) ELSE ((tDHumS + tDDetS) +(cRhoOM / cRhoIM) * tDIMS) / (fDOrgSoil /(1.0 - fDOrgSoil) + cRhoOM / cRhoIM) ENDIF;
tDBurOM = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN (aDHumS + aDDetS) / aDIMS * tDBurIM ELSE fDOrgSoil /(1.0 - fDOrgSoil) * tDBurIM ENDIF;
tDBurDet = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN aDDetS /(aDHumS + aDDetS) * tDBurOM ELSE 0.0 ENDIF;
tDBurHum = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN tDBurOM - tDBurDet ELSE tDBurOM ENDIF;
tDBurTot =IF (InclBur EQ FALSE) THEN 0.0 ELSEIF(vDeltaS GE 0.0) THEN tDBurIM + tDBurOM ELSE tDBurIM + tDBurOM ENDIF;
tPBurHum = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN rPDHumS * tDBurHum ELSE cPDSoilOM * tDBurHum ENDIF;
tPBurDet = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF(vDeltaS GE 0.0) THEN rPDDetS * tDBurDet ELSE 0.0 ENDIF;
tPBurAIM = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN aPAIMS / aDIMS * tDBurIM ELSE 0.0 ENDIF;
tPBurPO4 = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN aPO4S *(vDeltaS / cDepthS) ELSE cPO4Ground *(bPorS * vDeltaS) ENDIF;
tPBurTot = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN tPBurDet + tPBurHum + tPBurAIM + tPBurPO4 ELSE tPBurHum + tPBurAIM + tPBurPO4 ENDIF;
tNBurHum = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN rNDHumS * tDBurHum ELSE cNDSoilOM * tDBurHum ENDIF;
tNBurDet = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN rNDDetS * tDBurDet ELSE 0.0 ENDIF;
tNBurNH4 = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN aNH4S *(vDeltaS / cDepthS) ELSE cNH4Ground *(bPorS * vDeltaS) ENDIF;
tNBurNO3 = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN aNO3S *(vDeltaS / cDepthS) ELSE cNO3Ground *(bPorS * vDeltaS) ENDIF;
tNBurTot = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN tNBurDet + tNBurHum + tNBurNH4 + tNBurNO3 ELSE tNBurHum + tNBurNH4 + tNBurNO3 ENDIF;
tSiBurDet = IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN rSiDDetS * tDBurDet ELSE 0.0 ENDIF;
tSiBurTot =IF (InclBur EQ FALSE) THEN 0.0 ELSEIF (vDeltaS GE 0.0) THEN tSiBurDet ELSE 0.0 ENDIF;
aRelDeltaWEpi = IF ( aInclStrat EQ TRUE ) THEN (vDeltaW ) / uDepthWEpi ELSE (vDeltaW + vDredDepthW) / uDepthWEpi ENDIF;
aRelDeltaWHyp = IF ( aInclStrat EQ FALSE ) THEN 0.0 ELSE (vDeltaW + vDredDepthW) / uDepthWHyp ENDIF ;
aPFish = aPFiJv + aPFiAd;
aNFish = aNFiJv + aNFiAd;
aDRelTotT = uDepthWHyp * aRelDeltaWHyp * ( oDDetWHyp + oDIMWHyp + oDDiatWHyp + oDGrenWHyp + oDBlueWHyp + oDZooHyp ) + fMarsh * uDepthWM * aRelDeltaWM * ( oDDetWM + oDIMWM + oDDiatWM + oDGrenWM + oDBlueWM + oDZooM) + uDepthWEpi * aRelDeltaWEpi * (oDDetWEpi + oDIMWEpi + oDDiatWEpi + oDGrenWEpi + oDBlueWEpi + oDZooEpi );
aNRelTotT = uDepthWHyp * aRelDeltaWHyp * ( oNH4WHyp + oNO3WHyp + oNDetWHyp + oNDiatWHyp + oNGrenWHyp + oNBlueWHyp + oNZooHyp ) + fMarsh * uDepthWM * aRelDeltaWM * ( oNH4WM + oNO3WM + oNDetWM + oNDiatWM + oNGrenWM + oNBlueWM + oNZooM ) + uDepthWEpi * aRelDeltaWEpi * ( oNH4WEpi + oNO3WEpi + oNDetWEpi + oNDiatWEpi + oNGrenWEpi + oNBlueWEpi + oNZooEpi );
aPRelTotT = uDepthWHyp * aRelDeltaWHyp * ( oPO4WHyp + oPAIMWHyp + oPDetWHyp + oPDiatWHyp + oPGrenWHyp + oPBlueWHyp + oPZooHyp ) + fMarsh * uDepthWM * aRelDeltaWM * (oPO4WM + oPAIMWM + oPDetWM + oPDiatWM + oPGrenWM + oPBlueWM + oPZooM ) + uDepthWEpi * aRelDeltaWEpi * (oPO4WEpi + oPAIMWEpi + oPDetWEpi + oPDiatWEpi + oPGrenWEpi + oPBlueWEpi + oPZooEpi );
aSiRelTotT = uDepthWHyp * aRelDeltaWHyp * ( oSiO2WHyp + oSiDetWHyp + cSiDDiat*oDDiatWHyp) + fMarsh * uDepthWM * aRelDeltaWM * ( oSiO2WM + oSiDetWM + cSiDDiat*oDDiatWM) + uDepthWEpi * aRelDeltaWEpi * ( oSiO2WEpi + oSiDetWEpi + cSiDDiat*oDDiatWEpi);
aO2RelTotT = uDepthWHyp * aRelDeltaWHyp* oO2WHyp + fMarsh * uDepthWM * aRelDeltaWM * oO2WM + uDepthWEpi * aRelDeltaWEpi * oO2WEpi ;
aDTotTHyp = IF (aInclStrat EQ TRUE) THEN (oDIMWHyp+oDDetWHyp+oDDiatWHyp+oDGrenWHyp+oDBlueWHyp+oDZooHyp) * uDepthWHyp ELSE 0.0 ENDIF;
aNTotTHyp = IF (aInclStrat EQ TRUE) THEN (oNH4WHyp+oNO3WHyp+oNDetWHyp+oNDiatWHyp+oNGrenWHyp+oNBlueWHyp +oNZooHyp)*uDepthWHyp ELSE 0.0 ENDIF;
aPTotTHyp = IF (aInclStrat EQ TRUE) THEN (oPO4WHyp+oPDetWHyp+oPDiatWHyp+oPGrenWHyp+oPBlueWHyp +oPZooHyp+oPAIMWHyp) * uDepthWHyp ELSE 0.0 ENDIF;
aSiTotTHyp = IF (aInclStrat EQ TRUE) THEN (oSiO2WHyp + oSiDetWHyp + cSiDDiat*oDDiatWHyp) *uDepthWHyp ELSE 0.0 ENDIF;
aO2TotTHyp = IF (aInclStrat EQ TRUE) THEN (oO2WHyp ) *uDepthWHyp ELSE 0.0 ENDIF;
aDTotT = aDTotTHyp + (oDIMWEpi+oDDetWEpi+oDDiatWEpi+oDGrenWEpi+oDBlueWEpi+oDZooEpi) * uDepthWEpi +aDFish+aDPisc+aDVeg +aDIMS+aDHumS+aDDetS+aDDiatS+aDGrenS+aDBlueS+aDBent + aDTotM + aDBlueSurf;
aNTotT = aNTotTHyp+ (oNH4WEpi+oNO3WEpi+oNDetWEpi+oNDiatWEpi+oNGrenWEpi+oNBlueWEpi +oNZooEpi)*uDepthWEpi +aNFish+aNPisc+aNVeg +aNH4S+aNO3S+aNDetS+aNHumS+aNDiatS+aNGrenS+aNBlueS +aNBent + aNTotM + aNBlueSurf;
aPTotT = aPTotTHyp + (oPO4WEpi+oPDetWEpi+oPDiatWEpi+oPGrenWEpi+oPBlueWEpi +oPZooEpi+oPAIMWEpi) * uDepthWEpi +aPFish+aPPisc+aPVeg +aPO4S+aPDetS+aPHumS+aPDiatS+aPGrenS+aPBlueS +aPAIMS+aPBent + aPTotM +aPBlueSurf;
aSiTotT = aSiTotTHyp + (oSiO2WEpi + oSiDetWEpi + cSiDDiat*oDDiatWEpi) *uDepthWEpi + aSiDetS + cSiDDiat*aDDiatS + aSiTotM;
aO2TotT = aO2TotTHyp + ( oO2WEpi) *uDepthWEpi + aO2TotM;
tDBedTotT = IF InclVeg EQ TRUE THEN tDMigrVeg + tDProdVegHyp+ tDProdVegEpi - tDRespVeg - tDManVeg - tDAssVegBird ELSE 0.0 ENDIF;
tPBedTotT = IF InclVeg EQ TRUE THEN tPMigrVeg - tPManVeg - tPAssVegBird ELSE 0.0 ENDIF;
tNBedTotT = IF InclVeg EQ TRUE THEN tNMigrVeg - tNManVeg - tNAssVegBird ELSE 0.0 ENDIF ;
aDError = aDTotT - aDExtTotT;
aNError = aNTotT - aNExtTotT;
aPError = aPTotT - aPExtTotT;
aSiError = aSiTotT - aSiExtTotT;
aO2Error = aO2TotT - aO2ExtTotT;
aDepthError = sDepthW - aDepthExtTotT;
cCheckVegHeight = IF ( aVegWin EQ 1 AND  uVegHeight LT MIN (cVegHeightWin, uDepthW) ) THEN 1.0 ELSEIF ( aVegWin EQ 1 AND  uVegHeight GT MIN (cVegHeightWin, uDepthW) ) THEN 2.0 ELSEIF ( aVegWin EQ 0 AND  uVegHeight LT MIN (cVegHeight, uDepthW) ) THEN  3.0 ELSEIF ( aVegWin EQ 0 AND  uVegHeight GT MIN (cVegHeight, uDepthW) ) THEN 4.0 ELSE 0.0 ENDIF;
